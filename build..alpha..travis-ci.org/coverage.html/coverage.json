{"/home/travis/build/npmtest/node-npmtest-nodal/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_nodal */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-nodal/lib.npmtest_nodal.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/lib.npmtest_nodal.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_nodal */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_nodal = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_nodal = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-nodal/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":63},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-nodal && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_nodal */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_nodal","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_nodal.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_nodal.rollup.js'] =","            local.assetsDict['/assets.npmtest_nodal.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_nodal.__dirname +","                    '/lib.npmtest_nodal.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/module.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/module.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":1,"9":2,"10":1,"11":2,"12":0,"13":2,"14":2,"15":2,"16":4,"17":4,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":1,"30":6,"31":4,"32":4,"33":1,"34":16,"35":14,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[2,1],"4":[0,0],"5":[2,1],"6":[2,1],"7":[2,1],"8":[4,1],"9":[4,1],"10":[2,1],"11":[2,1],"12":[2,1],"13":[2,1],"14":[2,1],"15":[2,1],"16":[2,1],"17":[2,1],"18":[2,1],"19":[2,1],"20":[2,1],"21":[6,6],"22":[4,1],"23":[4,4],"24":[16,1],"25":[14,1]},"f":{"1":0,"2":0,"3":2,"4":2,"5":0,"6":2,"7":2,"8":2,"9":4,"10":4,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":6,"23":4,"24":4,"25":16,"26":14},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":24},"end":{"line":7,"column":38}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":26},"end":{"line":10,"column":40}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":30}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":9},"end":{"line":61,"column":20}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":9},"end":{"line":67,"column":20}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":9},"end":{"line":72,"column":20}}},"7":{"name":"(anonymous_7)","line":78,"loc":{"start":{"line":78,"column":9},"end":{"line":78,"column":20}}},"8":{"name":"(anonymous_8)","line":84,"loc":{"start":{"line":84,"column":9},"end":{"line":84,"column":20}}},"9":{"name":"(anonymous_9)","line":90,"loc":{"start":{"line":90,"column":9},"end":{"line":90,"column":20}}},"10":{"name":"(anonymous_10)","line":96,"loc":{"start":{"line":96,"column":9},"end":{"line":96,"column":20}}},"11":{"name":"(anonymous_11)","line":102,"loc":{"start":{"line":102,"column":9},"end":{"line":102,"column":20}}},"12":{"name":"(anonymous_12)","line":108,"loc":{"start":{"line":108,"column":9},"end":{"line":108,"column":20}}},"13":{"name":"(anonymous_13)","line":114,"loc":{"start":{"line":114,"column":9},"end":{"line":114,"column":20}}},"14":{"name":"(anonymous_14)","line":120,"loc":{"start":{"line":120,"column":9},"end":{"line":120,"column":20}}},"15":{"name":"(anonymous_15)","line":126,"loc":{"start":{"line":126,"column":9},"end":{"line":126,"column":20}}},"16":{"name":"(anonymous_16)","line":132,"loc":{"start":{"line":132,"column":9},"end":{"line":132,"column":20}}},"17":{"name":"(anonymous_17)","line":138,"loc":{"start":{"line":138,"column":9},"end":{"line":138,"column":20}}},"18":{"name":"(anonymous_18)","line":144,"loc":{"start":{"line":144,"column":9},"end":{"line":144,"column":20}}},"19":{"name":"(anonymous_19)","line":150,"loc":{"start":{"line":150,"column":9},"end":{"line":150,"column":20}}},"20":{"name":"(anonymous_20)","line":156,"loc":{"start":{"line":156,"column":9},"end":{"line":156,"column":20}}},"21":{"name":"(anonymous_21)","line":162,"loc":{"start":{"line":162,"column":9},"end":{"line":162,"column":20}}},"22":{"name":"(anonymous_22)","line":171,"loc":{"start":{"line":171,"column":9},"end":{"line":171,"column":20}}},"23":{"name":"(anonymous_23)","line":177,"loc":{"start":{"line":177,"column":9},"end":{"line":177,"column":20}}},"24":{"name":"(anonymous_24)","line":183,"loc":{"start":{"line":183,"column":9},"end":{"line":183,"column":20}}},"25":{"name":"(anonymous_25)","line":192,"loc":{"start":{"line":192,"column":9},"end":{"line":192,"column":20}}},"26":{"name":"(anonymous_26)","line":198,"loc":{"start":{"line":198,"column":9},"end":{"line":198,"column":20}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":45}},"5":{"start":{"line":10,"column":0},"end":{"line":12,"column":3}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":47}},"7":{"start":{"line":14,"column":0},"end":{"line":42,"column":2}},"8":{"start":{"line":46,"column":0},"end":{"line":57,"column":2}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":51}},"10":{"start":{"line":59,"column":0},"end":{"line":167,"column":3}},"11":{"start":{"line":62,"column":6},"end":{"line":62,"column":69}},"12":{"start":{"line":68,"column":6},"end":{"line":68,"column":75}},"13":{"start":{"line":73,"column":6},"end":{"line":73,"column":93}},"14":{"start":{"line":79,"column":6},"end":{"line":79,"column":90}},"15":{"start":{"line":85,"column":6},"end":{"line":85,"column":65}},"16":{"start":{"line":91,"column":6},"end":{"line":91,"column":78}},"17":{"start":{"line":97,"column":6},"end":{"line":97,"column":87}},"18":{"start":{"line":103,"column":6},"end":{"line":103,"column":91}},"19":{"start":{"line":109,"column":6},"end":{"line":109,"column":88}},"20":{"start":{"line":115,"column":6},"end":{"line":115,"column":90}},"21":{"start":{"line":121,"column":6},"end":{"line":121,"column":72}},"22":{"start":{"line":127,"column":6},"end":{"line":127,"column":75}},"23":{"start":{"line":133,"column":6},"end":{"line":133,"column":91}},"24":{"start":{"line":139,"column":6},"end":{"line":139,"column":97}},"25":{"start":{"line":145,"column":6},"end":{"line":145,"column":112}},"26":{"start":{"line":151,"column":6},"end":{"line":151,"column":78}},"27":{"start":{"line":157,"column":6},"end":{"line":157,"column":87}},"28":{"start":{"line":163,"column":6},"end":{"line":163,"column":109}},"29":{"start":{"line":169,"column":0},"end":{"line":188,"column":3}},"30":{"start":{"line":172,"column":6},"end":{"line":172,"column":78}},"31":{"start":{"line":178,"column":6},"end":{"line":178,"column":78}},"32":{"start":{"line":184,"column":6},"end":{"line":184,"column":96}},"33":{"start":{"line":190,"column":0},"end":{"line":203,"column":3}},"34":{"start":{"line":193,"column":6},"end":{"line":193,"column":81}},"35":{"start":{"line":199,"column":6},"end":{"line":199,"column":100}},"36":{"start":{"line":205,"column":0},"end":{"line":205,"column":27}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":28}},{"start":{"line":8,"column":31},"end":{"line":8,"column":44}}]},"2":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":24},"end":{"line":11,"column":28}},{"start":{"line":11,"column":31},"end":{"line":11,"column":46}}]},"3":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":13},"end":{"line":62,"column":22}},{"start":{"line":62,"column":27},"end":{"line":62,"column":67}}]},"4":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":13},"end":{"line":68,"column":30}},{"start":{"line":68,"column":35},"end":{"line":68,"column":73}}]},"5":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":13},"end":{"line":73,"column":30}},{"start":{"line":73,"column":35},"end":{"line":73,"column":91}}]},"6":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":13},"end":{"line":79,"column":29}},{"start":{"line":79,"column":34},"end":{"line":79,"column":88}}]},"7":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":13},"end":{"line":85,"column":22}},{"start":{"line":85,"column":27},"end":{"line":85,"column":63}}]},"8":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":13},"end":{"line":91,"column":25}},{"start":{"line":91,"column":30},"end":{"line":91,"column":76}}]},"9":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":13},"end":{"line":97,"column":27}},{"start":{"line":97,"column":32},"end":{"line":97,"column":85}}]},"10":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":13},"end":{"line":103,"column":29}},{"start":{"line":103,"column":34},"end":{"line":103,"column":89}}]},"11":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":13},"end":{"line":109,"column":28}},{"start":{"line":109,"column":33},"end":{"line":109,"column":86}}]},"12":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":13},"end":{"line":115,"column":28}},{"start":{"line":115,"column":33},"end":{"line":115,"column":88}}]},"13":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":13},"end":{"line":121,"column":23}},{"start":{"line":121,"column":28},"end":{"line":121,"column":70}}]},"14":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":13},"end":{"line":127,"column":24}},{"start":{"line":127,"column":29},"end":{"line":127,"column":73}}]},"15":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":13},"end":{"line":133,"column":29}},{"start":{"line":133,"column":34},"end":{"line":133,"column":89}}]},"16":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":13},"end":{"line":139,"column":31}},{"start":{"line":139,"column":36},"end":{"line":139,"column":95}}]},"17":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":13},"end":{"line":145,"column":36}},{"start":{"line":145,"column":41},"end":{"line":145,"column":110}}]},"18":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":13},"end":{"line":151,"column":25}},{"start":{"line":151,"column":30},"end":{"line":151,"column":76}}]},"19":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":13},"end":{"line":157,"column":28}},{"start":{"line":157,"column":33},"end":{"line":157,"column":85}}]},"20":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":13},"end":{"line":163,"column":34}},{"start":{"line":163,"column":39},"end":{"line":163,"column":107}}]},"21":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":13},"end":{"line":172,"column":28}},{"start":{"line":172,"column":33},"end":{"line":172,"column":76}}]},"22":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":13},"end":{"line":178,"column":28}},{"start":{"line":178,"column":33},"end":{"line":178,"column":76}}]},"23":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":13},"end":{"line":184,"column":34}},{"start":{"line":184,"column":39},"end":{"line":184,"column":94}}]},"24":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":13},"end":{"line":193,"column":29}},{"start":{"line":193,"column":34},"end":{"line":193,"column":79}}]},"25":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":13},"end":{"line":199,"column":35}},{"start":{"line":199,"column":40},"end":{"line":199,"column":98}}]}},"code":["'use strict';","","// This will load dotenv / etc.","const fxn  = require('fxn');","","let types = require('pg').types;","types.setTypeParser(20, function(val) {","  return val === null ? null : parseInt(val);","}); // 64-bit integer","types.setTypeParser(1700, function(val) {","  return val === null ? null : parseFloat(val);","}); // type NUMERIC","","let Nodal = {","  API: null,","  APIResource: null,","  Application: null,","  Controller: null,","  CLI: null,","  Daemon: null,","  Database: null,","  GraphQuery: null,","  ItemArray: null,","  Migration: null,","  Mime: null,","  Model: null,","  ModelArray: null,","  ModelFactory: null,","  RelationshipGraph: null,","  Router: null,","  Scheduler: null,","  SchemaGenerator: null,","  my: {","    Config: null,","    Schema: null,","    bootstrapper: null","  },","  mocha: {","    Test: null,","    TestRunner: null","  }","};","","/* Lazy Loading */","","let LazyNodal = {","  my: {},","  mocha: {},","  require: function(filename) {","    return require(process.cwd() + '/' + filename);","  },","  include: {","    mime: require('mime-types'),","    inflect: require('i')()","  },","  env: require('./env.js')()","};","","Object.defineProperties(LazyNodal, {","  API: {","    get: function() {","      return Nodal.API || (Nodal.API = require('./required/api.js'));","    },","    enumerable: true","  },","  APIResource: {","    get: function() {","      return Nodal.APIResource || (Nodal.APIResource = require('api-res'));","    }","  },","  Application: {","    get: function() {","      return Nodal.Application || (Nodal.Application = require('./required/application.js'));","    },","    enumerable: true","  },","  Controller: {","    get: function() {","      return Nodal.Controller || (Nodal.Controller = require('./required/controller.js'));","    },","    enumerable: true","  },","  CLI: {","    get: function() {","      return Nodal.CLI || (Nodal.CLI = require('../cli/cli.js'));","    },","    enumerable: true","  },","  Daemon: {","    get: function() {","      return Nodal.Daemon || (Nodal.Daemon = require('./required/daemon.js'));","    },","    enumerable: true","  },","  Database: {","    get: function() {","      return Nodal.Database || (Nodal.Database = require('./required/db/database.js'));","    },","    enumerable: true","  },","  GraphQuery: {","    get: function() {","      return Nodal.GraphQuery || (Nodal.GraphQuery = require('./required/graph_query.js'));","    },","    enumerable: true","  },","  ItemArray: {","    get: function() {","      return Nodal.ItemArray || (Nodal.ItemArray = require('./required/item_array.js'));","    },","    enumerable: true","  },","  Migration: {","    get: function() {","      return Nodal.Migration || (Nodal.Migration = require('./required/db/migration.js'));","    },","    enumerable: true","  },","  Mime: {","    get: function() {","      return Nodal.Mime || (Nodal.Mime = require('./required/mime.js'));","    },","    enumerable: true","  },","  Model: {","    get: function() {","      return Nodal.Model || (Nodal.Model = require('./required/model.js'));","    },","    enumerable: true","  },","  ModelArray: {","    get: function() {","      return Nodal.ModelArray || (Nodal.ModelArray = require('./required/model_array.js'));","    },","    enumerable: true","  },","  ModelFactory: {","    get: function() {","      return Nodal.ModelFactory || (Nodal.ModelFactory = require('./required/model_factory.js'));","    },","    enumerable: true","  },","  RelationshipGraph: {","    get: function() {","      return Nodal.RelationshipGraph || (Nodal.RelationshipGraph = require('./required/relationship_graph.js'));","    },","    enumerable: true","  },","  Router: {","    get: function() {","      return Nodal.Router || (Nodal.Router = require('./required/router.js'));","    },","    enumerable: true","  },","  Scheduler: {","    get: function() {","      return Nodal.Scheduler || (Nodal.Scheduler = require('./required/scheduler.js'));","    },","    enumerable: true","  },","  SchemaGenerator: {","    get: function() {","      return Nodal.SchemaGenerator || (Nodal.SchemaGenerator = require('./required/db/schema_generator.js'));","    },","    enumerable: true","  }","});","","Object.defineProperties(LazyNodal.my, {","  Config: {","    get: function() {","      return Nodal.my.Config || (Nodal.my.Config = require('./my/config.js'));","    },","    enumerable: true","  },","  Schema: {","    get: function() {","      return Nodal.my.Schema || (Nodal.my.Schema = require('./my/schema.js'));","    },","    enumerable: true","  },","  bootstrapper: {","    get: function() {","      return Nodal.my.bootstrapper || (Nodal.my.bootstrapper = require('./my/bootstrapper.js'));","    },","    enumerable: true","  }","});","","Object.defineProperties(LazyNodal.mocha, {","  Test: {","    get: function() {","      return Nodal.mocha.Test || (Nodal.mocha.Test = require('./mocha/test.js'));","    },","    enumerable: true","  },","  TestRunner: {","    get: function() {","      return Nodal.mocha.TestRunner || (Nodal.mocha.TestRunner = require('./mocha/test_runner.js'));","    },","    enumerable: true","  }","});","","module.exports = LazyNodal;",""],"l":{"4":1,"6":1,"7":1,"8":0,"10":1,"11":0,"14":1,"46":1,"50":2,"59":1,"62":2,"68":0,"73":2,"79":2,"85":2,"91":4,"97":4,"103":2,"109":2,"115":2,"121":2,"127":2,"133":2,"139":2,"145":2,"151":2,"157":2,"163":2,"169":1,"172":6,"178":4,"184":4,"190":1,"193":16,"199":14,"205":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/env.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/env.js","s":{"1":1,"2":12},"b":{"1":[12,0],"2":[12,12]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":3,"column":2},"end":{"line":6,"column":4}}},"branchMap":{"1":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":10},"end":{"line":4,"column":30}},{"start":{"line":4,"column":34},"end":{"line":4,"column":47}}]},"2":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":19},"end":{"line":5,"column":45}},{"start":{"line":5,"column":49},"end":{"line":5,"column":62}}]}},"code":["module.exports = () => {","","  return {","    name: process.env.NODE_ENV || 'development',","    rootDirectory: process.env.ROOT_DIRECTORY || process.cwd()","  };","","};",""],"l":{"1":1,"3":12}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/api.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/api.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":41}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":6},"end":{"line":30,"column":55}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":7},"end":{"line":53,"column":26}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":7},"end":{"line":62,"column":26}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":10},"end":{"line":82,"column":49}}},"6":{"name":"(anonymous_6)","line":98,"loc":{"start":{"line":98,"column":19},"end":{"line":98,"column":25}}},"7":{"name":"getType","line":100,"loc":{"start":{"line":100,"column":4},"end":{"line":100,"column":24}}},"8":{"name":"(anonymous_8)","line":113,"loc":{"start":{"line":113,"column":38},"end":{"line":113,"column":53}}},"9":{"name":"(anonymous_9)","line":131,"loc":{"start":{"line":131,"column":24},"end":{"line":131,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"4":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"5":{"start":{"line":12,"column":6},"end":{"line":12,"column":50}},"6":{"start":{"line":15,"column":4},"end":{"line":20,"column":5}},"7":{"start":{"line":16,"column":6},"end":{"line":16,"column":55}},"8":{"start":{"line":17,"column":6},"end":{"line":17,"column":48}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":27}},"10":{"start":{"line":19,"column":6},"end":{"line":19,"column":23}},"11":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"12":{"start":{"line":23,"column":6},"end":{"line":23,"column":29}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":44}},"14":{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},"15":{"start":{"line":33,"column":6},"end":{"line":33,"column":16}},"16":{"start":{"line":34,"column":6},"end":{"line":34,"column":16}},"17":{"start":{"line":35,"column":6},"end":{"line":35,"column":17}},"18":{"start":{"line":36,"column":6},"end":{"line":36,"column":22}},"19":{"start":{"line":39,"column":4},"end":{"line":44,"column":6}},"20":{"start":{"line":46,"column":4},"end":{"line":46,"column":40}},"21":{"start":{"line":47,"column":4},"end":{"line":47,"column":43}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"23":{"start":{"line":55,"column":4},"end":{"line":58,"column":6}},"24":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"25":{"start":{"line":65,"column":6},"end":{"line":65,"column":18}},"26":{"start":{"line":68,"column":4},"end":{"line":78,"column":5}},"27":{"start":{"line":84,"column":4},"end":{"line":94,"column":5}},"28":{"start":{"line":100,"column":4},"end":{"line":107,"column":5}},"29":{"start":{"line":101,"column":6},"end":{"line":101,"column":42}},"30":{"start":{"line":102,"column":6},"end":{"line":106,"column":69}},"31":{"start":{"line":109,"column":4},"end":{"line":109,"column":20}},"32":{"start":{"line":111,"column":4},"end":{"line":122,"column":5}},"33":{"start":{"line":112,"column":6},"end":{"line":112,"column":25}},"34":{"start":{"line":113,"column":6},"end":{"line":121,"column":9}},"35":{"start":{"line":115,"column":8},"end":{"line":119,"column":9}},"36":{"start":{"line":124,"column":4},"end":{"line":127,"column":5}},"37":{"start":{"line":133,"column":4},"end":{"line":133,"column":65}},"38":{"start":{"line":139,"column":0},"end":{"line":139,"column":38}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"5":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":11}},{"start":{"line":46,"column":16},"end":{"line":46,"column":38}}]},"6":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":12}},{"start":{"line":47,"column":17},"end":{"line":47,"column":41}}]},"7":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"8":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":19}},{"start":{"line":75,"column":23},"end":{"line":75,"column":50}}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":19}},{"start":{"line":91,"column":23},"end":{"line":91,"column":75}}]},"10":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":33},"end":{"line":101,"column":37}},{"start":{"line":101,"column":40},"end":{"line":101,"column":41}}]},"11":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":13},"end":{"line":106,"column":19}},{"start":{"line":106,"column":24},"end":{"line":106,"column":67}}]},"12":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":46},"end":{"line":106,"column":56}},{"start":{"line":106,"column":59},"end":{"line":106,"column":67}}]},"13":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"14":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":18}},{"start":{"line":111,"column":22},"end":{"line":111,"column":28}},{"start":{"line":111,"column":32},"end":{"line":111,"column":58}}]}},"code":["'use strict';","","const Model = require('./model.js');","const ItemArray = require('./item_array.js');","const ModelArray = require('./model_array.js');","","class APIConstructor {","","  format(obj, arrInterface, useResource) {","","    if (obj instanceof Error) {","      return this.error(obj.message, obj.details);","    }","","    if (obj instanceof Model) {","      let modelArray = new ModelArray(obj.constructor);","      modelArray.setMeta({total: 1, offset: 0});","      modelArray.push(obj);","      obj = modelArray;","    }","","    if (!(obj instanceof ItemArray)) {","      return this.spoof(obj);","    }","","    return this.response(obj, arrInterface);","","  }","","  meta(total, count, offset, error, summary, resource) {","","    if (error) {","      total = 0;","      count = 0;","      offset = 0;","      resource = null;","    }","","    let meta = {","      total: total,","      count: count,","      offset: offset,","      error: error","    };","","    summary && (meta.summary = summary);","    resource && (meta.resource = resource);","","    return meta;","","  }","","  error(message, details) {","","    return {","      meta: this.meta(0, 0, 0, {message: message, details: details}),","      data: []","    };","","  }","","  spoof(obj, useResource) {","","    if (!(obj instanceof Array)) {","      obj = [obj];","    }","","    return {","      meta: this.meta(","        obj.length,","        obj.length,","        0,","        null,","        null,","        useResource && this.resourceFromArray(obj)","      ),","      data: obj","    }","","  }","","  response(itemArray, arrInterface, useResource) {","","    return {","      meta: this.meta(","        itemArray._meta.total,","        itemArray.length,","        itemArray._meta.offset,","        null,","        null,","        useResource && this.resourceFromModelArray(itemArray, arrInterface)","      ),","      data: itemArray.toObject(arrInterface)","    }","","  }","","  resourceFromArray(arr) {","","    function getType(v) {","      v = (v instanceof Array) ? v[0] : v;","      return {","        'boolean': 'boolean',","        'string': 'string',","        'number': 'float'","      }[(typeof v)] || ((v instanceof Date) ? 'datetime' : 'string');","    };","","    let fields = [];","","    if (arr.length && arr[0] && typeof arr[0] === 'object') {","      let datum = arr[0];","      fields = Object.keys(datum).map(function(v, i) {","","        return {","          name: v,","          type: getType(datum[v]),","          array: (v instanceof Array)","        }","","      });","    }","","    return {","      name: 'object',","      fields: fields","    }","","  }","","  resourceFromModelArray(modelArray, arrInterface) {","","    return modelArray._modelConstructor.toResource(arrInterface);","","  }","","}","","module.exports = new APIConstructor();",""],"l":{"3":1,"4":1,"5":1,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"22":0,"23":0,"26":0,"32":0,"33":0,"34":0,"35":0,"36":0,"39":0,"46":0,"47":0,"49":0,"55":0,"64":0,"65":0,"68":0,"84":0,"100":1,"101":0,"102":0,"109":0,"111":0,"112":0,"113":0,"115":0,"124":0,"133":0,"139":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0],"80":[0,0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":48}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":13},"end":{"line":42,"column":28}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":15},"end":{"line":75,"column":40}}},"4":{"name":"(anonymous_4)","line":102,"loc":{"start":{"line":102,"column":15},"end":{"line":102,"column":32}}},"5":{"name":"(anonymous_5)","line":115,"loc":{"start":{"line":115,"column":23},"end":{"line":115,"column":47}}},"6":{"name":"(anonymous_6)","line":139,"loc":{"start":{"line":139,"column":15},"end":{"line":139,"column":36}}},"7":{"name":"(anonymous_7)","line":159,"loc":{"start":{"line":159,"column":16},"end":{"line":159,"column":31}}},"8":{"name":"(anonymous_8)","line":178,"loc":{"start":{"line":178,"column":14},"end":{"line":178,"column":19}}},"9":{"name":"(anonymous_9)","line":189,"loc":{"start":{"line":189,"column":20},"end":{"line":189,"column":31}}},"10":{"name":"(anonymous_10)","line":199,"loc":{"start":{"line":199,"column":14},"end":{"line":199,"column":17}}},"11":{"name":"(anonymous_11)","line":207,"loc":{"start":{"line":207,"column":16},"end":{"line":207,"column":19}}},"12":{"name":"(anonymous_12)","line":215,"loc":{"start":{"line":215,"column":20},"end":{"line":215,"column":23}}},"13":{"name":"(anonymous_13)","line":223,"loc":{"start":{"line":223,"column":21},"end":{"line":223,"column":24}}},"14":{"name":"(anonymous_14)","line":234,"loc":{"start":{"line":234,"column":18},"end":{"line":234,"column":31}}},"15":{"name":"(anonymous_15)","line":242,"loc":{"start":{"line":242,"column":15},"end":{"line":242,"column":28}}},"16":{"name":"(anonymous_16)","line":252,"loc":{"start":{"line":252,"column":19},"end":{"line":252,"column":34}}},"17":{"name":"(anonymous_17)","line":316,"loc":{"start":{"line":316,"column":20},"end":{"line":316,"column":25}}},"18":{"name":"(anonymous_18)","line":326,"loc":{"start":{"line":326,"column":18},"end":{"line":326,"column":27}}},"19":{"name":"(anonymous_19)","line":359,"loc":{"start":{"line":359,"column":22},"end":{"line":359,"column":25}}},"20":{"name":"(anonymous_20)","line":368,"loc":{"start":{"line":368,"column":21},"end":{"line":368,"column":28}}},"21":{"name":"(anonymous_21)","line":385,"loc":{"start":{"line":385,"column":16},"end":{"line":385,"column":33}}},"22":{"name":"(anonymous_22)","line":397,"loc":{"start":{"line":397,"column":18},"end":{"line":397,"column":45}}},"23":{"name":"(anonymous_23)","line":419,"loc":{"start":{"line":419,"column":17},"end":{"line":419,"column":44}}},"24":{"name":"(anonymous_24)","line":447,"loc":{"start":{"line":447,"column":19},"end":{"line":447,"column":42}}},"25":{"name":"(anonymous_25)","line":485,"loc":{"start":{"line":485,"column":14},"end":{"line":485,"column":22}}},"26":{"name":"(anonymous_26)","line":500,"loc":{"start":{"line":500,"column":17},"end":{"line":500,"column":25}}},"27":{"name":"(anonymous_27)","line":510,"loc":{"start":{"line":510,"column":16},"end":{"line":510,"column":19}}},"28":{"name":"(anonymous_28)","line":532,"loc":{"start":{"line":532,"column":10},"end":{"line":532,"column":40}}},"29":{"name":"(anonymous_29)","line":562,"loc":{"start":{"line":562,"column":14},"end":{"line":562,"column":22}}},"30":{"name":"(anonymous_30)","line":594,"loc":{"start":{"line":594,"column":13},"end":{"line":594,"column":28}}},"31":{"name":"(anonymous_31)","line":616,"loc":{"start":{"line":616,"column":11},"end":{"line":616,"column":14}}},"32":{"name":"(anonymous_32)","line":624,"loc":{"start":{"line":624,"column":11},"end":{"line":624,"column":14}}},"33":{"name":"(anonymous_33)","line":633,"loc":{"start":{"line":633,"column":12},"end":{"line":633,"column":20}}},"34":{"name":"(anonymous_34)","line":641,"loc":{"start":{"line":641,"column":15},"end":{"line":641,"column":18}}},"35":{"name":"(anonymous_35)","line":650,"loc":{"start":{"line":650,"column":13},"end":{"line":650,"column":16}}},"36":{"name":"(anonymous_36)","line":672,"loc":{"start":{"line":672,"column":11},"end":{"line":672,"column":14}}},"37":{"name":"(anonymous_37)","line":683,"loc":{"start":{"line":683,"column":11},"end":{"line":683,"column":14}}},"38":{"name":"(anonymous_38)","line":686,"loc":{"start":{"line":686,"column":32},"end":{"line":686,"column":46}}},"39":{"name":"(anonymous_39)","line":697,"loc":{"start":{"line":697,"column":6},"end":{"line":697,"column":13}}},"40":{"name":"(anonymous_40)","line":713,"loc":{"start":{"line":713,"column":9},"end":{"line":713,"column":24}}},"41":{"name":"(anonymous_41)","line":733,"loc":{"start":{"line":733,"column":14},"end":{"line":733,"column":21}}},"42":{"name":"(anonymous_42)","line":742,"loc":{"start":{"line":742,"column":5},"end":{"line":742,"column":20}}},"43":{"name":"(anonymous_43)","line":797,"loc":{"start":{"line":797,"column":11},"end":{"line":797,"column":26}}},"44":{"name":"(anonymous_44)","line":833,"loc":{"start":{"line":833,"column":11},"end":{"line":833,"column":19}}},"45":{"name":"(anonymous_45)","line":845,"loc":{"start":{"line":845,"column":5},"end":{"line":845,"column":27}}},"46":{"name":"(anonymous_46)","line":859,"loc":{"start":{"line":859,"column":8},"end":{"line":859,"column":19}}},"47":{"name":"(anonymous_47)","line":871,"loc":{"start":{"line":871,"column":9},"end":{"line":871,"column":20}}},"48":{"name":"(anonymous_48)","line":925,"loc":{"start":{"line":925,"column":10},"end":{"line":925,"column":25}}},"49":{"name":"(anonymous_49)","line":965,"loc":{"start":{"line":965,"column":11},"end":{"line":965,"column":14}}},"50":{"name":"(anonymous_50)","line":974,"loc":{"start":{"line":974,"column":10},"end":{"line":974,"column":18}}},"51":{"name":"(anonymous_51)","line":983,"loc":{"start":{"line":983,"column":14},"end":{"line":983,"column":22}}},"52":{"name":"(anonymous_52)","line":992,"loc":{"start":{"line":992,"column":15},"end":{"line":992,"column":23}}},"53":{"name":"(anonymous_53)","line":1001,"loc":{"start":{"line":1001,"column":14},"end":{"line":1001,"column":22}}},"54":{"name":"(anonymous_54)","line":1011,"loc":{"start":{"line":1011,"column":19},"end":{"line":1011,"column":27}}},"55":{"name":"(anonymous_55)","line":1021,"loc":{"start":{"line":1021,"column":19},"end":{"line":1021,"column":27}}},"56":{"name":"(anonymous_56)","line":1030,"loc":{"start":{"line":1030,"column":11},"end":{"line":1030,"column":14}}},"57":{"name":"(anonymous_57)","line":1038,"loc":{"start":{"line":1038,"column":18},"end":{"line":1038,"column":21}}},"58":{"name":"(anonymous_58)","line":1048,"loc":{"start":{"line":1048,"column":10},"end":{"line":1048,"column":25}}},"59":{"name":"(anonymous_59)","line":1059,"loc":{"start":{"line":1059,"column":12},"end":{"line":1059,"column":18}}},"60":{"name":"(anonymous_60)","line":1064,"loc":{"start":{"line":1064,"column":23},"end":{"line":1064,"column":26}}},"61":{"name":"(anonymous_61)","line":1092,"loc":{"start":{"line":1092,"column":12},"end":{"line":1092,"column":23}}},"62":{"name":"(anonymous_62)","line":1102,"loc":{"start":{"line":1102,"column":11},"end":{"line":1102,"column":22}}},"63":{"name":"(anonymous_63)","line":1112,"loc":{"start":{"line":1112,"column":6},"end":{"line":1112,"column":17}}},"64":{"name":"(anonymous_64)","line":1132,"loc":{"start":{"line":1132,"column":8},"end":{"line":1132,"column":27}}},"65":{"name":"(anonymous_65)","line":1147,"loc":{"start":{"line":1147,"column":12},"end":{"line":1147,"column":23}}},"66":{"name":"(anonymous_66)","line":1192,"loc":{"start":{"line":1192,"column":10},"end":{"line":1192,"column":21}}},"67":{"name":"(anonymous_67)","line":1203,"loc":{"start":{"line":1203,"column":17},"end":{"line":1203,"column":28}}},"68":{"name":"(anonymous_68)","line":1234,"loc":{"start":{"line":1234,"column":16},"end":{"line":1234,"column":27}}},"69":{"name":"(anonymous_69)","line":1244,"loc":{"start":{"line":1244,"column":15},"end":{"line":1244,"column":26}}},"70":{"name":"(anonymous_70)","line":1254,"loc":{"start":{"line":1254,"column":14},"end":{"line":1254,"column":25}}},"71":{"name":"(anonymous_71)","line":1265,"loc":{"start":{"line":1265,"column":9},"end":{"line":1265,"column":20}}},"72":{"name":"(anonymous_72)","line":1284,"loc":{"start":{"line":1284,"column":13},"end":{"line":1284,"column":24}}},"73":{"name":"(anonymous_73)","line":1301,"loc":{"start":{"line":1301,"column":17},"end":{"line":1301,"column":28}}},"74":{"name":"(anonymous_74)","line":1311,"loc":{"start":{"line":1311,"column":43},"end":{"line":1311,"column":55}}},"75":{"name":"(anonymous_75)","line":1319,"loc":{"start":{"line":1319,"column":18},"end":{"line":1319,"column":30}}},"76":{"name":"(anonymous_76)","line":1322,"loc":{"start":{"line":1322,"column":6},"end":{"line":1322,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":32}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":26}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":52}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":31}},"15":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"16":{"start":{"line":48,"column":6},"end":{"line":48,"column":24}},"17":{"start":{"line":49,"column":6},"end":{"line":49,"column":24}},"18":{"start":{"line":50,"column":6},"end":{"line":50,"column":30}},"19":{"start":{"line":53,"column":4},"end":{"line":65,"column":9}},"20":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"21":{"start":{"line":58,"column":10},"end":{"line":58,"column":78}},"22":{"start":{"line":59,"column":10},"end":{"line":59,"column":30}},"23":{"start":{"line":60,"column":10},"end":{"line":60,"column":31}},"24":{"start":{"line":63,"column":8},"end":{"line":63,"column":33}},"25":{"start":{"line":77,"column":4},"end":{"line":77,"column":31}},"26":{"start":{"line":78,"column":4},"end":{"line":78,"column":19}},"27":{"start":{"line":79,"column":4},"end":{"line":79,"column":25}},"28":{"start":{"line":81,"column":4},"end":{"line":93,"column":9}},"29":{"start":{"line":85,"column":8},"end":{"line":89,"column":9}},"30":{"start":{"line":86,"column":10},"end":{"line":86,"column":87}},"31":{"start":{"line":87,"column":10},"end":{"line":87,"column":30}},"32":{"start":{"line":88,"column":10},"end":{"line":88,"column":31}},"33":{"start":{"line":91,"column":8},"end":{"line":91,"column":33}},"34":{"start":{"line":104,"column":4},"end":{"line":104,"column":31}},"35":{"start":{"line":105,"column":4},"end":{"line":105,"column":25}},"36":{"start":{"line":117,"column":4},"end":{"line":129,"column":7}},"37":{"start":{"line":119,"column":6},"end":{"line":127,"column":7}},"38":{"start":{"line":120,"column":8},"end":{"line":124,"column":9}},"39":{"start":{"line":121,"column":10},"end":{"line":121,"column":45}},"40":{"start":{"line":123,"column":10},"end":{"line":123,"column":31}},"41":{"start":{"line":126,"column":8},"end":{"line":126,"column":37}},"42":{"start":{"line":141,"column":4},"end":{"line":150,"column":7}},"43":{"start":{"line":143,"column":6},"end":{"line":145,"column":7}},"44":{"start":{"line":144,"column":8},"end":{"line":144,"column":29}},"45":{"start":{"line":147,"column":6},"end":{"line":147,"column":23}},"46":{"start":{"line":148,"column":6},"end":{"line":148,"column":27}},"47":{"start":{"line":161,"column":4},"end":{"line":169,"column":7}},"48":{"start":{"line":163,"column":6},"end":{"line":165,"column":7}},"49":{"start":{"line":164,"column":8},"end":{"line":164,"column":29}},"50":{"start":{"line":167,"column":6},"end":{"line":167,"column":30}},"51":{"start":{"line":180,"column":4},"end":{"line":180,"column":33}},"52":{"start":{"line":181,"column":4},"end":{"line":181,"column":30}},"53":{"start":{"line":191,"column":4},"end":{"line":191,"column":65}},"54":{"start":{"line":200,"column":4},"end":{"line":200,"column":39}},"55":{"start":{"line":208,"column":4},"end":{"line":208,"column":41}},"56":{"start":{"line":216,"column":4},"end":{"line":216,"column":43}},"57":{"start":{"line":216,"column":35},"end":{"line":216,"column":41}},"58":{"start":{"line":224,"column":4},"end":{"line":227,"column":11}},"59":{"start":{"line":225,"column":6},"end":{"line":225,"column":20}},"60":{"start":{"line":226,"column":6},"end":{"line":226,"column":15}},"61":{"start":{"line":235,"column":4},"end":{"line":235,"column":37}},"62":{"start":{"line":243,"column":4},"end":{"line":243,"column":52}},"63":{"start":{"line":254,"column":4},"end":{"line":263,"column":5}},"64":{"start":{"line":255,"column":6},"end":{"line":262,"column":8}},"65":{"start":{"line":258,"column":12},"end":{"line":258,"column":25}},"66":{"start":{"line":259,"column":12},"end":{"line":259,"column":65}},"67":{"start":{"line":260,"column":12},"end":{"line":260,"column":23}},"68":{"start":{"line":266,"column":4},"end":{"line":266,"column":43}},"69":{"start":{"line":268,"column":4},"end":{"line":302,"column":22}},"70":{"start":{"line":270,"column":6},"end":{"line":300,"column":7}},"71":{"start":{"line":272,"column":8},"end":{"line":272,"column":36}},"72":{"start":{"line":274,"column":8},"end":{"line":276,"column":9}},"73":{"start":{"line":275,"column":10},"end":{"line":275,"column":22}},"74":{"start":{"line":278,"column":8},"end":{"line":281,"column":10}},"75":{"start":{"line":283,"column":8},"end":{"line":283,"column":48}},"76":{"start":{"line":285,"column":8},"end":{"line":285,"column":25}},"77":{"start":{"line":287,"column":13},"end":{"line":300,"column":7}},"78":{"start":{"line":289,"column":8},"end":{"line":289,"column":20}},"79":{"start":{"line":291,"column":8},"end":{"line":291,"column":36}},"80":{"start":{"line":292,"column":8},"end":{"line":292,"column":53}},"81":{"start":{"line":294,"column":8},"end":{"line":296,"column":9}},"82":{"start":{"line":295,"column":10},"end":{"line":295,"column":22}},"83":{"start":{"line":298,"column":8},"end":{"line":298,"column":53}},"84":{"start":{"line":302,"column":19},"end":{"line":302,"column":20}},"85":{"start":{"line":304,"column":4},"end":{"line":308,"column":6}},"86":{"start":{"line":318,"column":4},"end":{"line":318,"column":27}},"87":{"start":{"line":328,"column":4},"end":{"line":333,"column":5}},"88":{"start":{"line":329,"column":6},"end":{"line":332,"column":20}},"89":{"start":{"line":335,"column":4},"end":{"line":335,"column":35}},"90":{"start":{"line":337,"column":4},"end":{"line":337,"column":41}},"91":{"start":{"line":338,"column":4},"end":{"line":338,"column":45}},"92":{"start":{"line":339,"column":4},"end":{"line":339,"column":53}},"93":{"start":{"line":340,"column":4},"end":{"line":340,"column":55}},"94":{"start":{"line":342,"column":4},"end":{"line":346,"column":13}},"95":{"start":{"line":344,"column":8},"end":{"line":344,"column":20}},"96":{"start":{"line":345,"column":8},"end":{"line":345,"column":17}},"97":{"start":{"line":348,"column":4},"end":{"line":352,"column":13}},"98":{"start":{"line":350,"column":8},"end":{"line":350,"column":21}},"99":{"start":{"line":351,"column":8},"end":{"line":351,"column":17}},"100":{"start":{"line":361,"column":4},"end":{"line":361,"column":34}},"101":{"start":{"line":370,"column":4},"end":{"line":370,"column":60}},"102":{"start":{"line":371,"column":4},"end":{"line":371,"column":111}},"103":{"start":{"line":372,"column":4},"end":{"line":372,"column":41}},"104":{"start":{"line":387,"column":4},"end":{"line":387,"column":56}},"105":{"start":{"line":399,"column":4},"end":{"line":402,"column":5}},"106":{"start":{"line":400,"column":6},"end":{"line":400,"column":39}},"107":{"start":{"line":401,"column":6},"end":{"line":401,"column":43}},"108":{"start":{"line":404,"column":4},"end":{"line":406,"column":5}},"109":{"start":{"line":405,"column":6},"end":{"line":405,"column":50}},"110":{"start":{"line":408,"column":4},"end":{"line":408,"column":82}},"111":{"start":{"line":409,"column":4},"end":{"line":409,"column":82}},"112":{"start":{"line":422,"column":4},"end":{"line":426,"column":5}},"113":{"start":{"line":423,"column":6},"end":{"line":423,"column":25}},"114":{"start":{"line":424,"column":6},"end":{"line":424,"column":22}},"115":{"start":{"line":425,"column":6},"end":{"line":425,"column":19}},"116":{"start":{"line":428,"column":4},"end":{"line":430,"column":5}},"117":{"start":{"line":429,"column":6},"end":{"line":429,"column":45}},"118":{"start":{"line":432,"column":4},"end":{"line":437,"column":7}},"119":{"start":{"line":449,"column":4},"end":{"line":452,"column":5}},"120":{"start":{"line":450,"column":6},"end":{"line":450,"column":40}},"121":{"start":{"line":451,"column":6},"end":{"line":451,"column":44}},"122":{"start":{"line":454,"column":4},"end":{"line":456,"column":5}},"123":{"start":{"line":455,"column":6},"end":{"line":455,"column":92}},"124":{"start":{"line":458,"column":4},"end":{"line":458,"column":43}},"125":{"start":{"line":460,"column":4},"end":{"line":462,"column":5}},"126":{"start":{"line":461,"column":6},"end":{"line":461,"column":113}},"127":{"start":{"line":464,"column":4},"end":{"line":464,"column":60}},"128":{"start":{"line":466,"column":4},"end":{"line":470,"column":7}},"129":{"start":{"line":467,"column":6},"end":{"line":469,"column":7}},"130":{"start":{"line":468,"column":8},"end":{"line":468,"column":130}},"131":{"start":{"line":472,"column":4},"end":{"line":475,"column":6}},"132":{"start":{"line":477,"column":4},"end":{"line":477,"column":53}},"133":{"start":{"line":487,"column":4},"end":{"line":489,"column":5}},"134":{"start":{"line":488,"column":6},"end":{"line":488,"column":33}},"135":{"start":{"line":491,"column":4},"end":{"line":491,"column":40}},"136":{"start":{"line":492,"column":4},"end":{"line":492,"column":16}},"137":{"start":{"line":502,"column":4},"end":{"line":502,"column":49}},"138":{"start":{"line":512,"column":4},"end":{"line":512,"column":33}},"139":{"start":{"line":514,"column":4},"end":{"line":514,"column":26}},"140":{"start":{"line":515,"column":4},"end":{"line":515,"column":25}},"141":{"start":{"line":517,"column":4},"end":{"line":517,"column":43}},"142":{"start":{"line":518,"column":4},"end":{"line":518,"column":49}},"143":{"start":{"line":519,"column":4},"end":{"line":519,"column":22}},"144":{"start":{"line":521,"column":4},"end":{"line":521,"column":16}},"145":{"start":{"line":534,"column":4},"end":{"line":534,"column":22}},"146":{"start":{"line":536,"column":4},"end":{"line":536,"column":36}},"147":{"start":{"line":537,"column":4},"end":{"line":537,"column":33}},"148":{"start":{"line":539,"column":4},"end":{"line":542,"column":5}},"149":{"start":{"line":540,"column":6},"end":{"line":540,"column":35}},"150":{"start":{"line":541,"column":6},"end":{"line":541,"column":35}},"151":{"start":{"line":544,"column":4},"end":{"line":544,"column":33}},"152":{"start":{"line":546,"column":4},"end":{"line":549,"column":7}},"153":{"start":{"line":547,"column":6},"end":{"line":547,"column":39}},"154":{"start":{"line":548,"column":6},"end":{"line":548,"column":39}},"155":{"start":{"line":551,"column":4},"end":{"line":551,"column":24}},"156":{"start":{"line":553,"column":4},"end":{"line":553,"column":16}},"157":{"start":{"line":564,"column":4},"end":{"line":564,"column":26}},"158":{"start":{"line":566,"column":4},"end":{"line":576,"column":5}},"159":{"start":{"line":568,"column":6},"end":{"line":568,"column":23}},"160":{"start":{"line":569,"column":6},"end":{"line":569,"column":90}},"161":{"start":{"line":569,"column":45},"end":{"line":569,"column":88}},"162":{"start":{"line":570,"column":6},"end":{"line":570,"column":19}},"163":{"start":{"line":572,"column":11},"end":{"line":576,"column":5}},"164":{"start":{"line":574,"column":6},"end":{"line":574,"column":18}},"165":{"start":{"line":578,"column":4},"end":{"line":578,"column":27}},"166":{"start":{"line":579,"column":4},"end":{"line":579,"column":34}},"167":{"start":{"line":581,"column":4},"end":{"line":585,"column":20}},"168":{"start":{"line":582,"column":6},"end":{"line":582,"column":54}},"169":{"start":{"line":583,"column":6},"end":{"line":583,"column":57}},"170":{"start":{"line":584,"column":6},"end":{"line":584,"column":19}},"171":{"start":{"line":596,"column":4},"end":{"line":600,"column":5}},"172":{"start":{"line":598,"column":6},"end":{"line":598,"column":42}},"173":{"start":{"line":602,"column":4},"end":{"line":606,"column":5}},"174":{"start":{"line":604,"column":6},"end":{"line":604,"column":13}},"175":{"start":{"line":608,"column":4},"end":{"line":608,"column":51}},"176":{"start":{"line":617,"column":4},"end":{"line":617,"column":27}},"177":{"start":{"line":625,"column":4},"end":{"line":625,"column":27}},"178":{"start":{"line":634,"column":4},"end":{"line":634,"column":90}},"179":{"start":{"line":642,"column":4},"end":{"line":642,"column":32}},"180":{"start":{"line":643,"column":4},"end":{"line":643,"column":56}},"181":{"start":{"line":643,"column":44},"end":{"line":643,"column":54}},"182":{"start":{"line":652,"column":4},"end":{"line":652,"column":21}},"183":{"start":{"line":654,"column":4},"end":{"line":662,"column":5}},"184":{"start":{"line":656,"column":6},"end":{"line":656,"column":41}},"185":{"start":{"line":657,"column":6},"end":{"line":657,"column":61}},"186":{"start":{"line":659,"column":6},"end":{"line":659,"column":33}},"187":{"start":{"line":660,"column":6},"end":{"line":660,"column":34}},"188":{"start":{"line":664,"column":4},"end":{"line":664,"column":17}},"189":{"start":{"line":674,"column":4},"end":{"line":674,"column":48}},"190":{"start":{"line":684,"column":4},"end":{"line":684,"column":17}},"191":{"start":{"line":685,"column":4},"end":{"line":685,"column":30}},"192":{"start":{"line":686,"column":4},"end":{"line":688,"column":7}},"193":{"start":{"line":687,"column":6},"end":{"line":687,"column":29}},"194":{"start":{"line":689,"column":4},"end":{"line":689,"column":15}},"195":{"start":{"line":699,"column":4},"end":{"line":702,"column":50}},"196":{"start":{"line":701,"column":23},"end":{"line":701,"column":47}},"197":{"start":{"line":702,"column":24},"end":{"line":702,"column":48}},"198":{"start":{"line":704,"column":4},"end":{"line":704,"column":16}},"199":{"start":{"line":715,"column":4},"end":{"line":717,"column":5}},"200":{"start":{"line":716,"column":6},"end":{"line":716,"column":18}},"201":{"start":{"line":719,"column":4},"end":{"line":719,"column":45}},"202":{"start":{"line":721,"column":4},"end":{"line":723,"column":5}},"203":{"start":{"line":722,"column":6},"end":{"line":722,"column":86}},"204":{"start":{"line":722,"column":65},"end":{"line":722,"column":84}},"205":{"start":{"line":725,"column":4},"end":{"line":725,"column":35}},"206":{"start":{"line":734,"column":4},"end":{"line":734,"column":47}},"207":{"start":{"line":744,"column":4},"end":{"line":748,"column":5}},"208":{"start":{"line":746,"column":6},"end":{"line":746,"column":95}},"209":{"start":{"line":750,"column":4},"end":{"line":750,"column":37}},"210":{"start":{"line":751,"column":4},"end":{"line":751,"column":24}},"211":{"start":{"line":752,"column":4},"end":{"line":752,"column":39}},"212":{"start":{"line":754,"column":4},"end":{"line":782,"column":5}},"213":{"start":{"line":756,"column":6},"end":{"line":756,"column":21}},"214":{"start":{"line":758,"column":6},"end":{"line":773,"column":7}},"215":{"start":{"line":764,"column":8},"end":{"line":764,"column":24}},"216":{"start":{"line":767,"column":8},"end":{"line":772,"column":9}},"217":{"start":{"line":768,"column":10},"end":{"line":771,"column":11}},"218":{"start":{"line":769,"column":12},"end":{"line":769,"column":27}},"219":{"start":{"line":770,"column":12},"end":{"line":770,"column":18}},"220":{"start":{"line":778,"column":6},"end":{"line":780,"column":7}},"221":{"start":{"line":779,"column":8},"end":{"line":779,"column":64}},"222":{"start":{"line":784,"column":4},"end":{"line":784,"column":30}},"223":{"start":{"line":785,"column":4},"end":{"line":785,"column":35}},"224":{"start":{"line":786,"column":4},"end":{"line":786,"column":40}},"225":{"start":{"line":788,"column":4},"end":{"line":788,"column":17}},"226":{"start":{"line":799,"column":4},"end":{"line":799,"column":48}},"227":{"start":{"line":801,"column":4},"end":{"line":817,"column":5}},"228":{"start":{"line":803,"column":6},"end":{"line":807,"column":7}},"229":{"start":{"line":805,"column":8},"end":{"line":805,"column":90}},"230":{"start":{"line":811,"column":6},"end":{"line":815,"column":7}},"231":{"start":{"line":813,"column":8},"end":{"line":813,"column":101}},"232":{"start":{"line":819,"column":4},"end":{"line":821,"column":5}},"233":{"start":{"line":820,"column":6},"end":{"line":820,"column":34}},"234":{"start":{"line":823,"column":4},"end":{"line":823,"column":36}},"235":{"start":{"line":825,"column":4},"end":{"line":825,"column":17}},"236":{"start":{"line":834,"column":4},"end":{"line":834,"column":41}},"237":{"start":{"line":835,"column":4},"end":{"line":838,"column":6}},"238":{"start":{"line":837,"column":27},"end":{"line":837,"column":38}},"239":{"start":{"line":847,"column":4},"end":{"line":849,"column":5}},"240":{"start":{"line":848,"column":6},"end":{"line":848,"column":35}},"241":{"start":{"line":851,"column":4},"end":{"line":851,"column":79}},"242":{"start":{"line":861,"column":4},"end":{"line":861,"column":38}},"243":{"start":{"line":873,"column":4},"end":{"line":873,"column":21}},"244":{"start":{"line":876,"column":4},"end":{"line":879,"column":5}},"245":{"start":{"line":877,"column":6},"end":{"line":877,"column":24}},"246":{"start":{"line":878,"column":6},"end":{"line":878,"column":30}},"247":{"start":{"line":881,"column":4},"end":{"line":881,"column":62}},"248":{"start":{"line":882,"column":4},"end":{"line":882,"column":35}},"249":{"start":{"line":884,"column":4},"end":{"line":886,"column":5}},"250":{"start":{"line":885,"column":6},"end":{"line":885,"column":73}},"251":{"start":{"line":888,"column":4},"end":{"line":888,"column":72}},"252":{"start":{"line":888,"column":49},"end":{"line":888,"column":70}},"253":{"start":{"line":890,"column":4},"end":{"line":892,"column":5}},"254":{"start":{"line":891,"column":6},"end":{"line":891,"column":117}},"255":{"start":{"line":894,"column":4},"end":{"line":894,"column":69}},"256":{"start":{"line":896,"column":4},"end":{"line":896,"column":64}},"257":{"start":{"line":896,"column":34},"end":{"line":896,"column":62}},"258":{"start":{"line":898,"column":4},"end":{"line":917,"column":7}},"259":{"start":{"line":900,"column":6},"end":{"line":902,"column":7}},"260":{"start":{"line":901,"column":8},"end":{"line":901,"column":29}},"261":{"start":{"line":904,"column":6},"end":{"line":906,"column":7}},"262":{"start":{"line":905,"column":8},"end":{"line":905,"column":61}},"263":{"start":{"line":908,"column":6},"end":{"line":908,"column":28}},"264":{"start":{"line":909,"column":6},"end":{"line":913,"column":9}},"265":{"start":{"line":910,"column":8},"end":{"line":910,"column":42}},"266":{"start":{"line":911,"column":8},"end":{"line":911,"column":47}},"267":{"start":{"line":912,"column":8},"end":{"line":912,"column":20}},"268":{"start":{"line":915,"column":6},"end":{"line":915,"column":56}},"269":{"start":{"line":927,"column":4},"end":{"line":927,"column":17}},"270":{"start":{"line":929,"column":4},"end":{"line":932,"column":40}},"271":{"start":{"line":932,"column":21},"end":{"line":932,"column":38}},"272":{"start":{"line":934,"column":4},"end":{"line":955,"column":7}},"273":{"start":{"line":936,"column":6},"end":{"line":938,"column":7}},"274":{"start":{"line":937,"column":8},"end":{"line":937,"column":15}},"275":{"start":{"line":940,"column":6},"end":{"line":940,"column":21}},"276":{"start":{"line":942,"column":6},"end":{"line":953,"column":7}},"277":{"start":{"line":943,"column":8},"end":{"line":943,"column":31}},"278":{"start":{"line":944,"column":8},"end":{"line":944,"column":34}},"279":{"start":{"line":945,"column":8},"end":{"line":945,"column":43}},"280":{"start":{"line":946,"column":8},"end":{"line":946,"column":74}},"281":{"start":{"line":947,"column":13},"end":{"line":953,"column":7}},"282":{"start":{"line":948,"column":8},"end":{"line":948,"column":35}},"283":{"start":{"line":949,"column":13},"end":{"line":953,"column":7}},"284":{"start":{"line":950,"column":8},"end":{"line":950,"column":39}},"285":{"start":{"line":951,"column":13},"end":{"line":953,"column":7}},"286":{"start":{"line":952,"column":8},"end":{"line":952,"column":41}},"287":{"start":{"line":957,"column":4},"end":{"line":957,"column":15}},"288":{"start":{"line":966,"column":4},"end":{"line":966,"column":23}},"289":{"start":{"line":975,"column":4},"end":{"line":975,"column":39}},"290":{"start":{"line":984,"column":4},"end":{"line":984,"column":37}},"291":{"start":{"line":993,"column":4},"end":{"line":993,"column":53}},"292":{"start":{"line":1002,"column":4},"end":{"line":1002,"column":46}},"293":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":79}},"294":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":46}},"295":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":85}},"296":{"start":{"line":1022,"column":4},"end":{"line":1022,"column":46}},"297":{"start":{"line":1023,"column":4},"end":{"line":1023,"column":88}},"298":{"start":{"line":1031,"column":4},"end":{"line":1031,"column":37}},"299":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":33}},"300":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":48}},"301":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":36}},"302":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":16}},"303":{"start":{"line":1060,"column":4},"end":{"line":1060,"column":29}},"304":{"start":{"line":1061,"column":4},"end":{"line":1061,"column":16}},"305":{"start":{"line":1066,"column":4},"end":{"line":1066,"column":23}},"306":{"start":{"line":1067,"column":4},"end":{"line":1067,"column":21}},"307":{"start":{"line":1069,"column":4},"end":{"line":1079,"column":5}},"308":{"start":{"line":1071,"column":6},"end":{"line":1071,"column":102}},"309":{"start":{"line":1071,"column":45},"end":{"line":1071,"column":100}},"310":{"start":{"line":1072,"column":6},"end":{"line":1072,"column":73}},"311":{"start":{"line":1076,"column":6},"end":{"line":1076,"column":92}},"312":{"start":{"line":1076,"column":63},"end":{"line":1076,"column":89}},"313":{"start":{"line":1077,"column":6},"end":{"line":1077,"column":73}},"314":{"start":{"line":1081,"column":4},"end":{"line":1084,"column":6}},"315":{"start":{"line":1083,"column":31},"end":{"line":1083,"column":90}},"316":{"start":{"line":1094,"column":4},"end":{"line":1094,"column":25}},"317":{"start":{"line":1104,"column":4},"end":{"line":1104,"column":25}},"318":{"start":{"line":1114,"column":4},"end":{"line":1114,"column":38}},"319":{"start":{"line":1116,"column":4},"end":{"line":1123,"column":7}},"320":{"start":{"line":1121,"column":15},"end":{"line":1121,"column":27}},"321":{"start":{"line":1122,"column":6},"end":{"line":1122,"column":34}},"322":{"start":{"line":1134,"column":4},"end":{"line":1134,"column":38}},"323":{"start":{"line":1136,"column":4},"end":{"line":1138,"column":75}},"324":{"start":{"line":1138,"column":39},"end":{"line":1138,"column":73}},"325":{"start":{"line":1150,"column":4},"end":{"line":1183,"column":6}},"326":{"start":{"line":1152,"column":8},"end":{"line":1170,"column":10}},"327":{"start":{"line":1153,"column":10},"end":{"line":1169,"column":11}},"328":{"start":{"line":1156,"column":28},"end":{"line":1156,"column":43}},"329":{"start":{"line":1158,"column":16},"end":{"line":1167,"column":17}},"330":{"start":{"line":1159,"column":18},"end":{"line":1159,"column":33}},"331":{"start":{"line":1161,"column":18},"end":{"line":1166,"column":19}},"332":{"start":{"line":1162,"column":20},"end":{"line":1162,"column":76}},"333":{"start":{"line":1163,"column":20},"end":{"line":1163,"column":35}},"334":{"start":{"line":1165,"column":20},"end":{"line":1165,"column":61}},"335":{"start":{"line":1174,"column":8},"end":{"line":1178,"column":9}},"336":{"start":{"line":1175,"column":10},"end":{"line":1175,"column":57}},"337":{"start":{"line":1176,"column":15},"end":{"line":1178,"column":9}},"338":{"start":{"line":1177,"column":10},"end":{"line":1177,"column":42}},"339":{"start":{"line":1180,"column":8},"end":{"line":1180,"column":23}},"340":{"start":{"line":1194,"column":4},"end":{"line":1194,"column":21}},"341":{"start":{"line":1197,"column":4},"end":{"line":1200,"column":5}},"342":{"start":{"line":1198,"column":6},"end":{"line":1198,"column":24}},"343":{"start":{"line":1199,"column":6},"end":{"line":1199,"column":30}},"344":{"start":{"line":1202,"column":4},"end":{"line":1204,"column":5}},"345":{"start":{"line":1203,"column":6},"end":{"line":1203,"column":31}},"346":{"start":{"line":1206,"column":4},"end":{"line":1208,"column":5}},"347":{"start":{"line":1207,"column":6},"end":{"line":1207,"column":41}},"348":{"start":{"line":1210,"column":4},"end":{"line":1210,"column":45}},"349":{"start":{"line":1212,"column":4},"end":{"line":1226,"column":6}},"350":{"start":{"line":1217,"column":8},"end":{"line":1221,"column":9}},"351":{"start":{"line":1218,"column":10},"end":{"line":1218,"column":47}},"352":{"start":{"line":1220,"column":10},"end":{"line":1220,"column":68}},"353":{"start":{"line":1223,"column":8},"end":{"line":1223,"column":48}},"354":{"start":{"line":1236,"column":4},"end":{"line":1236,"column":53}},"355":{"start":{"line":1246,"column":4},"end":{"line":1246,"column":25}},"356":{"start":{"line":1256,"column":4},"end":{"line":1256,"column":25}},"357":{"start":{"line":1267,"column":4},"end":{"line":1267,"column":38}},"358":{"start":{"line":1269,"column":4},"end":{"line":1275,"column":7}},"359":{"start":{"line":1273,"column":15},"end":{"line":1273,"column":27}},"360":{"start":{"line":1274,"column":6},"end":{"line":1274,"column":34}},"361":{"start":{"line":1286,"column":4},"end":{"line":1286,"column":21}},"362":{"start":{"line":1289,"column":4},"end":{"line":1292,"column":5}},"363":{"start":{"line":1290,"column":6},"end":{"line":1290,"column":24}},"364":{"start":{"line":1291,"column":6},"end":{"line":1291,"column":30}},"365":{"start":{"line":1294,"column":4},"end":{"line":1294,"column":21}},"366":{"start":{"line":1296,"column":4},"end":{"line":1298,"column":5}},"367":{"start":{"line":1297,"column":6},"end":{"line":1297,"column":66}},"368":{"start":{"line":1300,"column":4},"end":{"line":1302,"column":5}},"369":{"start":{"line":1301,"column":6},"end":{"line":1301,"column":31}},"370":{"start":{"line":1304,"column":4},"end":{"line":1309,"column":5}},"371":{"start":{"line":1306,"column":6},"end":{"line":1306,"column":89}},"372":{"start":{"line":1307,"column":6},"end":{"line":1307,"column":13}},"373":{"start":{"line":1311,"column":4},"end":{"line":1313,"column":7}},"374":{"start":{"line":1312,"column":6},"end":{"line":1312,"column":40}},"375":{"start":{"line":1315,"column":4},"end":{"line":1315,"column":76}},"376":{"start":{"line":1317,"column":4},"end":{"line":1333,"column":6}},"377":{"start":{"line":1320,"column":8},"end":{"line":1320,"column":83}},"378":{"start":{"line":1324,"column":8},"end":{"line":1328,"column":9}},"379":{"start":{"line":1325,"column":10},"end":{"line":1325,"column":48}},"380":{"start":{"line":1327,"column":10},"end":{"line":1327,"column":35}},"381":{"start":{"line":1330,"column":8},"end":{"line":1330,"column":41}},"382":{"start":{"line":1339,"column":0},"end":{"line":1342,"column":2}},"383":{"start":{"line":1344,"column":0},"end":{"line":1344,"column":34}},"384":{"start":{"line":1345,"column":0},"end":{"line":1345,"column":38}},"385":{"start":{"line":1347,"column":0},"end":{"line":1347,"column":35}},"386":{"start":{"line":1348,"column":0},"end":{"line":1348,"column":39}},"387":{"start":{"line":1350,"column":0},"end":{"line":1350,"column":40}},"388":{"start":{"line":1352,"column":0},"end":{"line":1352,"column":28}},"389":{"start":{"line":1354,"column":0},"end":{"line":1354,"column":28}},"390":{"start":{"line":1356,"column":0},"end":{"line":1356,"column":26}},"391":{"start":{"line":1358,"column":0},"end":{"line":1362,"column":2}},"392":{"start":{"line":1364,"column":0},"end":{"line":1368,"column":2}},"393":{"start":{"line":1370,"column":0},"end":{"line":1370,"column":23}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":25}},{"start":{"line":30,"column":29},"end":{"line":30,"column":31}}]},"2":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"4":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":16}},{"start":{"line":57,"column":20},"end":{"line":57,"column":34}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"6":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":16}},{"start":{"line":85,"column":20},"end":{"line":85,"column":34}}]},"7":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"8":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"9":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":6}},{"start":{"line":143,"column":6},"end":{"line":143,"column":6}}]},"10":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"11":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":9},"end":{"line":180,"column":11}},{"start":{"line":180,"column":15},"end":{"line":180,"column":32}}]},"12":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":4},"end":{"line":254,"column":4}},{"start":{"line":254,"column":4},"end":{"line":254,"column":4}}]},"13":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":8},"end":{"line":254,"column":21}},{"start":{"line":254,"column":25},"end":{"line":254,"column":45}}]},"14":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":6},"end":{"line":270,"column":6}},{"start":{"line":270,"column":6},"end":{"line":270,"column":6}}]},"15":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":8},"end":{"line":274,"column":8}},{"start":{"line":274,"column":8},"end":{"line":274,"column":8}}]},"16":{"line":280,"type":"cond-expr","locations":[{"start":{"line":280,"column":24},"end":{"line":280,"column":34}},{"start":{"line":280,"column":37},"end":{"line":280,"column":45}}]},"17":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":19}},{"start":{"line":283,"column":24},"end":{"line":283,"column":46}}]},"18":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":13},"end":{"line":287,"column":13}},{"start":{"line":287,"column":13},"end":{"line":287,"column":13}}]},"19":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":17},"end":{"line":287,"column":38}},{"start":{"line":287,"column":42},"end":{"line":287,"column":52}}]},"20":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":8},"end":{"line":294,"column":8}},{"start":{"line":294,"column":8},"end":{"line":294,"column":8}}]},"21":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"22":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":30},"end":{"line":370,"column":53}},{"start":{"line":370,"column":57},"end":{"line":370,"column":59}}]},"23":{"line":371,"type":"binary-expr","locations":[{"start":{"line":371,"column":37},"end":{"line":371,"column":66}},{"start":{"line":371,"column":70},"end":{"line":371,"column":109}}]},"24":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":4},"end":{"line":399,"column":4}},{"start":{"line":399,"column":4},"end":{"line":399,"column":4}}]},"25":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":4},"end":{"line":404,"column":4}},{"start":{"line":404,"column":4},"end":{"line":404,"column":4}}]},"26":{"line":408,"type":"binary-expr","locations":[{"start":{"line":408,"column":41},"end":{"line":408,"column":75}},{"start":{"line":408,"column":79},"end":{"line":408,"column":81}}]},"27":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"28":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":4},"end":{"line":428,"column":4}},{"start":{"line":428,"column":4},"end":{"line":428,"column":4}}]},"29":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":4},"end":{"line":449,"column":4}},{"start":{"line":449,"column":4},"end":{"line":449,"column":4}}]},"30":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":4},"end":{"line":454,"column":4}},{"start":{"line":454,"column":4},"end":{"line":454,"column":4}}]},"31":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":4},"end":{"line":460,"column":4}},{"start":{"line":460,"column":4},"end":{"line":460,"column":4}}]},"32":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":6},"end":{"line":467,"column":6}},{"start":{"line":467,"column":6},"end":{"line":467,"column":6}}]},"33":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":4},"end":{"line":487,"column":4}},{"start":{"line":487,"column":4},"end":{"line":487,"column":4}}]},"34":{"line":502,"type":"binary-expr","locations":[{"start":{"line":502,"column":11},"end":{"line":502,"column":39}},{"start":{"line":502,"column":43},"end":{"line":502,"column":48}}]},"35":{"line":534,"type":"binary-expr","locations":[{"start":{"line":534,"column":11},"end":{"line":534,"column":15}},{"start":{"line":534,"column":19},"end":{"line":534,"column":21}}]},"36":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":4},"end":{"line":539,"column":4}},{"start":{"line":539,"column":4},"end":{"line":539,"column":4}}]},"37":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":4},"end":{"line":566,"column":4}},{"start":{"line":566,"column":4},"end":{"line":566,"column":4}}]},"38":{"line":569,"type":"binary-expr","locations":[{"start":{"line":569,"column":54},"end":{"line":569,"column":78}},{"start":{"line":569,"column":82},"end":{"line":569,"column":87}}]},"39":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":11},"end":{"line":572,"column":11}},{"start":{"line":572,"column":11},"end":{"line":572,"column":11}}]},"40":{"line":583,"type":"binary-expr","locations":[{"start":{"line":583,"column":6},"end":{"line":583,"column":12}},{"start":{"line":583,"column":16},"end":{"line":583,"column":56}}]},"41":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":4},"end":{"line":596,"column":4}},{"start":{"line":596,"column":4},"end":{"line":596,"column":4}}]},"42":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":4},"end":{"line":602,"column":4}},{"start":{"line":602,"column":4},"end":{"line":602,"column":4}}]},"43":{"line":634,"type":"cond-expr","locations":[{"start":{"line":634,"column":33},"end":{"line":634,"column":64}},{"start":{"line":634,"column":67},"end":{"line":634,"column":89}}]},"44":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":4},"end":{"line":654,"column":4}},{"start":{"line":654,"column":4},"end":{"line":654,"column":4}}]},"45":{"line":657,"type":"binary-expr","locations":[{"start":{"line":657,"column":20},"end":{"line":657,"column":38}},{"start":{"line":657,"column":42},"end":{"line":657,"column":60}}]},"46":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":4},"end":{"line":715,"column":4}},{"start":{"line":715,"column":4},"end":{"line":715,"column":4}}]},"47":{"line":715,"type":"binary-expr","locations":[{"start":{"line":715,"column":8},"end":{"line":715,"column":29}},{"start":{"line":715,"column":33},"end":{"line":715,"column":47}},{"start":{"line":715,"column":51},"end":{"line":715,"column":70}}]},"48":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":4},"end":{"line":721,"column":4}},{"start":{"line":721,"column":4},"end":{"line":721,"column":4}}]},"49":{"line":722,"type":"cond-expr","locations":[{"start":{"line":722,"column":39},"end":{"line":722,"column":44}},{"start":{"line":722,"column":47},"end":{"line":722,"column":54}}]},"50":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":4},"end":{"line":744,"column":4}},{"start":{"line":744,"column":4},"end":{"line":744,"column":4}}]},"51":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":4},"end":{"line":754,"column":4}},{"start":{"line":754,"column":4},"end":{"line":754,"column":4}}]},"52":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":6},"end":{"line":758,"column":6}},{"start":{"line":758,"column":6},"end":{"line":758,"column":6}}]},"53":{"line":759,"type":"binary-expr","locations":[{"start":{"line":759,"column":8},"end":{"line":759,"column":30}},{"start":{"line":760,"column":8},"end":{"line":760,"column":33}},{"start":{"line":761,"column":8},"end":{"line":761,"column":40}}]},"54":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":10},"end":{"line":768,"column":10}},{"start":{"line":768,"column":10},"end":{"line":768,"column":10}}]},"55":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":6},"end":{"line":778,"column":6}},{"start":{"line":778,"column":6},"end":{"line":778,"column":6}}]},"56":{"line":786,"type":"binary-expr","locations":[{"start":{"line":786,"column":4},"end":{"line":786,"column":11}},{"start":{"line":786,"column":15},"end":{"line":786,"column":39}}]},"57":{"line":801,"type":"if","locations":[{"start":{"line":801,"column":4},"end":{"line":801,"column":4}},{"start":{"line":801,"column":4},"end":{"line":801,"column":4}}]},"58":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":6},"end":{"line":803,"column":6}},{"start":{"line":803,"column":6},"end":{"line":803,"column":6}}]},"59":{"line":811,"type":"if","locations":[{"start":{"line":811,"column":6},"end":{"line":811,"column":6}},{"start":{"line":811,"column":6},"end":{"line":811,"column":6}}]},"60":{"line":811,"type":"binary-expr","locations":[{"start":{"line":811,"column":10},"end":{"line":811,"column":40}},{"start":{"line":811,"column":44},"end":{"line":811,"column":88}}]},"61":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":4},"end":{"line":819,"column":4}},{"start":{"line":819,"column":4},"end":{"line":819,"column":4}}]},"62":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":4},"end":{"line":847,"column":4}},{"start":{"line":847,"column":4},"end":{"line":847,"column":4}}]},"63":{"line":851,"type":"cond-expr","locations":[{"start":{"line":851,"column":46},"end":{"line":851,"column":63}},{"start":{"line":851,"column":66},"end":{"line":851,"column":78}}]},"64":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":4},"end":{"line":876,"column":4}},{"start":{"line":876,"column":4},"end":{"line":876,"column":4}}]},"65":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":4},"end":{"line":884,"column":4}},{"start":{"line":884,"column":4},"end":{"line":884,"column":4}}]},"66":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":4},"end":{"line":890,"column":4}},{"start":{"line":890,"column":4},"end":{"line":890,"column":4}}]},"67":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":6},"end":{"line":900,"column":6}},{"start":{"line":900,"column":6},"end":{"line":900,"column":6}}]},"68":{"line":904,"type":"if","locations":[{"start":{"line":904,"column":6},"end":{"line":904,"column":6}},{"start":{"line":904,"column":6},"end":{"line":904,"column":6}}]},"69":{"line":904,"type":"binary-expr","locations":[{"start":{"line":904,"column":10},"end":{"line":904,"column":17}},{"start":{"line":904,"column":21},"end":{"line":904,"column":35}}]},"70":{"line":911,"type":"binary-expr","locations":[{"start":{"line":911,"column":8},"end":{"line":911,"column":12}},{"start":{"line":911,"column":16},"end":{"line":911,"column":46}}]},"71":{"line":929,"type":"binary-expr","locations":[{"start":{"line":929,"column":19},"end":{"line":929,"column":31}},{"start":{"line":930,"column":6},"end":{"line":932,"column":39}}]},"72":{"line":936,"type":"if","locations":[{"start":{"line":936,"column":6},"end":{"line":936,"column":6}},{"start":{"line":936,"column":6},"end":{"line":936,"column":6}}]},"73":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":6},"end":{"line":942,"column":6}},{"start":{"line":942,"column":6},"end":{"line":942,"column":6}}]},"74":{"line":942,"type":"binary-expr","locations":[{"start":{"line":942,"column":10},"end":{"line":942,"column":33}},{"start":{"line":942,"column":37},"end":{"line":942,"column":49}}]},"75":{"line":946,"type":"binary-expr","locations":[{"start":{"line":946,"column":8},"end":{"line":946,"column":18}},{"start":{"line":946,"column":23},"end":{"line":946,"column":72}}]},"76":{"line":947,"type":"if","locations":[{"start":{"line":947,"column":13},"end":{"line":947,"column":13}},{"start":{"line":947,"column":13},"end":{"line":947,"column":13}}]},"77":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":13},"end":{"line":949,"column":13}},{"start":{"line":949,"column":13},"end":{"line":949,"column":13}}]},"78":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":13},"end":{"line":951,"column":13}},{"start":{"line":951,"column":13},"end":{"line":951,"column":13}}]},"79":{"line":1003,"type":"binary-expr","locations":[{"start":{"line":1003,"column":14},"end":{"line":1003,"column":23}},{"start":{"line":1003,"column":27},"end":{"line":1003,"column":47}},{"start":{"line":1003,"column":51},"end":{"line":1003,"column":77}}]},"80":{"line":1013,"type":"binary-expr","locations":[{"start":{"line":1013,"column":14},"end":{"line":1013,"column":23}},{"start":{"line":1013,"column":27},"end":{"line":1013,"column":47}},{"start":{"line":1013,"column":51},"end":{"line":1013,"column":83}}]},"81":{"line":1023,"type":"cond-expr","locations":[{"start":{"line":1023,"column":47},"end":{"line":1023,"column":80}},{"start":{"line":1023,"column":83},"end":{"line":1023,"column":87}}]},"82":{"line":1023,"type":"binary-expr","locations":[{"start":{"line":1023,"column":11},"end":{"line":1023,"column":20}},{"start":{"line":1023,"column":24},"end":{"line":1023,"column":44}}]},"83":{"line":1049,"type":"binary-expr","locations":[{"start":{"line":1049,"column":24},"end":{"line":1049,"column":41}},{"start":{"line":1049,"column":45},"end":{"line":1049,"column":47}}]},"84":{"line":1069,"type":"if","locations":[{"start":{"line":1069,"column":4},"end":{"line":1069,"column":4}},{"start":{"line":1069,"column":4},"end":{"line":1069,"column":4}}]},"85":{"line":1071,"type":"binary-expr","locations":[{"start":{"line":1071,"column":45},"end":{"line":1071,"column":71}},{"start":{"line":1071,"column":75},"end":{"line":1071,"column":100}}]},"86":{"line":1114,"type":"binary-expr","locations":[{"start":{"line":1114,"column":15},"end":{"line":1114,"column":23}},{"start":{"line":1114,"column":28},"end":{"line":1114,"column":36}}]},"87":{"line":1122,"type":"binary-expr","locations":[{"start":{"line":1122,"column":15},"end":{"line":1122,"column":18}},{"start":{"line":1122,"column":22},"end":{"line":1122,"column":26}}]},"88":{"line":1134,"type":"binary-expr","locations":[{"start":{"line":1134,"column":15},"end":{"line":1134,"column":23}},{"start":{"line":1134,"column":28},"end":{"line":1134,"column":36}}]},"89":{"line":1138,"type":"binary-expr","locations":[{"start":{"line":1138,"column":53},"end":{"line":1138,"column":59}},{"start":{"line":1138,"column":63},"end":{"line":1138,"column":72}}]},"90":{"line":1158,"type":"if","locations":[{"start":{"line":1158,"column":16},"end":{"line":1158,"column":16}},{"start":{"line":1158,"column":16},"end":{"line":1158,"column":16}}]},"91":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":18},"end":{"line":1161,"column":18}},{"start":{"line":1161,"column":18},"end":{"line":1161,"column":18}}]},"92":{"line":1174,"type":"if","locations":[{"start":{"line":1174,"column":8},"end":{"line":1174,"column":8}},{"start":{"line":1174,"column":8},"end":{"line":1174,"column":8}}]},"93":{"line":1176,"type":"if","locations":[{"start":{"line":1176,"column":15},"end":{"line":1176,"column":15}},{"start":{"line":1176,"column":15},"end":{"line":1176,"column":15}}]},"94":{"line":1197,"type":"if","locations":[{"start":{"line":1197,"column":4},"end":{"line":1197,"column":4}},{"start":{"line":1197,"column":4},"end":{"line":1197,"column":4}}]},"95":{"line":1202,"type":"if","locations":[{"start":{"line":1202,"column":4},"end":{"line":1202,"column":4}},{"start":{"line":1202,"column":4},"end":{"line":1202,"column":4}}]},"96":{"line":1206,"type":"if","locations":[{"start":{"line":1206,"column":4},"end":{"line":1206,"column":4}},{"start":{"line":1206,"column":4},"end":{"line":1206,"column":4}}]},"97":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":8},"end":{"line":1217,"column":8}},{"start":{"line":1217,"column":8},"end":{"line":1217,"column":8}}]},"98":{"line":1220,"type":"binary-expr","locations":[{"start":{"line":1220,"column":10},"end":{"line":1220,"column":28}},{"start":{"line":1220,"column":32},"end":{"line":1220,"column":67}}]},"99":{"line":1267,"type":"binary-expr","locations":[{"start":{"line":1267,"column":15},"end":{"line":1267,"column":23}},{"start":{"line":1267,"column":28},"end":{"line":1267,"column":36}}]},"100":{"line":1274,"type":"binary-expr","locations":[{"start":{"line":1274,"column":15},"end":{"line":1274,"column":18}},{"start":{"line":1274,"column":22},"end":{"line":1274,"column":26}}]},"101":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":4},"end":{"line":1289,"column":4}},{"start":{"line":1289,"column":4},"end":{"line":1289,"column":4}}]},"102":{"line":1296,"type":"if","locations":[{"start":{"line":1296,"column":4},"end":{"line":1296,"column":4}},{"start":{"line":1296,"column":4},"end":{"line":1296,"column":4}}]},"103":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":4},"end":{"line":1300,"column":4}},{"start":{"line":1300,"column":4},"end":{"line":1300,"column":4}}]},"104":{"line":1304,"type":"if","locations":[{"start":{"line":1304,"column":4},"end":{"line":1304,"column":4}},{"start":{"line":1304,"column":4},"end":{"line":1304,"column":4}}]},"105":{"line":1324,"type":"if","locations":[{"start":{"line":1324,"column":8},"end":{"line":1324,"column":8}},{"start":{"line":1324,"column":8},"end":{"line":1324,"column":8}}]}},"code":["'use strict';","","const DataTypes = require('./db/data_types.js');","const Database = require('./db/database.js');","const Composer = require('./composer.js');","","const ModelArray = require('./model_array.js');","","const utilities = require('./utilities.js');","const async = require('async');","const inflect = require('i')();","const deepEqual = require('deep-equal');","","const RelationshipGraph = require('./relationship_graph.js');","const Relationships = new RelationshipGraph();","","/**","* Basic Model implementation. Optionally interfaces with database.","* @class","*/","class Model {","","  /**","  * @param {Object} modelData Data to load into the object","  * @param {optional boolean} fromStorage Is this model being loaded from storage? Defaults to false.","  * @param {option boolean} fromSeed Is this model being seeded?","  */","  constructor(modelData, fromStorage, fromSeed) {","","    modelData = modelData || {};","","    this.__initialize__();","    this.__load__(modelData, fromStorage, fromSeed);","","  }","","  /**","  * Finds a model with a provided id, otherwise returns a notFound error.","  * @param {number} id The id of the model you're looking for","  * @param {function({Error} err, {Nodal.Model} model)} callback The callback to execute upon completion","  */","  static find(id, callback) {","","    let db = this.prototype.db;","","    // legacy support","    if (arguments.length === 3) {","      db = arguments[0];","      id = arguments[1];","      callback = arguments[2];","    }","","    return new Composer(this)","      .where({id: id})","      .end((err, models) => {","","        if (!err && !models.length) {","          let err = new Error(`Could not find ${this.name} with id \"${id}\".`);","          err.notFound = true;","          return callback(err);","        }","","        callback(err, models[0]);","","      });","","  }","","  /**","  * Finds a model with a provided field, value pair. Returns the first found.","  * @param {string} field Name of the field","  * @param {any} value Value of the named field to compare against","  * @param {function({Error} err, {Nodal.Model} model)} callback The callback to execute upon completion","  */","  static findBy(field, value, callback) {","","    let db = this.prototype.db;","    let query = {};","    query[field] = value;","","    return new Composer(this)","      .where(query)","      .end((err, models) => {","","        if (!err && !models.length) {","          let err = new Error(`Could not find ${this.name} with ${field} \"${value}\".`);","          err.notFound = true;","          return callback(err);","        }","","        callback(err, models[0]);","","      });","","  }","","  /**","  * Creates a new model instance using the provided data.","  * @param {object} data The data to load into the object.","  * @param {function({Error} err, {Nodal.Model} model)} callback The callback to execute upon completion","  */","  static create(data, callback) {","","    let model = new this(data);","    model.save(callback);","","  }","","  /**","  * Finds a model with a provided field, value pair. Returns the first found.","  * @param {string} field Name of the field","  * @param {object} data Key-value pairs of Model creation data. Will use appropriate value to query for based on \"field\" parametere.","  * @param {function({Error} err, {Nodal.Model} model)} callback The callback to execute upon completion","  */","  static findOrCreateBy(field, data, callback) {","","    this.findBy(field, data[field], (err, model) => {","","      if (err) {","        if (err.notFound) {","          return this.create(data, callback);","        } else {","          return callback(err);","        }","      } else {","        return callback(null, model);","      }","","    });","","  }","","  /**","  * Finds and updates a model with a specified id. Return a notFound error if model does not exist.","  * @param {number} id The id of the model you're looking for","  * @param {object} data The data to load into the object.","  * @param {function({Error} err, {Nodal.Model} model)} callback The callback to execute upon completion","  */","  static update(id, data, callback) {","","    this.find(id, (err, model) => {","","      if (err) {","        return callback(err);","      }","","      model.read(data);","      model.save(callback);","","    });","","  }","","  /**","  * Finds and destroys a model with a specified id. Return a notFound error if model does not exist.","  * @param {number} id The id of the model you're looking for","  * @param {function({Error} err, {Nodal.Model} model)} callback The callback to execute upon completion","  */","  static destroy(id, callback) {","","    this.find(id, (err, model) => {","","      if (err) {","        return callback(err);","      }","","      model.destroy(callback);","","    });","","  }","","  /**","  * Creates a new Composer (ORM) instance to begin a new query.","  * @param {optional Nodal.Database} db Deprecated - provide a database to query from. Set the model's db in its constructor file, instead.","  * @return {Nodal.Composer}","  */","  static query(db) {","","    db = db || this.prototype.db;","    return new Composer(this);","","  }","","  /**","  * Creates a transaction object to be passed to database methods","  * @param {Function} callback Callback to execute upon completion","  */","  static transaction(callback) {","","    return this.prototype.db.adapter.createTransaction(callback);","","  }","","  /**","  * Get the model's table name","  * @return {string}","  */","  static table() {","    return this.prototype.schema.table;","  }","","  /**","  * Get the model's column data","  * @return {Array}","  */","  static columns() {","    return this.prototype.schema.columns;","  };","","  /**","  * Get the model's column names (fields)","  * @return {Array}","  */","  static columnNames() {","    return this.columns().map(v => v.name);","  }","","  /**","  * Get the model's column lookup data","  * @return {Object}","  */","  static columnLookup() {","    return this.columns().reduce((p, c) => {","      p[c.name] = c;","      return p;","    }, {});","  }","","  /**","  * Check if the model has a column name in its schema","  * @param {string} columnName","  */","  static hasColumn(columnName) {","    return !!this.column(columnName);","  }","","  /**","  * Return the column schema data for a given name","  * @param {string} columnName","  */","  static column(columnName) {","    return this.prototype._columnLookup[columnName];","  }","","  /**","  * Get resource data for a model, for API responses and debug information","  * @param {Array} arrInterface Array of strings representing output columns, or singularly-keyed objects representing relationships and their interface.","  * @return {Object} Resource object for the model","  * @deprecated","  */","  static toResource(arrInterface) {","","    if (!arrInterface || !arrInterface.length) {","      arrInterface = this.columnNames().concat(","        Object.keys(this.prototype._joins)","          .map(r => {","            let obj = {};","            obj[r] = this.joinInformation(r).Model.columnNames();","            return obj;","          })","      );","    }","","","    let columnLookup = this.columnLookup();","","    let resourceColumns = arrInterface.map(r => {","","      if (typeof r === 'string') {","","        let field = columnLookup[r];","","        if (!field) {","          return null;","        }","","        let fieldData = {","          name: r,","          type: field ? field.type : 'string'","        };","","        field.array && (fieldData.array = true);","","        return fieldData;","","      } else if (typeof r === 'object' && r !== null) {","","        return null; // FIXME: Deprecated for relationships.","","        let key = Object.keys(r)[0];","        let relationship = this.joinInformation(key);","","        if (!relationship) {","          return null;","        }","","        return relationship.Model.toResource(r[key]);","","      }","","    }).filter(r => r);","","    return {","      name: this.name,","      type: 'resource',","      fields: resourceColumns","    };","","  }","","  /**","  * Set the database to be used for this model","  * @param {Nodal.Database} db","  */","  static setDatabase(db) {","","    this.prototype.db = db;","","  }","","  /**","  * Set the schema to be used for this model","  * @param {Object} schema","  */","  static setSchema(schema) {","","    if (!schema) {","      throw new Error([","        `Could not set Schema for ${this.name}.`,","        `Please make sure to run any outstanding migrations.`","      ].join('\\n'));","    }","","    this.prototype.schema = schema;","","    this.prototype._table = this.table();","    this.prototype._columns = this.columns();","    this.prototype._columnNames = this.columnNames();","    this.prototype._columnLookup = this.columnLookup();","","    this.prototype._data = this.columnNames()","      .reduce((p, c) => {","        p[c] = null;","        return p;","      }, {});","","    this.prototype._changed = this.columnNames()","      .reduce((p, c) => {","        p[c] = false;","        return p;","      }, {});","","  }","","  /**","  * FIXME","  */","  static relationships() {","","    return Relationships.of(this);","","  }","","  /**","  * FIXME","  */","  static relationship(name) {","","    this._relationshipCache = this._relationshipCache || {};","    this._relationshipCache[name] = (this._relationshipCache[name] || this.relationships().findExplicit(name));","    return this._relationshipCache[name];","","  }","","  /**","  * Sets a joins relationship for the Model. Sets joinedBy relationship for parent.","  * @param {class Nodal.Model} Model The Model class which your current model belongs to","  * @param {Object} [options={}]","  *   \"name\": The string name of the parent in the relationship (default to camelCase of Model name)","  *   \"via\": Which field in current model represents this relationship, defaults to `${name}_id`","  *   \"as\": What to display the name of the child as when joined to the parent (default to camelCase of child name)","  *   \"multiple\": Whether the child exists in multiples for the parent (defaults to false)","  */","  static joinsTo(Model, options) {","","    return this.relationships().joinsTo(Model, options);","","  }","","  /**","  * Create a validator. These run synchronously and check every time a field is set / cleared.","  * @param {string} field The field you'd like to validate","  * @param {string} message The error message shown if a validation fails.","  * @param {function({any} value)} fnAction the validation to run - first parameter is the value you're testing.","  */","  static validates(field, message, fnAction) {","","    if (!this.prototype.hasOwnProperty('_validations')) {","      this.prototype._validations = {};","      this.prototype._validationsList = [];","    };","","    if (!this.prototype._validations[field]) {","      this.prototype._validationsList.push(field);","    }","","    this.prototype._validations[field] = this.prototype._validations[field] || [];","    this.prototype._validations[field].push({message: message, action: fnAction});","","  }","","  /**","  * Creates a verifier. These run asynchronously, support multiple fields, and check every time you try to save a Model.","  * @param {string} field The field applied to the verification.","  * @param {string} message The error message shown if a verification fails.","  * @param {function} fnAction The asynchronous verification method. The last argument passed is always a callback, and field names are determined by the argument names.","  */","  static verifies(field, message, fnAction) {","","    // Legacy support","    if (arguments.length === 2) {","      fnAction = message;","      message = field;","      field = null;","    }","","    if (!this.prototype.hasOwnProperty('_verificationsList')) {","      this.prototype._verificationsList = [];","    };","","    this.prototype._verificationsList.push({","      field: field,","      message: message,","      action: fnAction,","      fields: utilities.getFunctionParameters(fnAction).slice(0, -1)","    });","","  }","","  /**","  * Create a calculated field (in JavaScript). Must be synchronous.","  * @param {string} calcField The name of the calculated field","  * @param {function} fnCalculate The synchronous method to perform a calculation for.","  *   Pass the names of the (non-computed) fields you'd like to use as parameters.","  */","  static calculates(calcField, fnCompute) {","","    if (!this.prototype.hasOwnProperty('_calculations')) {","      this.prototype._calculations = {};","      this.prototype._calculationsList = [];","    }","","    if (this.prototype._calculations[calcField]) {","      throw new Error(`Calculated field \"${calcField}\" for \"${this.name}\" already exists!`);","    }","","    let columnLookup = this.columnLookup();","","    if (columnLookup[calcField]) {","      throw new Error(`Cannot create calculated field \"${calcField}\" for \"${this.name}\", field already exists.`);","    }","","    let fields = utilities.getFunctionParameters(fnCompute);","","    fields.forEach(f => {","      if (!columnLookup[f]) {","        throw new Error(`Calculation function error: \"${calcField} for \"${this.name}\" using field \"${f}\", \"${f}\" does not exist.`)","      }","    });","","    this.prototype._calculations[calcField] = {","      calculate: fnCompute,","      fields: fields","    };","","    this.prototype._calculationsList.push(calcField);","","  }","","  /**","  * Hides fields from being output in .toObject() (i.e. API responses), even if asked for","  * @param {String} field","  */","  static hides(field) {","","    if (!this.prototype.hasOwnProperty('_hides')) {","      this.prototype._hides = {};","    }","","    this.prototype._hides[field] = true;","    return true;","","  }","","  /**","  * Tells us if a field is hidden (i.e. from API queries)","  * @param {String} field","  */","  static isHidden(field) {","","    return this.prototype._hides[field] || false;","","  }","","  /**","  * Prepare model for use","  * @private","  */","  __initialize__() {","","    this._relationshipCache = {};","","    this._joinsCache = {};","    this._joinsList = [];","","    this._data = Object.create(this._data); // Inherit from prototype","    this._changed = Object.create(this._changed); // Inherit from prototype","    this._errors = {};","","    return true;","","  }","","  /**","  * Loads data into the model","  * @private","  * @param {Object} data Data to load into the model","  * @param {optional boolean} fromStorage Specify if the model was loaded from storage. Defaults to false.","  * @param {optional boolean} fromSeed Specify if the model was generated from a seed. Defaults to false.","  */","  __load__(data, fromStorage, fromSeed) {","","    data = data || {};","","    this._inStorage = !!fromStorage;","    this._isSeeding = !!fromSeed;","","    if (!fromStorage) {","      data.created_at = new Date();","      data.updated_at = new Date();","    }","","    let keys = Object.keys(data);","","    keys.forEach(key => {","      this.__safeSet__(key, data[key]);","      this._changed[key] = !fromStorage","    });","","    this.__validate__();","","    return this;","","  }","","  /**","  * Validates provided fieldList (or all fields if not provided)","  * @private","  * @param {optional Array} fieldList fields to validate","  */","  __validate__(field) {","","    let data = this._data;","","    if (!field) {","","      let valid = true;","      this._validationsList.forEach(field => valid = (this.__validate__(field) && valid));","      return valid;","","    } else if (!this._validations[field]) {","","      return true;","","    }","","    this.clearError(field);","    let value = this._data[field];","","    return this._validations[field].filter(validation => {","      let valid = validation.action.call(null, value);","      !valid && this.setError(field, validation.message);","      return valid;","    }).length === 0;","","  }","","  /**","  * Sets specified field data for the model, assuming data is safe and does not log changes","  * @param {string} field Field to set","  * @param {any} value Value for the field","  */","  __safeSet__(field, value) {","","    if (this.relationship(field)) {","","      return this.setJoined(field, value);","","    }","","    if (!this.hasField(field)) {","","      return;","","    }","","    this._data[field] = this.convert(field, value);","","  }","","  /**","  * Indicates whethere or not the model is currently represented in hard storage (db).","  * @return {boolean}","  */","  inStorage() {","    return this._inStorage;","  }","","  /**","  * Indicates whethere or not the model is being generated from a seed.","  * @return {boolean}","  */","  isSeeding() {","    return this._isSeeding;","  }","","  /**","  * Tells us whether a model field has changed since we created it or loaded it from storage.","  * @param {string} field The model field","  * @return {boolean}","  */","  hasChanged(field) {","    return field === undefined ? this.changedFields().length > 0 : !!this._changed[field];","  }","","  /**","  * Provides an array of all changed fields since model was created / loaded from storage","  * @return {Array}","  */","  changedFields() {","    let changed = this._changed;","    return Object.keys(changed).filter(v => changed[v]);","  }","","  /**","  * Creates an error object for the model if any validations have failed, returns null otherwise","  * @return {Error}","  */","  errorObject() {","","    let error = null;","","    if (this.hasErrors()) {","","      let errorObject = this.getErrors();","      let message = errorObject._query || 'Validation error';","","      error = new Error(message);","      error.details = errorObject;","","    }","","    return error;","","  }","","  /**","  * Tells us whether or not the model has errors (failed validations)","  * @return {boolean}","  */","  hasErrors() {","","    return Object.keys(this._errors).length > 0;","","  }","","  /**","  * Gives us an error object with each errored field as a key, and each value","  * being an array of failure messages from the validators","  * @return {Object}","  */","  getErrors() {","    let obj = {};","    let errors = this._errors;","    Object.keys(errors).forEach(function(key) {","      obj[key] = errors[key];","    });","    return obj;","  }","","  /**","  * Reads new data into the model.","  * @param {Object} data Data to inject into the model","  * @return {this}","  */","  read(data) {","","    this.fieldList()","      .concat(this._joinsList)","      .filter((key) => data.hasOwnProperty(key))","      .forEach((key) => this.set(key, data[key]));","","    return this;","","  }","","  /**","  * Converts a value to its intended format based on its field. Returns null if field not found.","  * @param {string} field The field to use for conversion data","  * @param {any} value The value to convert","  */","  convert(field, value) {","","    if (!this.hasField(field) || value === null || value === undefined) {","      return null;","    }","","    let dataType = this.getDataTypeOf(field);","","    if (this.isFieldArray(field)) {","      return (value instanceof Array ? value : [value]).map(v => dataType.convert(v));","    }","","    return dataType.convert(value);","","  }","","  /**","  * Grabs the path of the given relationship from the RelationshipGraph","  * @param {string} name the name of the relationship","  */","  relationship(name) {","    return this.constructor.relationship(name);","  }","","  /**","  * Sets specified field data for the model. Logs and validates the change.","  * @param {string} field Field to set","  * @param {any} value Value for the field","  */","  set(field, value) {","","    if (!this.hasField(field)) {","","      throw new Error('Field ' + field + ' does not belong to model ' + this.constructor.name);","","    }","","    let curValue = this._data[field];","    let changed = false;","    value = this.convert(field, value);","","    if (value !== curValue) {","","      changed = true;","","      if (","        value instanceof Array &&","        curValue instanceof Array &&","        value.length === curValue.length","      ) {","","        changed = false;","        // If we have two equal length arrays, we must compare every value","","        for (let i = 0; i < value.length; i++) {","          if (value[i] !== curValue[i]) {","            changed = true;","            break;","          }","        }","      }","","      // If we have an object value (json), do a deterministic diff using","      // node-deep-equals","      // NOTE: Lets do an extra deep object test","      if ( utilities.isObject(value) ) {","        changed = !deepEqual( curValue, value, { strict: true});","      }","","    }","","    this._data[field] = value;","    this._changed[field] = changed;","    changed && this.__validate__(field);","","    return value;","","  }","","  /**","  * Set a joined object (Model or ModelArray)","  * @param {string} field The field (name of the join relationship)","  * @param {Model|ModelArray} value The joined model or array of models","  */","  setJoined(field, value) {","","    let relationship = this.relationship(field);","","    if (!relationship.multiple()) {","","      if (!(value instanceof relationship.getModel())) {","","        throw new Error(`${value} is not an instance of ${relationship.getModel().name}`);","","      }","","    } else {","","      if (!(value instanceof ModelArray) && ModelArray.Model !== relationship.getModel()) {","","        throw new Error(`${value} is not an instanceof ModelArray[${relationship.getModel().name}]`);","","      }","","    }","","    if (!this._joinsCache[field]) {","      this._joinsList.push(field);","    }","","    this._joinsCache[field] = value;","","    return value;","","  }","","  /**","  * Calculate field from calculations (assumes it exists)","  *  @param {string} field Name of the calculated field","  */","  calculate(field) {","    let calc = this._calculations[field];","    return calc.calculate.apply(","      this,","      calc.fields.map(f => this.get(f))","    );","  }","","  /**","  * Retrieve field data for the model.","  * @param {string} field Field for which you'd like to retrieve data.","  */","  get(field, defaultValue) {","","    if (this._calculations[field]) {","      return this.calculate(field);","    }","","    return this._data.hasOwnProperty(field) ? this._data[field] : defaultValue;","","  }","","  /**","  * Retrieves joined Model or ModelArray","  * @param {String} joinName the name of the join (list of connectors separated by __)","  */","  joined(joinName) {","","    return this._joinsCache[joinName];","","  }","","  /**","  * Retrieve associated models joined this model from the database.","  * @param {function({Error} err, {Nodal.Model|Nodal.ModelArray} model_1, ... {Nodal.Model|Nodal.ModelArray} model_n)}","  *   Pass in a function with named parameters corresponding the relationships you'd like to retrieve.","  *   The first parameter is always an error callback.","  */","  include(callback) {","","    let db = this.db;","","    // legacy support","    if (arguments.length === 2) {","      db = arguments[0];","      callback = arguments[1];","    }","","    let joinNames = utilities.getFunctionParameters(callback);","    joinNames = joinNames.slice(1);","","    if (!joinNames.length) {","      throw new Error('No valid relationships (1st parameter is error)');","    }","","    let invalidJoinNames = joinNames.filter(r => !this.relationship(r));","","    if (invalidJoinNames.length) {","      throw new Error(`Joins \"${invalidJoinNames.join('\", \"')}\" for model \"${this.constructor.name}\" do not exist.`);","    }","","    let query = this.constructor.query().where({id: this.get('id')});","","    joinNames.forEach(joinName => query = query.join(joinName));","","    query.end((err, models) => {","","      if (err) {","        return callback(err);","      }","","      if (!models || !models.length) {","        return callback(new Error('Could not fetch parent'));","      }","","      let model = models[0];","      let joins = joinNames.map(joinName => {","        let join = model.joined(joinName);","        join && this.setJoined(joinName, join);","        return join;","      });","","      return callback.apply(this, [null].concat(joins));","","    });","","  };","","  /**","  * Creates a plain object from the Model, with properties matching an optional interface","  * @param {Array} arrInterface Interface to use for object creation","  */","  toObject(arrInterface) {","","    let obj = {};","","    arrInterface = arrInterface ||","      this.fieldList()","      .concat(this._calculationsList)","      .filter(key => !this._hides[key]);","","    arrInterface.forEach(key => {","","      if (this._hides[key]) {","        return;","      }","","      let joinObject;","","      if (typeof key === 'object' && key !== null) {","        let subInterface = key;","        key = Object.keys(key)[0];","        joinObject = this._joinsCache[key];","        joinObject && (obj[key] = joinObject.toObject(subInterface[key]));","      } else if (this._data[key] !== undefined) {","        obj[key] = this._data[key];","      } else if (this._calculations[key] !== undefined) {","        obj[key] = this.calculate(key);","      } else if (joinObject = this._joinsCache[key]) {","        obj[key] = joinObject.toObject();","      }","","    });","","    return obj;","","  }","","  /**","  * Get the table name for the model.","  * @return {string}","  */","  tableName() {","    return this._table;","  }","","  /**","  * Determine if the model has a specified field.","  * @param {string} field","  * @return {boolean}","  */","  hasField(field) {","    return !!this._columnLookup[field];","  }","","  /**","  * Retrieve the schema field data for the specified field","  * @param {string} field","  * @return {Object}","  */","  getFieldData(field) {","    return this._columnLookup[field];","  }","","  /**","  * Retrieve the schema data type for the specified field","  * @param {string} field","  * @return {string}","  */","  getDataTypeOf(field) {","    return DataTypes[this._columnLookup[field].type];","  }","","  /**","  * Determine whether or not this field is an Array (PostgreSQL supports this)","  * @param {string} field","  * @return {boolean}","  */","  isFieldArray(field) {","    let fieldData = this._columnLookup[field];","    return !!(fieldData && fieldData.properties && fieldData.properties.array);","  }","","  /**","  * Determine whether or not this field is a primary key in our schema","  * @param {string} field","  * @return {boolean}","  */","  isFieldPrimaryKey(field) {","    let fieldData = this._columnLookup[field];","    return !!(fieldData && fieldData.properties && fieldData.properties.primary_key);","  }","","  /**","  * Retrieve the defaultValue for this field from our schema","  * @param {string} field","  * @return {any}","  */","  fieldDefaultValue(field) {","    let fieldData = this._columnLookup[field];","    return fieldData && fieldData.properties ? fieldData.properties.defaultValue : null;","  }","","  /**","  * Retrieve an array of fields for our model","  * @return {Array}","  */","  fieldList() {","    return this._columnNames.slice();","  }","","  /**","  * Retrieve our field schema definitions","  * @return {Array}","  */","  fieldDefinitions() {","    return this._columns.slice();","  }","","  /**","  * Set an error for a specified field (supports multiple errors)","  * @param {string} key The specified field for which to create the error (or '*' for generic)","  * @param {string} message The error message","  * @return {boolean}","  */","  setError(key, message) {","    this._errors[key] = this._errors[key] || [];","    this._errors[key].push(message);","    return true;","  }","","  /**","  * Clears all errors for a specified field","  * @param {string} key The specified field for which to create the error (or '*' for generic)","  * @return {boolean}","  */","  clearError(key) {","    delete this._errors[key];","    return true;","  }","","  __generateSaveQuery__() {","","    let query, columns;","    let db = this.db;","","    if (!this.inStorage()) {","","      columns = this.fieldList().filter(v => !this.isFieldPrimaryKey(v) && this.get(v) !== undefined);","      query = db.adapter.generateInsertQuery(this.schema.table, columns);","","    } else {","","      columns = ['id'].concat(this.changedFields().filter(v => !this.isFieldPrimaryKey(v)));","      query = db.adapter.generateUpdateQuery(this.schema.table, columns);","","    }","","    return {","      sql: query,","      params: columns.map(v => db.adapter.sanitize(this.getFieldData(v).type, this.get(v)))","    };","","  }","","  /**","  * Logic to execute before a model saves. Intended to be overwritten when inherited.","  * @param {Function} callback Invoke with first argument as an error if failure.","  */","  beforeSave(callback) {","","    callback(null, this);","","  }","","  /**","  * Logic to execute after a model saves. Intended to be overwritten when inherited.","  * @param {Function} callback Invoke with first argument as an error if failure.","  */","  afterSave(callback) {","","    callback(null, this);","","  }","","  /**","  * Save a model (execute beforeSave and afterSave)","  * @param {Function} callback Callback to execute upon completion","  */","  save(callback) {","","    callback = callback || (() => {});","","    async.series([","      this.__verify__,","      this.beforeSave,","      this.__save__,","      this.afterSave","    ].map(f => f.bind(this)), (err) => {","      callback(err || null, this);","    });","","  }","","  /**","  * Runs an update query for this specific model instance","  * @param {Object} fields Key-value pairs of fields to update","  * @param {Function} callback Callback to execute upon completion","  */","  update(fields, callback) {","","    callback = callback || (() => {});","","    this.constructor.query()","      .where({id: this.get('id')})","      .update(fields, (err, models) => callback(err, models && models[0]));","","  }","","  /**","  * Runs all verifications before saving","  * @param {function} callback Method to execute upon completion. Returns true if OK, false if failed","  * @private","  */","  __verify__(callback) {","","    // Run through verifications in order they were added","    async.series(","      this._verificationsList.map(verification => {","        return callback => {","          verification.action.apply(","            this,","            verification.fields","              .map(field => this.get(field))","              .concat(bool => {","                if (bool) {","                  callback(null);","                } else {","                  if (verification.field) {","                    this.setError(verification.field, verification.message);","                    callback(null);","                  } else {","                    callback(new Error(verification.message))","                  }","                }","              })","          )","        };","      }),","      (err) => {","","        if (this.hasErrors()) {","          return callback.call(this, this.errorObject());","        } else if (err) {","          return callback.call(this, err);","        }","","        callback(null);","","      }","    );","","  }","","  /**","  * Saves model to database","  * @param {function} callback Method to execute upon completion, returns error if failed (including validations didn't pass)","  * @private","  */","  __save__(callback) {","","    let db = this.db;","","    // Legacy --- FIXME: Deprecated. Can remove for 1.0","    if (arguments.length === 2) {","      db = arguments[0];","      callback = arguments[1];","    }","","    if(typeof callback !== 'function') {","      callback = function() {};","    }","","    if (this.fieldList().indexOf('updated_at') !== -1) {","      this.set('updated_at', new Date());","    }","","    let query = this.__generateSaveQuery__();","","    db.query(","      query.sql,","      query.params,","      (err, result) => {","","        if (err) {","          this.setError('_query', err.message);","        } else {","          result.rows.length && this.__load__(result.rows[0], true);","        }","","        callback.call(this, this.errorObject());","","      }","    );","","  }","","  /**","  * Destroys model and cascades all deletes.","  * @param {function} callback method to run upon completion","  */","  destroyCascade(callback) {","","    ModelArray.from([this]).destroyCascade(callback);","","  }","","  /**","  * Logic to execute before a model gets destroyed. Intended to be overwritten when inherited.","  * @param {Function} callback Invoke with first argument as an error if failure.","  */","  beforeDestroy(callback) {","","    callback(null, this);","","  }","","  /**","  * Logic to execute after a model is destroyed. Intended to be overwritten when inherited.","  * @param {Function} callback Invoke with first argument as an error if failure.","  */","  afterDestroy(callback) {","","    callback(null, this);","","  }","","  /**","  * Destroys model reference in database.","  * @param {function({Error} err, {Nodal.Model} model)} callback","  *   Method to execute upon completion, returns error if failed","  */","  destroy(callback) {","","    callback = callback || (() => {});","","    async.series([","      this.beforeDestroy,","      this.__destroy__,","      this.afterDestroy","    ].map(f => f.bind(this)), (err) => {","      callback(err || null, this);","    });","","  }","","  /**","  * Destroys model reference in database","  * @param {function} callback Method to execute upon completion, returns error if failed","  * @private","  */","  __destroy__(callback) {","","    let db = this.db;","","    // Legacy","    if (arguments.length === 2) {","      db = arguments[0];","      callback = arguments[1];","    }","","    let model = this;","","    if (!(db instanceof Database)) {","      throw new Error('Must provide a valid Database to save to');","    }","","    if (typeof callback !== 'function') {","      callback = function() {};","    }","","    if (!model.inStorage()) {","","      setTimeout(callback.bind(model, {'_query': 'Model has not been saved'}, model), 1);","      return;","","    }","","    let columns = model.fieldList().filter(function(v) {","      return model.isFieldPrimaryKey(v);","    });","","    let query = db.adapter.generateDeleteQuery(model.schema.table, columns);","","    db.query(","      query,","      columns.map(function(v) {","        return db.adapter.sanitize(model.getFieldData(v).type, model.get(v, true));","      }),","      function(err, result) {","","        if (err) {","          model.setError('_query', err.message);","        } else {","          model._inStorage = false;","        }","","        callback.call(model, err, model);","","      }","    );","","  }","","}","","Model.prototype.schema = {","  table: '',","  columns: []","};","","Model.prototype._validations = {};","Model.prototype._validationsList = [];","","Model.prototype._calculations = {};","Model.prototype._calculationsList = [];","","Model.prototype._verificationsList = [];","","Model.prototype._hides = {};","","Model.prototype.data = null;","","Model.prototype.db = null;","","Model.prototype.externalInterface = [","  'id',","  'created_at',","  'updated_at'","];","","Model.prototype.aggregateBy = {","  'id': 'count',","  'created_at': 'min',","  'updated_at': 'min'","};","","module.exports = Model;",""],"l":{"3":1,"4":1,"5":1,"7":1,"9":1,"10":1,"11":1,"12":1,"14":1,"15":1,"30":0,"32":0,"33":0,"44":0,"47":0,"48":0,"49":0,"50":0,"53":0,"57":0,"58":0,"59":0,"60":0,"63":0,"77":0,"78":0,"79":0,"81":0,"85":0,"86":0,"87":0,"88":0,"91":0,"104":0,"105":0,"117":0,"119":0,"120":0,"121":0,"123":0,"126":0,"141":0,"143":0,"144":0,"147":0,"148":0,"161":0,"163":0,"164":0,"167":0,"180":0,"181":0,"191":0,"200":0,"208":0,"216":0,"224":0,"225":0,"226":0,"235":0,"243":0,"254":0,"255":0,"258":0,"259":0,"260":0,"266":0,"268":0,"270":0,"272":0,"274":0,"275":0,"278":0,"283":0,"285":0,"287":0,"289":0,"291":0,"292":0,"294":0,"295":0,"298":0,"302":0,"304":0,"318":0,"328":0,"329":0,"335":0,"337":0,"338":0,"339":0,"340":0,"342":0,"344":0,"345":0,"348":0,"350":0,"351":0,"361":0,"370":0,"371":0,"372":0,"387":0,"399":0,"400":0,"401":0,"404":0,"405":0,"408":0,"409":0,"422":0,"423":0,"424":0,"425":0,"428":0,"429":0,"432":0,"449":0,"450":0,"451":0,"454":0,"455":0,"458":0,"460":0,"461":0,"464":0,"466":0,"467":0,"468":0,"472":0,"477":0,"487":0,"488":0,"491":0,"492":0,"502":0,"512":0,"514":0,"515":0,"517":0,"518":0,"519":0,"521":0,"534":0,"536":0,"537":0,"539":0,"540":0,"541":0,"544":0,"546":0,"547":0,"548":0,"551":0,"553":0,"564":0,"566":0,"568":0,"569":0,"570":0,"572":0,"574":0,"578":0,"579":0,"581":0,"582":0,"583":0,"584":0,"596":0,"598":0,"602":0,"604":0,"608":0,"617":0,"625":0,"634":0,"642":0,"643":0,"652":0,"654":0,"656":0,"657":0,"659":0,"660":0,"664":0,"674":0,"684":0,"685":0,"686":0,"687":0,"689":0,"699":0,"701":0,"702":0,"704":0,"715":0,"716":0,"719":0,"721":0,"722":0,"725":0,"734":0,"744":0,"746":0,"750":0,"751":0,"752":0,"754":0,"756":0,"758":0,"764":0,"767":0,"768":0,"769":0,"770":0,"778":0,"779":0,"784":0,"785":0,"786":0,"788":0,"799":0,"801":0,"803":0,"805":0,"811":0,"813":0,"819":0,"820":0,"823":0,"825":0,"834":0,"835":0,"837":0,"847":0,"848":0,"851":0,"861":0,"873":0,"876":0,"877":0,"878":0,"881":0,"882":0,"884":0,"885":0,"888":0,"890":0,"891":0,"894":0,"896":0,"898":0,"900":0,"901":0,"904":0,"905":0,"908":0,"909":0,"910":0,"911":0,"912":0,"915":0,"927":0,"929":0,"932":0,"934":0,"936":0,"937":0,"940":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"957":0,"966":0,"975":0,"984":0,"993":0,"1002":0,"1003":0,"1012":0,"1013":0,"1022":0,"1023":0,"1031":0,"1039":0,"1049":0,"1050":0,"1051":0,"1060":0,"1061":0,"1066":0,"1067":0,"1069":0,"1071":0,"1072":0,"1076":0,"1077":0,"1081":0,"1083":0,"1094":0,"1104":0,"1114":0,"1116":0,"1121":0,"1122":0,"1134":0,"1136":0,"1138":0,"1150":0,"1152":0,"1153":0,"1156":0,"1158":0,"1159":0,"1161":0,"1162":0,"1163":0,"1165":0,"1174":0,"1175":0,"1176":0,"1177":0,"1180":0,"1194":0,"1197":0,"1198":0,"1199":0,"1202":0,"1203":0,"1206":0,"1207":0,"1210":0,"1212":0,"1217":0,"1218":0,"1220":0,"1223":0,"1236":0,"1246":0,"1256":0,"1267":0,"1269":0,"1273":0,"1274":0,"1286":0,"1289":0,"1290":0,"1291":0,"1294":0,"1296":0,"1297":0,"1300":0,"1301":0,"1304":0,"1306":0,"1307":0,"1311":0,"1312":0,"1315":0,"1317":0,"1320":0,"1324":0,"1325":0,"1327":0,"1330":0,"1339":1,"1344":1,"1345":1,"1347":1,"1348":1,"1350":1,"1352":1,"1354":1,"1356":1,"1358":1,"1364":1,"1370":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/data_types.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/data_types.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":13},"end":{"line":5,"column":25}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":13},"end":{"line":10,"column":25}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":25}}},"4":{"name":"(anonymous_4)","line":20,"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":25}}},"5":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":25}}},"6":{"name":"(anonymous_6)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":25}}},"7":{"name":"(anonymous_7)","line":35,"loc":{"start":{"line":35,"column":13},"end":{"line":35,"column":25}}},"8":{"name":"(anonymous_8)","line":46,"loc":{"start":{"line":46,"column":13},"end":{"line":46,"column":25}}},"9":{"name":"(anonymous_9)","line":51,"loc":{"start":{"line":51,"column":13},"end":{"line":51,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":55,"column":2}},"2":{"start":{"line":6,"column":6},"end":{"line":6,"column":100}},"3":{"start":{"line":11,"column":6},"end":{"line":11,"column":100}},"4":{"start":{"line":16,"column":6},"end":{"line":16,"column":100}},"5":{"start":{"line":21,"column":6},"end":{"line":21,"column":32}},"6":{"start":{"line":26,"column":6},"end":{"line":26,"column":40}},"7":{"start":{"line":31,"column":6},"end":{"line":31,"column":40}},"8":{"start":{"line":36,"column":6},"end":{"line":41,"column":7}},"9":{"start":{"line":37,"column":8},"end":{"line":37,"column":24}},"10":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"11":{"start":{"line":39,"column":10},"end":{"line":39,"column":26}},"12":{"start":{"line":42,"column":6},"end":{"line":42,"column":15}},"13":{"start":{"line":47,"column":6},"end":{"line":47,"column":115}},"14":{"start":{"line":52,"column":6},"end":{"line":52,"column":55}}},"branchMap":{"1":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":31},"end":{"line":6,"column":42}},{"start":{"line":6,"column":46},"end":{"line":6,"column":47}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":31},"end":{"line":11,"column":42}},{"start":{"line":11,"column":46},"end":{"line":11,"column":47}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":31},"end":{"line":16,"column":42}},{"start":{"line":16,"column":46},"end":{"line":16,"column":47}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":26}},{"start":{"line":21,"column":30},"end":{"line":21,"column":31}}]},"5":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":26},"end":{"line":26,"column":28}},{"start":{"line":26,"column":32},"end":{"line":26,"column":38}}]},"6":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":26},"end":{"line":31,"column":28}},{"start":{"line":31,"column":32},"end":{"line":31,"column":38}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"8":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"9":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":37},"end":{"line":47,"column":108}},{"start":{"line":47,"column":111},"end":{"line":47,"column":114}}]},"10":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":37},"end":{"line":52,"column":50}},{"start":{"line":52,"column":53},"end":{"line":52,"column":54}}]}},"code":["'use strict';","","module.exports = {","  serial: {","    convert: function(v) {","      return Math.max(Math.min(parseInt(v) || 0, Number.MAX_SAFE_INTEGER), Number.MIN_SAFE_INTEGER);","    }","  },","  int: {","    convert: function(v) {","      return Math.max(Math.min(parseInt(v) || 0, Number.MAX_SAFE_INTEGER), Number.MIN_SAFE_INTEGER);","    }","  },","  currency: {","    convert: function(v) {","      return Math.max(Math.min(parseInt(v) || 0, Number.MAX_SAFE_INTEGER), Number.MIN_SAFE_INTEGER);","    }","  },","  float: {","    convert: function(v) {","      return parseFloat(v) || 0;","    }","  },","  string: {","    convert: function(v) {","      return v === null ? '' : (v + '');","    }","  },","  text: {","    convert: function(v) {","      return v === null ? '' : (v + '');","    }","  },","  datetime: {","    convert: function(v) {","      if(!(v instanceof Date)) {","        v = new Date(v);","        if(v.toString() === 'Invalid Date') {","          v = new Date(0);","        }","      }","      return v;","    }","  },","  boolean: {","    convert: function(v) {","      return typeof v === 'string' ? [true, false][({'f':1,'false':1,'n':1,'no':1,'off':1,'0':1,'':1}[v]|0)] : !!v;","    }","  },","  json: {","    convert: function(v) {","      return typeof v === 'string' ? JSON.parse(v) : v;","    }","  }","};",""],"l":{"3":1,"6":0,"11":0,"16":0,"21":0,"26":0,"31":0,"36":0,"37":0,"38":0,"39":0,"42":0,"47":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/database.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/database.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":9},"end":{"line":19,"column":15}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":7},"end":{"line":32,"column":18}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":5},"end":{"line":40,"column":25}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":6},"end":{"line":56,"column":16}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":7},"end":{"line":62,"column":17}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":7},"end":{"line":69,"column":10}}},"8":{"name":"(anonymous_8)","line":75,"loc":{"start":{"line":75,"column":13},"end":{"line":75,"column":16}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":6},"end":{"line":81,"column":9}}},"10":{"name":"(anonymous_10)","line":87,"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":11}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"3":{"start":{"line":6,"column":0},"end":{"line":8,"column":2}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":24}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":26}},"6":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":22,"column":6},"end":{"line":22,"column":36}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":80}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":42}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":46}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":36}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":16}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":60}},"15":{"start":{"line":44,"column":4},"end":{"line":44,"column":18}},"16":{"start":{"line":45,"column":4},"end":{"line":45,"column":32}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":61}},"18":{"start":{"line":47,"column":4},"end":{"line":47,"column":48}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":18}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":78}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":64}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":63}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"25":{"start":{"line":71,"column":4},"end":{"line":71,"column":54}},"26":{"start":{"line":77,"column":4},"end":{"line":77,"column":60}},"27":{"start":{"line":83,"column":4},"end":{"line":83,"column":53}},"28":{"start":{"line":89,"column":4},"end":{"line":89,"column":55}},"29":{"start":{"line":95,"column":0},"end":{"line":102,"column":2}},"30":{"start":{"line":97,"column":4},"end":{"line":97,"column":35}},"31":{"start":{"line":100,"column":4},"end":{"line":100,"column":29}},"32":{"start":{"line":104,"column":0},"end":{"line":104,"column":26}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":28},"end":{"line":25,"column":49}},{"start":{"line":25,"column":53},"end":{"line":25,"column":78}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":12}},{"start":{"line":35,"column":16},"end":{"line":35,"column":35}}]},"4":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":10}},{"start":{"line":46,"column":14},"end":{"line":46,"column":60}}]},"5":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":8}},{"start":{"line":47,"column":12},"end":{"line":47,"column":47}}]}},"code":["'use strict';","","const colors = require('colors/safe');","","const DEFAULT_ADAPTER = 'postgres';","const ADAPTERS = {","  'postgres': './adapters/postgres.js',","};","","class Database {","","  constructor() {","","    this.adapter = null;","    this._useLogColor = 0;","","  }","","  connect(cfg) {","","    if (typeof cfg === 'string') {","      cfg = {connectionString: cfg};","    }","","    const Adapter = require(ADAPTERS[cfg.adapter] || ADAPTERS[DEFAULT_ADAPTER]);","    this.adapter = new Adapter(this, cfg);","","    return true;","","  }","","  close(callback) {","","    this.adapter.close.apply(this, arguments);","    callback && callback.call(this);","    return true;","","  }","","  log(sql, params, time) {","","    let colorFunc = this.__logColorFuncs[this._useLogColor];","","    console.log();","    console.log(colorFunc(sql));","    params && console.log(colorFunc(JSON.stringify(params)));","    time && console.log(colorFunc(time + 'ms'));","    console.log();","","    this._useLogColor = (this._useLogColor + 1) % this.__logColorFuncs.length;","","    return true;","","  }","","  info(message) {","","    console.log(colors.green.bold('Database Info: ') + message);","","  }","","  error(message) {","","    console.log(colors.red.bold('Database Error: ') + message);","    return true;","","  }","","  query() {","","    this.adapter.query.apply(this.adapter, arguments);","","  }","","  transaction() {","","    this.adapter.transaction.apply(this.adapter, arguments);","","  }","","  drop() {","","    this.adapter.drop.apply(this.adapter, arguments);","","  }","","  create() {","","    this.adapter.create.apply(this.adapter, arguments);","","  }","","}","","Database.prototype.__logColorFuncs = [","  (str) => {","    return colors.yellow.bold(str);","  },","  (str) => {","    return colors.white(str);","  }","];","","module.exports = Database;",""],"l":{"3":1,"5":1,"6":1,"14":0,"15":0,"21":0,"22":0,"25":0,"26":0,"28":0,"34":0,"35":0,"36":0,"42":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"52":0,"58":0,"64":0,"65":0,"71":0,"77":0,"83":0,"89":0,"95":1,"97":0,"100":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/composer.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/composer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":29}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":25},"end":{"line":38,"column":41}}},"3":{"name":"(anonymous_3)","line":167,"loc":{"start":{"line":167,"column":14},"end":{"line":167,"column":17}}},"4":{"name":"(anonymous_4)","line":187,"loc":{"start":{"line":187,"column":28},"end":{"line":187,"column":44}}},"5":{"name":"(anonymous_5)","line":201,"loc":{"start":{"line":201,"column":25},"end":{"line":201,"column":41}}},"6":{"name":"(anonymous_6)","line":213,"loc":{"start":{"line":213,"column":15},"end":{"line":213,"column":18}}},"7":{"name":"(anonymous_7)","line":223,"loc":{"start":{"line":223,"column":30},"end":{"line":223,"column":46}}},"8":{"name":"(anonymous_8)","line":310,"loc":{"start":{"line":310,"column":27},"end":{"line":310,"column":58}}},"9":{"name":"(anonymous_9)","line":361,"loc":{"start":{"line":361,"column":19},"end":{"line":361,"column":30}}},"10":{"name":"(anonymous_10)","line":381,"loc":{"start":{"line":381,"column":19},"end":{"line":381,"column":50}}},"11":{"name":"(anonymous_11)","line":402,"loc":{"start":{"line":402,"column":24},"end":{"line":402,"column":35}}},"12":{"name":"(anonymous_12)","line":419,"loc":{"start":{"line":419,"column":25},"end":{"line":419,"column":34}}},"13":{"name":"(anonymous_13)","line":455,"loc":{"start":{"line":455,"column":21},"end":{"line":455,"column":56}}},"14":{"name":"(anonymous_14)","line":511,"loc":{"start":{"line":511,"column":22},"end":{"line":511,"column":43}}},"15":{"name":"(anonymous_15)","line":577,"loc":{"start":{"line":577,"column":18},"end":{"line":577,"column":44}}},"16":{"name":"(anonymous_16)","line":623,"loc":{"start":{"line":623,"column":11},"end":{"line":623,"column":30}}},"17":{"name":"(anonymous_17)","line":643,"loc":{"start":{"line":643,"column":10},"end":{"line":643,"column":39}}},"18":{"name":"(anonymous_18)","line":669,"loc":{"start":{"line":669,"column":7},"end":{"line":669,"column":26}}},"19":{"name":"(anonymous_19)","line":725,"loc":{"start":{"line":725,"column":9},"end":{"line":725,"column":28}}},"20":{"name":"(anonymous_20)","line":763,"loc":{"start":{"line":763,"column":7},"end":{"line":763,"column":23}}},"21":{"name":"(anonymous_21)","line":794,"loc":{"start":{"line":794,"column":6},"end":{"line":794,"column":59}}},"22":{"name":"(anonymous_22)","line":849,"loc":{"start":{"line":849,"column":9},"end":{"line":849,"column":18}}},"23":{"name":"(anonymous_23)","line":879,"loc":{"start":{"line":879,"column":11},"end":{"line":879,"column":35}}},"24":{"name":"(anonymous_24)","line":911,"loc":{"start":{"line":911,"column":7},"end":{"line":911,"column":18}}},"25":{"name":"(anonymous_25)","line":927,"loc":{"start":{"line":927,"column":18},"end":{"line":927,"column":37}}},"26":{"name":"(anonymous_26)","line":964,"loc":{"start":{"line":964,"column":10},"end":{"line":964,"column":16}}},"27":{"name":"(anonymous_27)","line":987,"loc":{"start":{"line":987,"column":5},"end":{"line":987,"column":16}}},"28":{"name":"(anonymous_28)","line":1017,"loc":{"start":{"line":1017,"column":7},"end":{"line":1017,"column":18}}},"29":{"name":"(anonymous_29)","line":1036,"loc":{"start":{"line":1036,"column":8},"end":{"line":1036,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":33}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":34}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":25}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":29}},"10":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"11":{"start":{"line":41,"column":6},"end":{"line":41,"column":34}},"12":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"13":{"start":{"line":45,"column":6},"end":{"line":45,"column":40}},"14":{"start":{"line":48,"column":4},"end":{"line":48,"column":36}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":19}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":23}},"17":{"start":{"line":51,"column":4},"end":{"line":51,"column":39}},"18":{"start":{"line":53,"column":4},"end":{"line":54,"column":33}},"19":{"start":{"line":54,"column":19},"end":{"line":54,"column":31}},"20":{"start":{"line":56,"column":4},"end":{"line":62,"column":13}},"21":{"start":{"line":59,"column":8},"end":{"line":59,"column":26}},"22":{"start":{"line":60,"column":8},"end":{"line":60,"column":23}},"23":{"start":{"line":64,"column":4},"end":{"line":93,"column":13}},"24":{"start":{"line":65,"column":19},"end":{"line":65,"column":31}},"25":{"start":{"line":68,"column":8},"end":{"line":68,"column":36}},"26":{"start":{"line":69,"column":8},"end":{"line":69,"column":38}},"27":{"start":{"line":70,"column":8},"end":{"line":70,"column":41}},"28":{"start":{"line":71,"column":8},"end":{"line":71,"column":57}},"29":{"start":{"line":73,"column":8},"end":{"line":73,"column":52}},"30":{"start":{"line":75,"column":8},"end":{"line":75,"column":44}},"31":{"start":{"line":76,"column":8},"end":{"line":76,"column":41}},"32":{"start":{"line":77,"column":8},"end":{"line":77,"column":32}},"33":{"start":{"line":79,"column":8},"end":{"line":79,"column":38}},"34":{"start":{"line":80,"column":8},"end":{"line":80,"column":34}},"35":{"start":{"line":81,"column":8},"end":{"line":81,"column":70}},"36":{"start":{"line":83,"column":8},"end":{"line":83,"column":68}},"37":{"start":{"line":84,"column":8},"end":{"line":84,"column":46}},"38":{"start":{"line":86,"column":8},"end":{"line":86,"column":80}},"39":{"start":{"line":87,"column":8},"end":{"line":87,"column":54}},"40":{"start":{"line":89,"column":8},"end":{"line":89,"column":45}},"41":{"start":{"line":91,"column":8},"end":{"line":91,"column":27}},"42":{"start":{"line":95,"column":4},"end":{"line":98,"column":32}},"43":{"start":{"line":97,"column":22},"end":{"line":97,"column":50}},"44":{"start":{"line":98,"column":16},"end":{"line":98,"column":30}},"45":{"start":{"line":100,"column":4},"end":{"line":100,"column":44}},"46":{"start":{"line":102,"column":4},"end":{"line":156,"column":7}},"47":{"start":{"line":104,"column":6},"end":{"line":104,"column":36}},"48":{"start":{"line":106,"column":6},"end":{"line":115,"column":7}},"49":{"start":{"line":108,"column":8},"end":{"line":111,"column":33}},"50":{"start":{"line":109,"column":10},"end":{"line":109,"column":26}},"51":{"start":{"line":110,"column":10},"end":{"line":110,"column":21}},"52":{"start":{"line":113,"column":8},"end":{"line":113,"column":27}},"53":{"start":{"line":117,"column":6},"end":{"line":154,"column":9}},"54":{"start":{"line":119,"column":8},"end":{"line":119,"column":43}},"55":{"start":{"line":121,"column":8},"end":{"line":121,"column":29}},"56":{"start":{"line":122,"column":8},"end":{"line":122,"column":37}},"57":{"start":{"line":123,"column":8},"end":{"line":123,"column":35}},"58":{"start":{"line":124,"column":8},"end":{"line":124,"column":42}},"59":{"start":{"line":126,"column":8},"end":{"line":126,"column":83}},"60":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"61":{"start":{"line":129,"column":10},"end":{"line":129,"column":119}},"62":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"63":{"start":{"line":133,"column":10},"end":{"line":133,"column":17}},"64":{"start":{"line":136,"column":8},"end":{"line":136,"column":47}},"65":{"start":{"line":137,"column":8},"end":{"line":137,"column":57}},"66":{"start":{"line":139,"column":8},"end":{"line":144,"column":9}},"67":{"start":{"line":140,"column":10},"end":{"line":143,"column":39}},"68":{"start":{"line":141,"column":12},"end":{"line":141,"column":49}},"69":{"start":{"line":142,"column":12},"end":{"line":142,"column":23}},"70":{"start":{"line":147,"column":8},"end":{"line":152,"column":9}},"71":{"start":{"line":148,"column":10},"end":{"line":148,"column":56}},"72":{"start":{"line":149,"column":10},"end":{"line":149,"column":67}},"73":{"start":{"line":151,"column":10},"end":{"line":151,"column":85}},"74":{"start":{"line":158,"column":4},"end":{"line":158,"column":18}},"75":{"start":{"line":169,"column":4},"end":{"line":169,"column":27}},"76":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"77":{"start":{"line":172,"column":4},"end":{"line":175,"column":5}},"78":{"start":{"line":173,"column":6},"end":{"line":173,"column":38}},"79":{"start":{"line":174,"column":6},"end":{"line":174,"column":34}},"80":{"start":{"line":177,"column":4},"end":{"line":177,"column":25}},"81":{"start":{"line":189,"column":4},"end":{"line":189,"column":91}},"82":{"start":{"line":189,"column":39},"end":{"line":189,"column":68}},"83":{"start":{"line":190,"column":4},"end":{"line":190,"column":53}},"84":{"start":{"line":191,"column":4},"end":{"line":191,"column":25}},"85":{"start":{"line":203,"column":4},"end":{"line":203,"column":91}},"86":{"start":{"line":203,"column":39},"end":{"line":203,"column":68}},"87":{"start":{"line":204,"column":4},"end":{"line":204,"column":65}},"88":{"start":{"line":214,"column":4},"end":{"line":214,"column":99}},"89":{"start":{"line":214,"column":43},"end":{"line":214,"column":86}},"90":{"start":{"line":225,"column":4},"end":{"line":225,"column":19}},"91":{"start":{"line":227,"column":4},"end":{"line":294,"column":11}},"92":{"start":{"line":229,"column":6},"end":{"line":229,"column":83}},"93":{"start":{"line":231,"column":6},"end":{"line":252,"column":7}},"94":{"start":{"line":233,"column":8},"end":{"line":233,"column":52}},"95":{"start":{"line":234,"column":8},"end":{"line":234,"column":56}},"96":{"start":{"line":235,"column":8},"end":{"line":235,"column":41}},"97":{"start":{"line":236,"column":8},"end":{"line":248,"column":13}},"98":{"start":{"line":237,"column":30},"end":{"line":237,"column":54}},"99":{"start":{"line":240,"column":12},"end":{"line":246,"column":13}},"100":{"start":{"line":241,"column":14},"end":{"line":241,"column":101}},"101":{"start":{"line":242,"column":14},"end":{"line":242,"column":37}},"102":{"start":{"line":243,"column":19},"end":{"line":246,"column":13}},"103":{"start":{"line":244,"column":14},"end":{"line":244,"column":92}},"104":{"start":{"line":245,"column":14},"end":{"line":245,"column":40}},"105":{"start":{"line":250,"column":8},"end":{"line":250,"column":17}},"106":{"start":{"line":254,"column":6},"end":{"line":254,"column":40}},"107":{"start":{"line":255,"column":6},"end":{"line":261,"column":8}},"108":{"start":{"line":262,"column":6},"end":{"line":262,"column":22}},"109":{"start":{"line":264,"column":6},"end":{"line":274,"column":7}},"110":{"start":{"line":271,"column":8},"end":{"line":271,"column":30}},"111":{"start":{"line":272,"column":8},"end":{"line":272,"column":16}},"112":{"start":{"line":276,"column":6},"end":{"line":290,"column":7}},"113":{"start":{"line":278,"column":8},"end":{"line":282,"column":10}},"114":{"start":{"line":280,"column":12},"end":{"line":280,"column":55}},"115":{"start":{"line":286,"column":8},"end":{"line":288,"column":15}},"116":{"start":{"line":287,"column":10},"end":{"line":287,"column":53}},"117":{"start":{"line":292,"column":6},"end":{"line":292,"column":15}},"118":{"start":{"line":296,"column":4},"end":{"line":299,"column":5}},"119":{"start":{"line":312,"column":4},"end":{"line":312,"column":29}},"120":{"start":{"line":314,"column":4},"end":{"line":352,"column":32}},"121":{"start":{"line":316,"column":6},"end":{"line":318,"column":7}},"122":{"start":{"line":317,"column":8},"end":{"line":317,"column":42}},"123":{"start":{"line":320,"column":6},"end":{"line":320,"column":26}},"124":{"start":{"line":322,"column":6},"end":{"line":322,"column":113}},"125":{"start":{"line":323,"column":6},"end":{"line":323,"column":73}},"126":{"start":{"line":325,"column":6},"end":{"line":325,"column":23}},"127":{"start":{"line":326,"column":6},"end":{"line":326,"column":80}},"128":{"start":{"line":328,"column":6},"end":{"line":330,"column":85}},"129":{"start":{"line":329,"column":18},"end":{"line":329,"column":98}},"130":{"start":{"line":329,"column":96},"end":{"line":329,"column":97}},"131":{"start":{"line":330,"column":18},"end":{"line":330,"column":83}},"132":{"start":{"line":330,"column":52},"end":{"line":330,"column":76}},"133":{"start":{"line":332,"column":6},"end":{"line":335,"column":9}},"134":{"start":{"line":333,"column":8},"end":{"line":333,"column":34}},"135":{"start":{"line":333,"column":32},"end":{"line":333,"column":33}},"136":{"start":{"line":334,"column":8},"end":{"line":334,"column":34}},"137":{"start":{"line":337,"column":6},"end":{"line":350,"column":7}},"138":{"start":{"line":362,"column":4},"end":{"line":362,"column":73}},"139":{"start":{"line":363,"column":4},"end":{"line":371,"column":7}},"140":{"start":{"line":364,"column":6},"end":{"line":370,"column":8}},"141":{"start":{"line":369,"column":29},"end":{"line":369,"column":30}},"142":{"start":{"line":383,"column":4},"end":{"line":383,"column":56}},"143":{"start":{"line":385,"column":4},"end":{"line":385,"column":75}},"144":{"start":{"line":386,"column":4},"end":{"line":386,"column":83}},"145":{"start":{"line":388,"column":4},"end":{"line":392,"column":6}},"146":{"start":{"line":404,"column":4},"end":{"line":404,"column":40}},"147":{"start":{"line":405,"column":4},"end":{"line":405,"column":82}},"148":{"start":{"line":406,"column":4},"end":{"line":406,"column":65}},"149":{"start":{"line":407,"column":4},"end":{"line":407,"column":67}},"150":{"start":{"line":408,"column":4},"end":{"line":408,"column":67}},"151":{"start":{"line":409,"column":4},"end":{"line":409,"column":17}},"152":{"start":{"line":421,"column":4},"end":{"line":421,"column":53}},"153":{"start":{"line":422,"column":4},"end":{"line":422,"column":38}},"154":{"start":{"line":423,"column":4},"end":{"line":423,"column":45}},"155":{"start":{"line":423,"column":34},"end":{"line":423,"column":43}},"156":{"start":{"line":425,"column":4},"end":{"line":425,"column":80}},"157":{"start":{"line":425,"column":47},"end":{"line":425,"column":78}},"158":{"start":{"line":426,"column":4},"end":{"line":428,"column":81}},"159":{"start":{"line":427,"column":24},"end":{"line":427,"column":55}},"160":{"start":{"line":428,"column":21},"end":{"line":428,"column":79}},"161":{"start":{"line":430,"column":4},"end":{"line":430,"column":57}},"162":{"start":{"line":430,"column":32},"end":{"line":430,"column":55}},"163":{"start":{"line":432,"column":4},"end":{"line":439,"column":6}},"164":{"start":{"line":441,"column":4},"end":{"line":441,"column":47}},"165":{"start":{"line":443,"column":4},"end":{"line":443,"column":17}},"166":{"start":{"line":457,"column":4},"end":{"line":457,"column":61}},"167":{"start":{"line":459,"column":4},"end":{"line":459,"column":32}},"168":{"start":{"line":461,"column":4},"end":{"line":465,"column":7}},"169":{"start":{"line":462,"column":6},"end":{"line":464,"column":9}},"170":{"start":{"line":463,"column":8},"end":{"line":463,"column":70}},"171":{"start":{"line":467,"column":4},"end":{"line":467,"column":50}},"172":{"start":{"line":467,"column":40},"end":{"line":467,"column":48}},"173":{"start":{"line":468,"column":4},"end":{"line":468,"column":38}},"174":{"start":{"line":470,"column":4},"end":{"line":476,"column":7}},"175":{"start":{"line":472,"column":6},"end":{"line":474,"column":9}},"176":{"start":{"line":473,"column":8},"end":{"line":473,"column":88}},"177":{"start":{"line":479,"column":4},"end":{"line":482,"column":11}},"178":{"start":{"line":480,"column":6},"end":{"line":480,"column":61}},"179":{"start":{"line":481,"column":6},"end":{"line":481,"column":17}},"180":{"start":{"line":487,"column":4},"end":{"line":500,"column":6}},"181":{"start":{"line":513,"column":4},"end":{"line":513,"column":32}},"182":{"start":{"line":515,"column":4},"end":{"line":515,"column":50}},"183":{"start":{"line":516,"column":4},"end":{"line":516,"column":44}},"184":{"start":{"line":518,"column":4},"end":{"line":573,"column":9}},"185":{"start":{"line":521,"column":8},"end":{"line":521,"column":44}},"186":{"start":{"line":522,"column":8},"end":{"line":522,"column":23}},"187":{"start":{"line":523,"column":8},"end":{"line":523,"column":21}},"188":{"start":{"line":525,"column":8},"end":{"line":525,"column":38}},"189":{"start":{"line":526,"column":8},"end":{"line":529,"column":9}},"190":{"start":{"line":527,"column":10},"end":{"line":527,"column":34}},"191":{"start":{"line":528,"column":10},"end":{"line":528,"column":28}},"192":{"start":{"line":531,"column":8},"end":{"line":535,"column":9}},"193":{"start":{"line":532,"column":10},"end":{"line":532,"column":67}},"194":{"start":{"line":533,"column":10},"end":{"line":533,"column":45}},"195":{"start":{"line":534,"column":10},"end":{"line":534,"column":51}},"196":{"start":{"line":537,"column":8},"end":{"line":537,"column":25}},"197":{"start":{"line":538,"column":8},"end":{"line":538,"column":27}},"198":{"start":{"line":539,"column":8},"end":{"line":539,"column":25}},"199":{"start":{"line":541,"column":8},"end":{"line":552,"column":9}},"200":{"start":{"line":544,"column":10},"end":{"line":546,"column":11}},"201":{"start":{"line":545,"column":12},"end":{"line":545,"column":24}},"202":{"start":{"line":548,"column":10},"end":{"line":548,"column":41}},"203":{"start":{"line":549,"column":10},"end":{"line":549,"column":24}},"204":{"start":{"line":550,"column":10},"end":{"line":550,"column":33}},"205":{"start":{"line":554,"column":8},"end":{"line":554,"column":35}},"206":{"start":{"line":557,"column":8},"end":{"line":559,"column":9}},"207":{"start":{"line":558,"column":10},"end":{"line":558,"column":22}},"208":{"start":{"line":561,"column":8},"end":{"line":568,"column":10}},"209":{"start":{"line":572,"column":8},"end":{"line":572,"column":19}},"210":{"start":{"line":579,"column":4},"end":{"line":579,"column":63}},"211":{"start":{"line":579,"column":60},"end":{"line":579,"column":61}},"212":{"start":{"line":581,"column":4},"end":{"line":581,"column":50}},"213":{"start":{"line":583,"column":4},"end":{"line":614,"column":42}},"214":{"start":{"line":585,"column":6},"end":{"line":606,"column":9}},"215":{"start":{"line":587,"column":8},"end":{"line":587,"column":27}},"216":{"start":{"line":589,"column":8},"end":{"line":589,"column":44}},"217":{"start":{"line":590,"column":8},"end":{"line":590,"column":38}},"218":{"start":{"line":591,"column":8},"end":{"line":591,"column":60}},"219":{"start":{"line":592,"column":8},"end":{"line":592,"column":33}},"220":{"start":{"line":593,"column":8},"end":{"line":593,"column":40}},"221":{"start":{"line":594,"column":8},"end":{"line":600,"column":9}},"222":{"start":{"line":595,"column":10},"end":{"line":595,"column":49}},"223":{"start":{"line":596,"column":10},"end":{"line":598,"column":11}},"224":{"start":{"line":597,"column":12},"end":{"line":597,"column":19}},"225":{"start":{"line":599,"column":10},"end":{"line":599,"column":34}},"226":{"start":{"line":602,"column":8},"end":{"line":604,"column":9}},"227":{"start":{"line":603,"column":10},"end":{"line":603,"column":41}},"228":{"start":{"line":608,"column":6},"end":{"line":610,"column":7}},"229":{"start":{"line":609,"column":8},"end":{"line":609,"column":20}},"230":{"start":{"line":612,"column":6},"end":{"line":612,"column":25}},"231":{"start":{"line":614,"column":29},"end":{"line":614,"column":40}},"232":{"start":{"line":625,"column":4},"end":{"line":627,"column":5}},"233":{"start":{"line":626,"column":6},"end":{"line":626,"column":50}},"234":{"start":{"line":629,"column":4},"end":{"line":634,"column":6}},"235":{"start":{"line":645,"column":4},"end":{"line":647,"column":5}},"236":{"start":{"line":646,"column":6},"end":{"line":646,"column":53}},"237":{"start":{"line":649,"column":4},"end":{"line":649,"column":57}},"238":{"start":{"line":650,"column":4},"end":{"line":652,"column":5}},"239":{"start":{"line":651,"column":6},"end":{"line":651,"column":18}},"240":{"start":{"line":654,"column":4},"end":{"line":660,"column":6}},"241":{"start":{"line":671,"column":4},"end":{"line":673,"column":5}},"242":{"start":{"line":672,"column":6},"end":{"line":672,"column":50}},"243":{"start":{"line":675,"column":4},"end":{"line":677,"column":7}},"244":{"start":{"line":676,"column":6},"end":{"line":676,"column":99}},"245":{"start":{"line":676,"column":57},"end":{"line":676,"column":91}},"246":{"start":{"line":679,"column":4},"end":{"line":679,"column":21}},"247":{"start":{"line":680,"column":4},"end":{"line":680,"column":22}},"248":{"start":{"line":681,"column":4},"end":{"line":681,"column":21}},"249":{"start":{"line":683,"column":4},"end":{"line":697,"column":7}},"250":{"start":{"line":685,"column":6},"end":{"line":688,"column":7}},"251":{"start":{"line":686,"column":8},"end":{"line":686,"column":47}},"252":{"start":{"line":687,"column":8},"end":{"line":687,"column":35}},"253":{"start":{"line":690,"column":6},"end":{"line":695,"column":7}},"254":{"start":{"line":691,"column":8},"end":{"line":691,"column":38}},"255":{"start":{"line":692,"column":8},"end":{"line":692,"column":36}},"256":{"start":{"line":693,"column":8},"end":{"line":693,"column":36}},"257":{"start":{"line":694,"column":8},"end":{"line":694,"column":35}},"258":{"start":{"line":699,"column":4},"end":{"line":704,"column":5}},"259":{"start":{"line":700,"column":6},"end":{"line":700,"column":26}},"260":{"start":{"line":701,"column":6},"end":{"line":701,"column":65}},"261":{"start":{"line":702,"column":6},"end":{"line":702,"column":80}},"262":{"start":{"line":703,"column":6},"end":{"line":703,"column":46}},"263":{"start":{"line":706,"column":4},"end":{"line":713,"column":6}},"264":{"start":{"line":710,"column":28},"end":{"line":710,"column":66}},"265":{"start":{"line":711,"column":21},"end":{"line":711,"column":29}},"266":{"start":{"line":715,"column":4},"end":{"line":715,"column":42}},"267":{"start":{"line":727,"column":4},"end":{"line":727,"column":23}},"268":{"start":{"line":728,"column":4},"end":{"line":728,"column":20}},"269":{"start":{"line":730,"column":4},"end":{"line":736,"column":5}},"270":{"start":{"line":731,"column":6},"end":{"line":731,"column":54}},"271":{"start":{"line":732,"column":6},"end":{"line":732,"column":29}},"272":{"start":{"line":734,"column":6},"end":{"line":734,"column":23}},"273":{"start":{"line":735,"column":6},"end":{"line":735,"column":35}},"274":{"start":{"line":735,"column":28},"end":{"line":735,"column":34}},"275":{"start":{"line":738,"column":4},"end":{"line":742,"column":7}},"276":{"start":{"line":739,"column":6},"end":{"line":741,"column":7}},"277":{"start":{"line":740,"column":8},"end":{"line":740,"column":94}},"278":{"start":{"line":744,"column":4},"end":{"line":751,"column":6}},"279":{"start":{"line":753,"column":4},"end":{"line":753,"column":42}},"280":{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},"281":{"start":{"line":766,"column":6},"end":{"line":766,"column":65}},"282":{"start":{"line":769,"column":4},"end":{"line":772,"column":5}},"283":{"start":{"line":770,"column":6},"end":{"line":770,"column":21}},"284":{"start":{"line":771,"column":6},"end":{"line":771,"column":17}},"285":{"start":{"line":774,"column":4},"end":{"line":774,"column":28}},"286":{"start":{"line":775,"column":4},"end":{"line":775,"column":30}},"287":{"start":{"line":777,"column":4},"end":{"line":783,"column":6}},"288":{"start":{"line":785,"column":4},"end":{"line":785,"column":42}},"289":{"start":{"line":797,"column":4},"end":{"line":797,"column":28}},"290":{"start":{"line":798,"column":4},"end":{"line":798,"column":35}},"291":{"start":{"line":799,"column":4},"end":{"line":799,"column":37}},"292":{"start":{"line":801,"column":4},"end":{"line":803,"column":5}},"293":{"start":{"line":802,"column":6},"end":{"line":802,"column":53}},"294":{"start":{"line":805,"column":4},"end":{"line":805,"column":73}},"295":{"start":{"line":806,"column":4},"end":{"line":808,"column":5}},"296":{"start":{"line":807,"column":6},"end":{"line":807,"column":92}},"297":{"start":{"line":810,"column":4},"end":{"line":810,"column":24}},"298":{"start":{"line":811,"column":4},"end":{"line":816,"column":5}},"299":{"start":{"line":812,"column":6},"end":{"line":814,"column":7}},"300":{"start":{"line":813,"column":8},"end":{"line":813,"column":20}},"301":{"start":{"line":815,"column":6},"end":{"line":815,"column":34}},"302":{"start":{"line":818,"column":4},"end":{"line":818,"column":40}},"303":{"start":{"line":819,"column":4},"end":{"line":819,"column":55}},"304":{"start":{"line":820,"column":4},"end":{"line":820,"column":91}},"305":{"start":{"line":821,"column":4},"end":{"line":826,"column":6}},"306":{"start":{"line":824,"column":28},"end":{"line":824,"column":91}},"307":{"start":{"line":825,"column":21},"end":{"line":825,"column":29}},"308":{"start":{"line":829,"column":4},"end":{"line":829,"column":52}},"309":{"start":{"line":830,"column":4},"end":{"line":830,"column":50}},"310":{"start":{"line":831,"column":4},"end":{"line":831,"column":48}},"311":{"start":{"line":833,"column":4},"end":{"line":839,"column":6}},"312":{"start":{"line":841,"column":4},"end":{"line":841,"column":42}},"313":{"start":{"line":851,"column":4},"end":{"line":851,"column":16}},"314":{"start":{"line":852,"column":4},"end":{"line":852,"column":23}},"315":{"start":{"line":854,"column":4},"end":{"line":860,"column":5}},"316":{"start":{"line":855,"column":6},"end":{"line":855,"column":56}},"317":{"start":{"line":856,"column":6},"end":{"line":856,"column":30}},"318":{"start":{"line":858,"column":6},"end":{"line":858,"column":25}},"319":{"start":{"line":859,"column":6},"end":{"line":859,"column":35}},"320":{"start":{"line":859,"column":28},"end":{"line":859,"column":34}},"321":{"start":{"line":862,"column":4},"end":{"line":868,"column":6}},"322":{"start":{"line":870,"column":4},"end":{"line":870,"column":60}},"323":{"start":{"line":881,"column":4},"end":{"line":881,"column":16}},"324":{"start":{"line":883,"column":4},"end":{"line":892,"column":5}},"325":{"start":{"line":884,"column":6},"end":{"line":884,"column":55}},"326":{"start":{"line":885,"column":6},"end":{"line":885,"column":29}},"327":{"start":{"line":886,"column":6},"end":{"line":886,"column":34}},"328":{"start":{"line":887,"column":11},"end":{"line":892,"column":5}},"329":{"start":{"line":888,"column":6},"end":{"line":888,"column":64}},"330":{"start":{"line":890,"column":6},"end":{"line":890,"column":23}},"331":{"start":{"line":891,"column":6},"end":{"line":891,"column":30}},"332":{"start":{"line":891,"column":28},"end":{"line":891,"column":29}},"333":{"start":{"line":894,"column":4},"end":{"line":901,"column":6}},"334":{"start":{"line":903,"column":4},"end":{"line":903,"column":42}},"335":{"start":{"line":913,"column":4},"end":{"line":913,"column":55}},"336":{"start":{"line":915,"column":4},"end":{"line":919,"column":7}},"337":{"start":{"line":917,"column":6},"end":{"line":917,"column":79}},"338":{"start":{"line":929,"column":4},"end":{"line":931,"column":5}},"339":{"start":{"line":930,"column":6},"end":{"line":930,"column":83}},"340":{"start":{"line":933,"column":4},"end":{"line":933,"column":73}},"341":{"start":{"line":934,"column":4},"end":{"line":934,"column":70}},"342":{"start":{"line":936,"column":4},"end":{"line":936,"column":88}},"343":{"start":{"line":937,"column":4},"end":{"line":937,"column":61}},"344":{"start":{"line":938,"column":4},"end":{"line":938,"column":74}},"345":{"start":{"line":940,"column":4},"end":{"line":952,"column":5}},"346":{"start":{"line":942,"column":6},"end":{"line":945,"column":13}},"347":{"start":{"line":943,"column":8},"end":{"line":943,"column":28}},"348":{"start":{"line":944,"column":8},"end":{"line":944,"column":21}},"349":{"start":{"line":947,"column":6},"end":{"line":950,"column":9}},"350":{"start":{"line":948,"column":8},"end":{"line":948,"column":38}},"351":{"start":{"line":949,"column":8},"end":{"line":949,"column":29}},"352":{"start":{"line":954,"column":4},"end":{"line":954,"column":51}},"353":{"start":{"line":955,"column":4},"end":{"line":955,"column":37}},"354":{"start":{"line":966,"column":4},"end":{"line":968,"column":5}},"355":{"start":{"line":967,"column":6},"end":{"line":967,"column":18}},"356":{"start":{"line":970,"column":4},"end":{"line":972,"column":5}},"357":{"start":{"line":971,"column":6},"end":{"line":971,"column":77}},"358":{"start":{"line":974,"column":4},"end":{"line":976,"column":5}},"359":{"start":{"line":975,"column":6},"end":{"line":975,"column":67}},"360":{"start":{"line":978,"column":4},"end":{"line":978,"column":28}},"361":{"start":{"line":979,"column":4},"end":{"line":979,"column":16}},"362":{"start":{"line":989,"column":4},"end":{"line":989,"column":41}},"363":{"start":{"line":990,"column":4},"end":{"line":990,"column":51}},"364":{"start":{"line":992,"column":4},"end":{"line":992,"column":65}},"365":{"start":{"line":994,"column":4},"end":{"line":1009,"column":7}},"366":{"start":{"line":996,"column":6},"end":{"line":1007,"column":9}},"367":{"start":{"line":998,"column":8},"end":{"line":1005,"column":10}},"368":{"start":{"line":1019,"column":4},"end":{"line":1027,"column":7}},"369":{"start":{"line":1021,"column":6},"end":{"line":1023,"column":7}},"370":{"start":{"line":1022,"column":8},"end":{"line":1022,"column":81}},"371":{"start":{"line":1025,"column":6},"end":{"line":1025,"column":31}},"372":{"start":{"line":1038,"column":4},"end":{"line":1040,"column":5}},"373":{"start":{"line":1039,"column":6},"end":{"line":1039,"column":55}},"374":{"start":{"line":1042,"column":4},"end":{"line":1042,"column":41}},"375":{"start":{"line":1043,"column":4},"end":{"line":1043,"column":51}},"376":{"start":{"line":1044,"column":4},"end":{"line":1044,"column":59}},"377":{"start":{"line":1046,"column":4},"end":{"line":1046,"column":65}},"378":{"start":{"line":1048,"column":4},"end":{"line":1068,"column":7}},"379":{"start":{"line":1050,"column":6},"end":{"line":1066,"column":9}},"380":{"start":{"line":1052,"column":8},"end":{"line":1064,"column":11}},"381":{"start":{"line":1054,"column":10},"end":{"line":1062,"column":12}},"382":{"start":{"line":1074,"column":0},"end":{"line":1074,"column":26}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":19},"end":{"line":25,"column":25}},{"start":{"line":25,"column":29},"end":{"line":25,"column":33}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"4":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":28},"end":{"line":73,"column":45}},{"start":{"line":73,"column":49},"end":{"line":73,"column":51}}]},"5":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":36},"end":{"line":83,"column":61}},{"start":{"line":83,"column":65},"end":{"line":83,"column":67}}]},"6":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":42},"end":{"line":86,"column":73}},{"start":{"line":86,"column":77},"end":{"line":86,"column":79}}]},"7":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":44},"end":{"line":97,"column":45}},{"start":{"line":97,"column":48},"end":{"line":97,"column":50}}]},"8":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"9":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":39},"end":{"line":126,"column":74}},{"start":{"line":126,"column":77},"end":{"line":126,"column":82}}]},"10":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]},"11":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":10},"end":{"line":129,"column":21}},{"start":{"line":129,"column":26},"end":{"line":129,"column":54}},{"start":{"line":129,"column":58},"end":{"line":129,"column":117}}]},"12":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"13":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"14":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"15":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":10},"end":{"line":149,"column":36}},{"start":{"line":149,"column":40},"end":{"line":149,"column":66}}]},"16":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":10},"end":{"line":151,"column":38}},{"start":{"line":151,"column":42},"end":{"line":151,"column":84}}]},"17":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":39},"end":{"line":189,"column":49}},{"start":{"line":189,"column":53},"end":{"line":189,"column":68}}]},"18":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":5},"end":{"line":190,"column":17}},{"start":{"line":190,"column":22},"end":{"line":190,"column":52}}]},"19":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":39},"end":{"line":203,"column":49}},{"start":{"line":203,"column":53},"end":{"line":203,"column":68}}]},"20":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":24},"end":{"line":204,"column":57}},{"start":{"line":204,"column":60},"end":{"line":204,"column":64}}]},"21":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":43},"end":{"line":214,"column":53}},{"start":{"line":214,"column":57},"end":{"line":214,"column":86}}]},"22":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":28},"end":{"line":229,"column":38}},{"start":{"line":229,"column":42},"end":{"line":229,"column":82}}]},"23":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":6}},{"start":{"line":231,"column":6},"end":{"line":231,"column":6}}]},"24":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":12},"end":{"line":240,"column":12}},{"start":{"line":240,"column":12},"end":{"line":240,"column":12}}]},"25":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":19},"end":{"line":243,"column":19}},{"start":{"line":243,"column":19},"end":{"line":243,"column":19}}]},"26":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":6}},{"start":{"line":264,"column":6},"end":{"line":264,"column":6}}]},"27":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":19}},{"start":{"line":266,"column":10},"end":{"line":266,"column":44}},{"start":{"line":267,"column":10},"end":{"line":267,"column":60}}]},"28":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":6}},{"start":{"line":276,"column":6},"end":{"line":276,"column":6}}]},"29":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":6},"end":{"line":316,"column":6}},{"start":{"line":316,"column":6},"end":{"line":316,"column":6}}]},"30":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":10},"end":{"line":316,"column":34}},{"start":{"line":316,"column":38},"end":{"line":316,"column":60}}]},"31":{"line":322,"type":"cond-expr","locations":[{"start":{"line":322,"column":81},"end":{"line":322,"column":106}},{"start":{"line":322,"column":109},"end":{"line":322,"column":111}}]},"32":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":20},"end":{"line":326,"column":34}},{"start":{"line":326,"column":38},"end":{"line":326,"column":51}},{"start":{"line":326,"column":55},"end":{"line":326,"column":79}}]},"33":{"line":329,"type":"cond-expr","locations":[{"start":{"line":329,"column":42},"end":{"line":329,"column":43}},{"start":{"line":329,"column":46},"end":{"line":329,"column":98}}]},"34":{"line":332,"type":"binary-expr","locations":[{"start":{"line":332,"column":6},"end":{"line":332,"column":29}},{"start":{"line":332,"column":33},"end":{"line":335,"column":8}}]},"35":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":10},"end":{"line":339,"column":18}},{"start":{"line":339,"column":22},"end":{"line":339,"column":49}}]},"36":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":19},"end":{"line":383,"column":31}},{"start":{"line":383,"column":35},"end":{"line":383,"column":55}}]},"37":{"line":388,"type":"cond-expr","locations":[{"start":{"line":388,"column":26},"end":{"line":388,"column":31}},{"start":{"line":388,"column":34},"end":{"line":392,"column":5}}]},"38":{"line":405,"type":"cond-expr","locations":[{"start":{"line":405,"column":27},"end":{"line":405,"column":36}},{"start":{"line":405,"column":39},"end":{"line":405,"column":81}}]},"39":{"line":457,"type":"binary-expr","locations":[{"start":{"line":457,"column":18},"end":{"line":457,"column":32}},{"start":{"line":457,"column":36},"end":{"line":457,"column":60}}]},"40":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":6},"end":{"line":480,"column":21}},{"start":{"line":480,"column":26},"end":{"line":480,"column":59}}]},"41":{"line":513,"type":"binary-expr","locations":[{"start":{"line":513,"column":12},"end":{"line":513,"column":17}},{"start":{"line":513,"column":21},"end":{"line":513,"column":31}}]},"42":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":8},"end":{"line":526,"column":8}},{"start":{"line":526,"column":8},"end":{"line":526,"column":8}}]},"43":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":8},"end":{"line":531,"column":8}},{"start":{"line":531,"column":8},"end":{"line":531,"column":8}}]},"44":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":8},"end":{"line":541,"column":8}},{"start":{"line":541,"column":8},"end":{"line":541,"column":8}}]},"45":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":10},"end":{"line":544,"column":10}},{"start":{"line":544,"column":10},"end":{"line":544,"column":10}}]},"46":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":8},"end":{"line":557,"column":8}},{"start":{"line":557,"column":8},"end":{"line":557,"column":8}}]},"47":{"line":557,"type":"binary-expr","locations":[{"start":{"line":557,"column":12},"end":{"line":557,"column":16}},{"start":{"line":557,"column":20},"end":{"line":557,"column":48}}]},"48":{"line":579,"type":"binary-expr","locations":[{"start":{"line":579,"column":24},"end":{"line":579,"column":40}},{"start":{"line":579,"column":44},"end":{"line":579,"column":46}}]},"49":{"line":591,"type":"binary-expr","locations":[{"start":{"line":591,"column":8},"end":{"line":591,"column":32}},{"start":{"line":591,"column":36},"end":{"line":591,"column":59}}]},"50":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":8},"end":{"line":594,"column":8}},{"start":{"line":594,"column":8},"end":{"line":594,"column":8}}]},"51":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":10},"end":{"line":596,"column":10}},{"start":{"line":596,"column":10},"end":{"line":596,"column":10}}]},"52":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":8},"end":{"line":602,"column":8}},{"start":{"line":602,"column":8},"end":{"line":602,"column":8}}]},"53":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":6},"end":{"line":608,"column":6}},{"start":{"line":608,"column":6},"end":{"line":608,"column":6}}]},"54":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":4},"end":{"line":625,"column":4}},{"start":{"line":625,"column":4},"end":{"line":625,"column":4}}]},"55":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":4},"end":{"line":645,"column":4}},{"start":{"line":645,"column":4},"end":{"line":645,"column":4}}]},"56":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":4},"end":{"line":650,"column":4}},{"start":{"line":650,"column":4},"end":{"line":650,"column":4}}]},"57":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":4},"end":{"line":671,"column":4}},{"start":{"line":671,"column":4},"end":{"line":671,"column":4}}]},"58":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":6},"end":{"line":685,"column":6}},{"start":{"line":685,"column":6},"end":{"line":685,"column":6}}]},"59":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":6},"end":{"line":690,"column":6}},{"start":{"line":690,"column":6},"end":{"line":690,"column":6}}]},"60":{"line":690,"type":"binary-expr","locations":[{"start":{"line":690,"column":10},"end":{"line":690,"column":35}},{"start":{"line":690,"column":39},"end":{"line":690,"column":63}}]},"61":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":4},"end":{"line":699,"column":4}},{"start":{"line":699,"column":4},"end":{"line":699,"column":4}}]},"62":{"line":699,"type":"binary-expr","locations":[{"start":{"line":699,"column":8},"end":{"line":699,"column":13}},{"start":{"line":699,"column":17},"end":{"line":699,"column":23}},{"start":{"line":699,"column":27},"end":{"line":699,"column":32}}]},"63":{"line":701,"type":"binary-expr","locations":[{"start":{"line":701,"column":6},"end":{"line":701,"column":11}},{"start":{"line":701,"column":16},"end":{"line":701,"column":63}}]},"64":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":7},"end":{"line":702,"column":13}},{"start":{"line":702,"column":17},"end":{"line":702,"column":22}},{"start":{"line":702,"column":28},"end":{"line":702,"column":78}}]},"65":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":54},"end":{"line":702,"column":60}},{"start":{"line":702,"column":64},"end":{"line":702,"column":65}}]},"66":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":67},"end":{"line":702,"column":72}},{"start":{"line":702,"column":76},"end":{"line":702,"column":77}}]},"67":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":4},"end":{"line":730,"column":4}},{"start":{"line":730,"column":4},"end":{"line":730,"column":4}}]},"68":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":6},"end":{"line":739,"column":6}},{"start":{"line":739,"column":6},"end":{"line":739,"column":6}}]},"69":{"line":749,"type":"binary-expr","locations":[{"start":{"line":749,"column":20},"end":{"line":749,"column":82}},{"start":{"line":749,"column":86},"end":{"line":749,"column":91}}]},"70":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":4},"end":{"line":765,"column":4}},{"start":{"line":765,"column":4},"end":{"line":765,"column":4}}]},"71":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":4},"end":{"line":769,"column":4}},{"start":{"line":769,"column":4},"end":{"line":769,"column":4}}]},"72":{"line":797,"type":"binary-expr","locations":[{"start":{"line":797,"column":14},"end":{"line":797,"column":21}},{"start":{"line":797,"column":25},"end":{"line":797,"column":27}}]},"73":{"line":801,"type":"if","locations":[{"start":{"line":801,"column":4},"end":{"line":801,"column":4}},{"start":{"line":801,"column":4},"end":{"line":801,"column":4}}]},"74":{"line":806,"type":"if","locations":[{"start":{"line":806,"column":4},"end":{"line":806,"column":4}},{"start":{"line":806,"column":4},"end":{"line":806,"column":4}}]},"75":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":6},"end":{"line":812,"column":6}},{"start":{"line":812,"column":6},"end":{"line":812,"column":6}}]},"76":{"line":812,"type":"binary-expr","locations":[{"start":{"line":812,"column":10},"end":{"line":812,"column":27}},{"start":{"line":812,"column":31},"end":{"line":812,"column":64}},{"start":{"line":812,"column":68},"end":{"line":812,"column":108}}]},"77":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":4},"end":{"line":854,"column":4}},{"start":{"line":854,"column":4},"end":{"line":854,"column":4}}]},"78":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":4},"end":{"line":883,"column":4}},{"start":{"line":883,"column":4},"end":{"line":883,"column":4}}]},"79":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":11},"end":{"line":887,"column":11}},{"start":{"line":887,"column":11},"end":{"line":887,"column":11}}]},"80":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":20},"end":{"line":917,"column":72}},{"start":{"line":917,"column":76},"end":{"line":917,"column":77}}]},"81":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":21},"end":{"line":917,"column":55}},{"start":{"line":917,"column":59},"end":{"line":917,"column":61}}]},"82":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":23},"end":{"line":917,"column":29}},{"start":{"line":917,"column":33},"end":{"line":917,"column":44}},{"start":{"line":917,"column":49},"end":{"line":917,"column":51}}]},"83":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":4},"end":{"line":929,"column":4}},{"start":{"line":929,"column":4},"end":{"line":929,"column":4}}]},"84":{"line":929,"type":"binary-expr","locations":[{"start":{"line":929,"column":8},"end":{"line":929,"column":10}},{"start":{"line":929,"column":14},"end":{"line":929,"column":28}},{"start":{"line":929,"column":32},"end":{"line":929,"column":41}}]},"85":{"line":934,"type":"cond-expr","locations":[{"start":{"line":934,"column":32},"end":{"line":934,"column":65}},{"start":{"line":934,"column":68},"end":{"line":934,"column":69}}]},"86":{"line":936,"type":"binary-expr","locations":[{"start":{"line":936,"column":16},"end":{"line":936,"column":82}},{"start":{"line":936,"column":86},"end":{"line":936,"column":87}}]},"87":{"line":936,"type":"binary-expr","locations":[{"start":{"line":936,"column":17},"end":{"line":936,"column":65}},{"start":{"line":936,"column":69},"end":{"line":936,"column":71}}]},"88":{"line":936,"type":"binary-expr","locations":[{"start":{"line":936,"column":19},"end":{"line":936,"column":32}},{"start":{"line":936,"column":36},"end":{"line":936,"column":54}},{"start":{"line":936,"column":59},"end":{"line":936,"column":61}}]},"89":{"line":937,"type":"cond-expr","locations":[{"start":{"line":937,"column":26},"end":{"line":937,"column":55}},{"start":{"line":937,"column":58},"end":{"line":937,"column":60}}]},"90":{"line":937,"type":"binary-expr","locations":[{"start":{"line":937,"column":27},"end":{"line":937,"column":40}},{"start":{"line":937,"column":44},"end":{"line":937,"column":46}}]},"91":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":4},"end":{"line":940,"column":4}},{"start":{"line":940,"column":4},"end":{"line":940,"column":4}}]},"92":{"line":940,"type":"binary-expr","locations":[{"start":{"line":940,"column":8},"end":{"line":940,"column":22}},{"start":{"line":940,"column":26},"end":{"line":940,"column":45}}]},"93":{"line":949,"type":"binary-expr","locations":[{"start":{"line":949,"column":8},"end":{"line":949,"column":12}},{"start":{"line":949,"column":16},"end":{"line":949,"column":28}}]},"94":{"line":966,"type":"if","locations":[{"start":{"line":966,"column":4},"end":{"line":966,"column":4}},{"start":{"line":966,"column":4},"end":{"line":966,"column":4}}]},"95":{"line":970,"type":"if","locations":[{"start":{"line":970,"column":4},"end":{"line":970,"column":4}},{"start":{"line":970,"column":4},"end":{"line":970,"column":4}}]},"96":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":4},"end":{"line":974,"column":4}},{"start":{"line":974,"column":4},"end":{"line":974,"column":4}}]},"97":{"line":992,"type":"cond-expr","locations":[{"start":{"line":992,"column":37},"end":{"line":992,"column":54}},{"start":{"line":992,"column":57},"end":{"line":992,"column":64}}]},"98":{"line":1001,"type":"binary-expr","locations":[{"start":{"line":1001,"column":25},"end":{"line":1001,"column":36}},{"start":{"line":1001,"column":40},"end":{"line":1001,"column":42}}]},"99":{"line":1002,"type":"binary-expr","locations":[{"start":{"line":1002,"column":20},"end":{"line":1002,"column":26}},{"start":{"line":1002,"column":30},"end":{"line":1002,"column":32}}]},"100":{"line":1021,"type":"if","locations":[{"start":{"line":1021,"column":6},"end":{"line":1021,"column":6}},{"start":{"line":1021,"column":6},"end":{"line":1021,"column":6}}]},"101":{"line":1021,"type":"binary-expr","locations":[{"start":{"line":1021,"column":10},"end":{"line":1021,"column":14}},{"start":{"line":1021,"column":18},"end":{"line":1021,"column":32}}]},"102":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}},{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}}]},"103":{"line":1046,"type":"cond-expr","locations":[{"start":{"line":1046,"column":37},"end":{"line":1046,"column":54}},{"start":{"line":1046,"column":57},"end":{"line":1046,"column":64}}]},"104":{"line":1057,"type":"binary-expr","locations":[{"start":{"line":1057,"column":27},"end":{"line":1057,"column":38}},{"start":{"line":1057,"column":42},"end":{"line":1057,"column":44}}]},"105":{"line":1058,"type":"binary-expr","locations":[{"start":{"line":1058,"column":22},"end":{"line":1058,"column":28}},{"start":{"line":1058,"column":32},"end":{"line":1058,"column":34}}]},"106":{"line":1059,"type":"binary-expr","locations":[{"start":{"line":1059,"column":28},"end":{"line":1059,"column":40}},{"start":{"line":1059,"column":44},"end":{"line":1059,"column":46}}]}},"code":["'use strict';","","const ItemArray = require('./item_array.js');","const ModelArray = require('./model_array.js');","const Transaction = require('./db/transaction.js');","","const utilities = require('./utilities.js');","","/**","* The query composer (ORM)","* @class","*/","class Composer {","","  /**","  * Created by Model#query, used for composing SQL queries based on Models","  * @param {Nodal.Model} Model The model class the composer is querying from","  * @param {Nodal.Composer} [parent=null] The composer's parent (another composer instance)","  */","  constructor(Model, parent) {","","    this.db = Model.prototype.db;","    this.Model = Model;","","    this._parent = parent || null;","    this._command = null;","    this._transaction = null;","","  }","","  /**","  * Given rows with repeated data (due to joining in multiple children), return only parent models (but include references to their children)","  * @param {Array} rows Rows from sql result","  * @param {Boolean} grouped Are these models grouped, if so, different procedure","  * @return {Nodal.ModelArray}","  * @private","  */","  __parseModelsFromRows__(rows, grouped) {","","    if (grouped) {","      return ItemArray.from(rows);","    }","","    if (!rows.length) {","      return new ModelArray(this.Model);","    }","","    let keys = Object.keys(rows[0]);","    let cache = {};","    let mainCache = {};","    cache[this.Model.name] = mainCache;","","    let columns = keys","      .filter(k => k[0] !== '$');","","    let columnsObject = columns","      .reduce((columns, k) => {","","        columns[k] = null;","        return columns;","","      }, {});","","    let joinsObject = keys","      .filter(k => k[0] === '$')","      .reduce((joinsObject, k) => {","","        let mid = k.indexOf('$', 1);","        let name = k.substring(1, mid)","        let field = k.substring(mid + 1);","        let relationship = this.Model.relationship(name);","","        joinsObject[name] = joinsObject[name] || {};","","        let rModel = relationship.getModel()","        joinsObject[name].Model = rModel;","        cache[rModel.name] = {};","","        joinsObject[name].name = name;","        joinsObject[name].key = k;","        joinsObject[name].multiple = relationship.immediateMultiple();","","        joinsObject[name].columns = joinsObject[name].columns || [];","        joinsObject[name].columns.push(field);","","        joinsObject[name].columnsObject = joinsObject[name].columnsObject || {};","        joinsObject[name].columnsObject[field] = null;","","        joinsObject[name].cachedModel = null;","","        return joinsObject;","","      }, {});","","    let joins = Object","      .keys(joinsObject)","      .sort((a, b) => a.length > b.length ? 1 : -1)","      .map(k => joinsObject[k]);","","    let models = new ModelArray(this.Model);","","    rows.forEach(row => {","","      let model = mainCache[row.id];","","      if (!model) {","","        model = mainCache[row.id] = new this.Model(columns.reduce((obj, k) => {","          obj[k] = row[k];","          return obj;","        }, columnsObject), true);","","        models.push(model);","","      }","","      joins.forEach(join => {","","        let id = row[`\\$${join.name}\\$id`];","","        let name = join.name;","        let names = name.split('__');","        let joinName = names.pop();","        let parentName = names.join('__');","","        let parentModel = parentName ? joinsObject[parentName].cachedModel : model;","","        if (join.multiple) {","          parentModel && (parentModel.joined(joinName) || parentModel.setJoined(joinName, new ModelArray(join.Model)));","        }","","        if (!id) {","          return;","        }","","        let joinCache = cache[join.Model.name];","        let joinModel = join.cachedModel = joinCache[id];","","        if (!joinModel) {","          joinModel = join.cachedModel = joinCache[id] = new join.Model(join.columns.reduce((obj, k) => {","            obj[k] = row[`\\$${join.name}\\$${k}`];","            return obj;","          }, join.columnsObject), true)","        }","","","        if (join.multiple) {","          let modelArray = parentModel.joined(joinName);","          !modelArray.has(joinModel) && modelArray.push(joinModel);","        } else {","          parentModel.joined(joinName) || parentModel.setJoined(joinName, joinModel);","        }","","      });","","    });","","    return models;","","  }","","  /**","  * Collapses linked list of queries into an array (for .reduce, .map etc)","  * @return {Array}","  * @private","  */","  __collapse__() {","","    let composerArray = [];","    let composer = this;","","    while (composer) {","      composerArray.unshift(composer);","      composer = composer._parent;","    }","","    return composerArray;","","  }","","  /**","  * Removes last limit command from a collapsed array of composer commands","  * @param {Array} [composerArray] Array of composer commands","  * @return {Array}","  * @private","  */","  __removeLastLimitCommand__(composerArray) {","","    let found = composerArray.map(c => c._command && c._command.type).lastIndexOf('limit');","    (found !== -1) && composerArray.splice(found, 1);","    return composerArray;","","  }","","  /**","  * Gets last limit command from a collapsed array of composer commands","  * @param {Array} [composerArray] Array of composer commands","  * @return {Array}","  * @private","  */","  __getLastLimitCommand__(composerArray) {","","    let found = composerArray.map(c => c._command && c._command.type).lastIndexOf('limit');","    return found >= 0 ? composerArray.splice(found, 1)[0] : null;","","  }","","  /**","  * Determines whether this composer query represents a grouped query or not","  * @return {Boolean}","  * @private","  */","  __isGrouped__() {","    return this.__collapse__().filter(c => c._command && c._command.type === 'groupBy').length > 0;","  }","","  /**","  * Reduces an array of composer queries to a single query information object","  * @param {Array} [composerArray]","  * @return {Object} Looks like {commands: [], joins: []}","  * @private","  */","  __reduceToQueryInformation__(composerArray) {","","    let joins = {};","","    let commands = composerArray.reduce((p, c) => {","","      let composerCommand = c._command || {type: 'where', data: {comparisons: []}};","","      if (composerCommand.type === 'join') {","","        let curJoinName = composerCommand.data.name;","        let curJoinData = composerCommand.data.joinData;","        joins[curJoinName] = curJoinData;","        Object.keys(joins)","          .filter(joinName => joinName !== curJoinName)","          .forEach(joinName => {","","            if (curJoinName.indexOf(joinName) === 0) {","              joins[curJoinName] = joins[joinName].concat(curJoinData.slice(joins[joinName].length));","              delete joins[joinName];","            } else if (joinName.indexOf(curJoinName) === 0) {","              joins[joinName][curJoinData.length - 1] = curJoinData[curJoinData.length - 1];","              delete joins[curJoinName];","            }","","          });","","        return p;","","      }","","      let lastCommand = p[p.length - 1];","      let command = {","        where: null,","        limit: null,","        orderBy: [],","        groupBy: [],","        aggregate: []","      };","      p.push(command);","","      if (","        lastCommand && (","          !lastCommand[composerCommand.type] ||","          lastCommand[composerCommand.type] instanceof Array","        )","      ) {","","        command = lastCommand;","        p.pop();","","      }","","      if (command[composerCommand.type] instanceof Array) {","","        command[composerCommand.type].push(","          Object.keys(composerCommand.data).reduce((p, c) => {","            return (p[c] = composerCommand.data[c], p);","          }, {})","        );","","      } else {","","        command[composerCommand.type] = Object.keys(composerCommand.data).reduce((p, c) => {","          return (p[c] = composerCommand.data[c], p);","        }, {});","","      }","","      return p;","","    }, []);","","    return {","      commands: commands,","      joins: joins","    }","","  }","","  /**","  * Reduces an array of commands from query informtion to a SQL query","  * @param {Array} [commandArray]","  * @param {Array} [includeColumns=*] Which columns to include, includes all by default","  * @return {Object} Looks like {sql: [], params: []}","  * @private","  */","  __reduceCommandsToQuery__(commandArray, includeColumns) {","","    let lastAggregate = null;","","    return commandArray.reduce((prev, command, i) => {","","      if (command.aggregate.length && command.groupBy.length) {","        lastAggregate = command.aggregate;","      }","","      let table = `t${i}`;","","      let multiFilter = this.db.adapter.createMultiFilter(table, command.where ? command.where.comparisons : []);","      let params = this.db.adapter.getParamsFromMultiFilter(multiFilter);","","      let joins = null;","      let columns = includeColumns || lastAggregate || this.Model.columnNames();","","      columns = columns","        .map(c => typeof c !== 'string' ? c : {columnNames: [c], alias: c, transformation: v => v})","        .map(c => Object.keys(c).reduce((p, k) => { return (p[k] = c[k], p); }, {}));","","      !command.groupBy.length && columns.forEach(c => {","        c.transformation = v => v;","        c.columnNames = [c.alias];","      });","","      return {","        sql: this.db.adapter.generateSelectQuery(","          prev.sql || {table: this.Model.table()},","          table,","          columns,","          multiFilter,","          joins,","          command.groupBy,","          command.orderBy,","          command.limit,","          prev.params.length","        ),","        params: prev.params.concat(params)","      }","","    }, {sql: null, params: []});","","  }","","  /**","  * Retrieve all joined column data for a given join","  * @param {string} joinName The name of the join relationship","  * @private","  */","  __joinedColumns__(joinName) {","    let relationship = this.Model.relationships().findExplicit(joinName);","    return relationship.getModel().columnNames().map(columnName => {","      return {","        name: joinName,","        table: relationship.getModel().table(),","        columnNames: [columnName],","        alias: `\\$${joinName}\\$${columnName}`,","        transformation: v => v","      };","    });","  }","","  /**","  * Generate a SQL query and its associated parameters from the current composer instance","  * @param {Array} [includeColumns=*] Which columns to include, includes all by default","  * @param {boolean} [disableJoins=false] Disable joins if you just want a subset of data","  * @return {Object} Has \"params\" and \"sql\" properties.","  * @private","  */","  __generateQuery__(includeColumns, disableJoins) {","","    disableJoins = disableJoins || this.__isGrouped__();","","    let queryInfo = this.__reduceToQueryInformation__(this.__collapse__());","    let query = this.__reduceCommandsToQuery__(queryInfo.commands, includeColumns);","","    return disableJoins ? query : this.__addJoinsToQuery__(","      query,","      queryInfo,","      includeColumns","    );","","  }","","  /**","  * Generate a SQL count query","  * @param {boolean} [useLimit=false] Generates COUNT using limit command as well","  * @return {Object} Has \"params\" and \"sql\" properties.","  * @private","  */","  __generateCountQuery__(useLimit) {","","    let collapsed = this.__collapse__();","    collapsed = useLimit ? collapsed : this.__removeLastLimitCommand__(collapsed);","    let queryInfo = this.__reduceToQueryInformation__(collapsed);","    let query = this.__reduceCommandsToQuery__(queryInfo.commands);","    query.sql = this.db.adapter.generateCountQuery(query.sql, 'c');","    return query;","","  }","","  /**","  * Generate a SQL update query","  * @param {Object} [fields] A list of field / value pairs to set","  * @return {Object} has \"params\" and \"sql\" properties","  * @private","  */","  __generateUpdateQuery__(fields) {","","    let query = this.__generateQuery__(['id'], true);","    let columns = Object.keys(fields);","    let params = columns.map(c => fields[c]);","","    let columnNames = columns.filter((v, i) => typeof params[i] !== 'function');","    let columnFunctions = columns","      .filter((v, i) => typeof params[i] === 'function')","      .map((v, i) => [v, utilities.getFunctionParameters(params[i]), params[i]]);","","    params = params.filter(v => typeof v !== 'function');","","    query.sql = this.db.adapter.generateUpdateAllQuery(","      this.Model.table(),","      'id',","      columnNames,","      columnFunctions,","      query.params.length,","      query.sql","    );","","    query.params = query.params.concat(params);","","    return query;","","  }","","  /**","  * Add Joins to a query from queryInfo","  * @param {Object} query Must be format {sql: '', params: []}","  * @param {Object} queryInfo Must be format {commands: [], joins: []}","  * @param {Array} [includeColumns=*] Which columns to include, includes all by default","  * @return {Object} Has \"params\" and \"sql\" properties.","  * @private","  */","  __addJoinsToQuery__(query, queryInfo, includeColumns) {","","    let columns = includeColumns || this.Model.columnNames();","","    let joins = queryInfo.joins;","","    Object.keys(joins).forEach(joinName => {","      joins[joinName].forEach(j => {","        columns = columns.concat(this.__joinedColumns__(j.joinAlias));","      });","    });","","    joins = Object.keys(joins).map(k => joins[k]);","    let params = query.params.slice();","","    joins.forEach(join => {","","      join.forEach(j => {","        params = params.concat(this.db.adapter.getParamsFromMultiFilter(j.multiFilter));","      });","","    });","","    // Set join OrderBys... in reverse order","    let orderBy = queryInfo.commands.reduce((arr, command) => {","      command.orderBy && (arr = command.orderBy.concat(arr));","      return arr;","    }, []);","","    // When doing joins, we count paramOffset as the last where parameter length","    // Because we add in a bunch of parameters at the end.","","    return {","      sql: this.db.adapter.generateSelectQuery(","        query.sql,","        'j',","        columns,","        null,","        joins,","        null,","        orderBy,","        null,","        query.params.length","      ),","      params: params","    };","","  }","","  /**","  * When using Composer#where, format all provided comparisons","  * @param {Object} comparisons Comparisons object. {age__lte: 27}, for example.","  * @param {Nodal.Model} Model the model to use as the basis for comparison. Default to current model.","  * @return {Array}","  * @private","  */","  __parseComparisons__(comparisons, Model) {","","    Model = Model || this.Model;","","    let comparators = this.db.adapter.comparators;","    let columnLookup = Model.columnLookup();","","    return Object.keys(comparisons)","      .map(comparison => {","","        let column = comparison.split('__');","        let rel = null;","        let joinName;","","        let comparator = column.pop();","        if (!comparators[comparator]) {","          column.push(comparator);","          comparator = 'is';","        }","","        if (column.length > 1) {","          joinName = column.slice(0, column.length - 1).join('__');","          rel = Model.relationship(joinName);","          column = column.slice(column.length - 1);","        }","","        let table = null;","        let joined = false;","        let joins = null;","","        if (rel) {","","          // if it's not found, return null...","          if (!rel.getModel().hasColumn(column[0])) {","            return null;","          }","","          table = rel.getModel().table();","          joined = true;","          joins = rel.joins('w');","","        }","","        let columnName = column[0];","","        // block out bad column names","        if (!rel && !Model.hasColumn(columnName)) {","          return null;","        }","","        return {","          table: table,","          columnName: columnName,","          comparator: comparator,","          value: comparisons[comparison],","          joined: joined,","          joins: joins","        };","","      })","      .filter(v => {","        return !!v;","      });","","  }","","  __filterHidden__(Model, comparisonsArray) {","","    comparisonsArray = (comparisonsArray || []).filter(c => c);","","    let comparators = this.db.adapter.comparators;","","    return comparisonsArray.map(comparisons => {","","      Object.keys(comparisons).forEach(comparison => {","","        let cModel = Model;","","        let column = comparison.split('__');","        let comparator = column.pop();","        !comparators[comparator] && column.push(comparator);","        let field = column.pop();","        let relName = column.join('__');","        if (relName) {","          let rel = cModel.relationship(relName);","          if (!rel) {","            return;","          }","          cModel = rel.getModel();","        }","","        if (cModel.isHidden(field)) {","          delete comparisons[comparison];","        }","","      });","","      if (Object.keys(comparisons).length === 0) {","        return null;","      }","","      return comparisons;","","    }).filter(comparisons => comparisons);","","  }","","  /**","  * Add comparisons to SQL WHERE clause. Does not allow filtering if Model.hides() has been called.","  * @param {Object} comparisons Comparisons object. {age__lte: 27}, for example.","  * @return {Nodal.Composer} new Composer instance","  */","  safeWhere(comparisonsArray) {","","    if (!(comparisonsArray instanceof Array)) {","      comparisonsArray = [].slice.call(arguments);","    }","","    return this.where(","      this.__filterHidden__(","        this.Model,","        comparisonsArray","      )","    );","","  }","","  /**","  * Join in a relationship. Filters out hidden fields from comparisons.","  * @param {string} joinName The name of the joined relationship","  * @param {array} comparisonsArray comparisons to perform on this join (can be overloaded)","  */","  safeJoin(joinName, comparisonsArray) {","","    if (!(comparisonsArray instanceof Array)) {","      comparisonsArray = [].slice.call(arguments, 1);","    }","","    let relationship = this.Model.relationship(joinName);","    if (!relationship) {","      return this;","    }","","    return this.join(","      joinName,","      this.__filterHidden__(","        relationship.getModel(),","        comparisonsArray","      )","    );","","  }","","  /**","  * Add comparisons to SQL WHERE clause.","  * @param {Object} comparisons Comparisons object. {age__lte: 27}, for example.","  * @return {Nodal.Composer} new Composer instance","  */","  where(comparisonsArray) {","","    if (!(comparisonsArray instanceof Array)) {","      comparisonsArray = [].slice.call(arguments);","    }","","    comparisonsArray = comparisonsArray.map(comparisons => {","      return Object.keys(comparisons).reduce((p, c) => { return (p[c] = comparisons[c], p); }, {});","    });","","    let order = null;","    let offset = null;","    let count = null;","","    comparisonsArray.forEach(comparisons => {","","      if ('__order' in comparisons) {","        order = comparisons.__order.split(' ');","        delete comparisons.__order;","      }","","      if ('__offset' in comparisons || '__count' in comparisons) {","        offset = comparisons.__offset;","        count = comparisons.__count;","        delete comparisons.__offset;","        delete comparisons.__count;","      }","","    });","","    if (order || offset || count) {","      let composer = this;","      order && (composer = composer.orderBy(order[0], order[1]));","      (offset || count) && (composer = composer.limit(offset || 0, count || 0));","      return composer.where(comparisonsArray);","    }","","    this._command = {","      type: 'where',","      data: {","        comparisons: comparisonsArray","        .map(comparisons => this.__parseComparisons__(comparisons))","        .filter(f => f.length)","      }","    };","","    return new Composer(this.Model, this);","","  }","","  /**","  * Order by field belonging to the current Composer instance's model.","  * @param {string} field Field to order by","  * @param {string} direction Must be 'ASC' or 'DESC'","  * @return {Nodal.Composer} new Composer instance","  */","  orderBy(field, direction) {","","    let transformation;","    let fields = [];","","    if (typeof field === 'function') {","      fields = utilities.getFunctionParameters(field);","      transformation = field;","    } else {","      fields = [field];","      transformation = v => `${v}`;","    }","","    fields.forEach(field => {","      if (!this.Model.hasColumn(field)) {","        throw new Error(`Cannot order by ${field}, it does not belong to ${this.Model.name}`);","      }","    });","","    this._command = {","      type: 'orderBy',","      data: {","        columnNames: fields,","        transformation: transformation,","        direction: ({'asc': 'ASC', 'desc': 'DESC'}[(direction + '').toLowerCase()] || 'ASC')","      }","    };","","    return new Composer(this.Model, this);","","  }","","  /**","  * Limit to an offset and count","  * @param {number} offset The offset at which to set the limit. If this is the only argument provided, it will be the count instead.","  * @param {number} count The number of results to be returned. Can be omitted, and if omitted, first argument is used for count.","  * @return {Nodal.Composer} new Composer instance","  */","  limit(offset, count) {","","    if (this._command) {","      return new Composer(this.Model, this).limit(offset, count);","    }","","    if (count === undefined) {","      count = offset;","      offset = 0;","    }","","    count = parseInt(count);","    offset = parseInt(offset);","","    this._command = {","      type: 'limit',","      data: {","        count: count,","        offset: offset","      }","    };","","    return new Composer(this.Model, this);","","  }","","  /**","  * Join in a relationship.","  * @param {string} joinName The name of the joined relationship","  * @param {array} comparisonsArray comparisons to perform on this join (can be overloaded)","  */","  join(joinName, comparisonsArray, orderBy, count, offset) {","","    // FIXME: validate orderBy","    orderBy = orderBy || '';","    count = Math.max(0, count | 0);","    offset = Math.max(0, offset | 0);","","    if (!(comparisonsArray instanceof Array)) {","      comparisonsArray = [].slice.call(arguments, 1);","    }","","    let relationship = this.Model.relationships().findExplicit(joinName);","    if (!relationship) {","      throw new Error(`Model ${this.Model.name} does not have relationship \"${joinName}\".`);","    }","","    let composer = this;","    while (composer) {","      if (composer._command && composer._command.type === 'join' && composer._command.data.name === joinName) {","        return this;","      }","      composer = composer._parent;","    }","","    let joinData = relationship.joins();","    joinData[joinData.length - 1].joinAlias = joinName;","    joinData[joinData.length - 1].prevAlias = joinName.split('__').slice(0, -1).join('__');","    joinData[joinData.length - 1].multiFilter = this.db.adapter.createMultiFilter(","      joinName,","      comparisonsArray","        .map(comparisons => this.__parseComparisons__(comparisons, relationship.getModel()))","        .filter(f => f.length)","    );","","    // FIXME: implement properly","    joinData[joinData.length - 1].orderBy = orderBy;","    joinData[joinData.length - 1].offset = offset;","    joinData[joinData.length - 1].count = count;","","    this._command = {","      type: 'join',","      data: {","        name: joinName,","        joinData: joinData","      }","    };","","    return new Composer(this.Model, this);","","  }","","  /**","  * Groups by a specific field, or a transformation on a field","  * @param {String} column The column to group by","  */","  groupBy(column) {","","    let columns;","    let transformation;","","    if (typeof column === 'function') {","      columns = utilities.getFunctionParameters(column);","      transformation = column;","    } else {","      columns = [column];","      transformation = v => `${v}`;","    }","","    this._command = {","      type: 'groupBy',","      data: {","        columnNames: columns,","        transformation: transformation","      }","    };","","    return new Composer(this.Model, this).aggregate(column);","","  }","","  /**","  * Aggregates a field","  * @param {String} alias The alias for the new aggregate field","  * @param {Function} transformation The transformation to apply to create the aggregate","  */","  aggregate(alias, transformation) {","","    let columns;","","    if (typeof alias === 'function') {","      columns = utilities.getFunctionParameters(alias);","      transformation = alias;","      alias = columns.join('___');","    } else if (typeof transformation === 'function') {","      columns = utilities.getFunctionParameters(transformation);","    } else {","      columns = [alias]","      transformation = v => v;","    }","","    this._command = {","      type: 'aggregate',","      data: {","        alias: alias,","        columnNames: columns,","        transformation: transformation","      }","    };","","    return new Composer(this.Model, this);","","  }","","  /**","  * Counts the results in the query","  * @param {function} callback Supplied with an error and the integer value of the count","  */","  count(callback) {","","    let countQuery = this.__generateCountQuery__(true);","","    this.db.query(countQuery.sql, countQuery.params, (err, result) => {","","      callback(err, (((result && result.rows) || [])[0] || {}).__total__ || 0);","","    });","","  }","","  /**","  * Processes results and errors from a terminal call","  * @private","  */","  __endProcessor__(err, r, callback) {","","    if (!r || !r.countResult || !r.result) {","      throw new Error('End Query Expects object containing \"count\" and \"results\"');","    }","","    let limitCommand = this.__getLastLimitCommand__(this.__collapse__());","    let offset = limitCommand ? limitCommand._command.data.offset : 0;","","    let total = (((r.countResult && r.countResult.rows) || [])[0] || {}).__total__ || 0;","    let rows = r.result ? (r.result.rows || []).slice() : [];","    let models = this.__parseModelsFromRows__(rows, this.__isGrouped__());","","    if (r.updateResult && r.updateResult.rows) {","","      let cache = r.updateResult.rows.reduce((cache, obj) => {","        cache[obj.id] = obj;","        return cache;","      }, {});","","      models.forEach(m => {","        let data = cache[m.get('id')];","        data && m.read(data);","      });","","    }","","    models.setMeta({offset: offset, total: total});","    callback.call(this, err, models);","","  }","","  /**","  * Sets the top-level query as a transaction using provided txn","  * @param {Transaction} txn The desired transaction to use","  * @return self","  */","  transact(txn) {","","    if (!txn) {","      return this;","    }","","    if (!(txn instanceof Transaction)) {","      throw new Error('Must provide valid transaction to Composer#transact');","    }","","    if (txn.adapter.db !== this.db) {","      throw new Error('Transaction must belong to Model Database');","    }","","    this._transaction = txn;","    return this;","","  }","","  /**","  * Execute the query you've been composing.","  * @param {function({Error}, {Nodal.ModelArray})} callback The method to execute when the query is complete","  */","  end(callback) {","","    let query = this.__generateQuery__();","    let countQuery = this.__generateCountQuery__();","","    let source = this._transaction ? this._transaction : this.db;","","    source.query(countQuery.sql, countQuery.params, (err, countResult) => {","","      source.query(query.sql, query.params, (err, result) => {","","        this.__endProcessor__(","          err,","          {","            countResult: countResult || [],","            result: result || []","          },","          callback","        );","","      });","","    });","","  }","","  /**","  * Shortcut for .limit(1).end(callback) that only returns a model object or error if not found","  * @param {Function} callback Callback to execute, provides an error and model parameter","  */","  first(callback) {","","    return this.limit(1).end((err, models) => {","","      if (!err && !models.length) {","        err = new Error(`No records for ${this.Model.name} found in your query`);","      }","","      callback(err, models[0]);","","    });","","  }","","  /**","  * Execute query as an update query, changed all fields specified.","  * @param {Object} fields The object containing columns (keys) and associated values you'd like to update","  * @param {function({Error}, {Nodal.ModelArray})} callback The callback for the update query","  */","  update(fields, callback) {","","    if (this.__isGrouped__()) {","      throw new Error('Cannot update grouped queries');","    }","","    let query = this.__generateQuery__();","    let countQuery = this.__generateCountQuery__();","    let updateQuery = this.__generateUpdateQuery__(fields);","","    let source = this._transaction ? this._transaction : this.db;","","    source.query(countQuery.sql, countQuery.params, (err, countResult) => {","","      source.query(query.sql, query.params, (err, result) => {","","        source.query(updateQuery.sql, updateQuery.params, (err, updateResult) => {","","          this.__endProcessor__(","            err,","            {","              countResult: countResult || [],","              result: result || [],","              updateResult: updateResult || []","            },","            callback","          );","","        });","","      });","","    });","","  }","","}","","module.exports = Composer;",""],"l":{"3":1,"4":1,"5":1,"7":1,"22":0,"23":0,"25":0,"26":0,"27":0,"40":0,"41":0,"44":0,"45":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"59":0,"60":0,"64":0,"65":0,"68":0,"69":0,"70":0,"71":0,"73":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"83":0,"84":0,"86":0,"87":0,"89":0,"91":0,"95":0,"97":0,"98":0,"100":0,"102":0,"104":0,"106":0,"108":0,"109":0,"110":0,"113":0,"117":0,"119":0,"121":0,"122":0,"123":0,"124":0,"126":0,"128":0,"129":0,"132":0,"133":0,"136":0,"137":0,"139":0,"140":0,"141":0,"142":0,"147":0,"148":0,"149":0,"151":0,"158":0,"169":0,"170":0,"172":0,"173":0,"174":0,"177":0,"189":0,"190":0,"191":0,"203":0,"204":0,"214":0,"225":0,"227":0,"229":0,"231":0,"233":0,"234":0,"235":0,"236":0,"237":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"250":0,"254":0,"255":0,"262":0,"264":0,"271":0,"272":0,"276":0,"278":0,"280":0,"286":0,"287":0,"292":0,"296":0,"312":0,"314":0,"316":0,"317":0,"320":0,"322":0,"323":0,"325":0,"326":0,"328":0,"329":0,"330":0,"332":0,"333":0,"334":0,"337":0,"362":0,"363":0,"364":0,"369":0,"383":0,"385":0,"386":0,"388":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"421":0,"422":0,"423":0,"425":0,"426":0,"427":0,"428":0,"430":0,"432":0,"441":0,"443":0,"457":0,"459":0,"461":0,"462":0,"463":0,"467":0,"468":0,"470":0,"472":0,"473":0,"479":0,"480":0,"481":0,"487":0,"513":0,"515":0,"516":0,"518":0,"521":0,"522":0,"523":0,"525":0,"526":0,"527":0,"528":0,"531":0,"532":0,"533":0,"534":0,"537":0,"538":0,"539":0,"541":0,"544":0,"545":0,"548":0,"549":0,"550":0,"554":0,"557":0,"558":0,"561":0,"572":0,"579":0,"581":0,"583":0,"585":0,"587":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"599":0,"602":0,"603":0,"608":0,"609":0,"612":0,"614":0,"625":0,"626":0,"629":0,"645":0,"646":0,"649":0,"650":0,"651":0,"654":0,"671":0,"672":0,"675":0,"676":0,"679":0,"680":0,"681":0,"683":0,"685":0,"686":0,"687":0,"690":0,"691":0,"692":0,"693":0,"694":0,"699":0,"700":0,"701":0,"702":0,"703":0,"706":0,"710":0,"711":0,"715":0,"727":0,"728":0,"730":0,"731":0,"732":0,"734":0,"735":0,"738":0,"739":0,"740":0,"744":0,"753":0,"765":0,"766":0,"769":0,"770":0,"771":0,"774":0,"775":0,"777":0,"785":0,"797":0,"798":0,"799":0,"801":0,"802":0,"805":0,"806":0,"807":0,"810":0,"811":0,"812":0,"813":0,"815":0,"818":0,"819":0,"820":0,"821":0,"824":0,"825":0,"829":0,"830":0,"831":0,"833":0,"841":0,"851":0,"852":0,"854":0,"855":0,"856":0,"858":0,"859":0,"862":0,"870":0,"881":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"890":0,"891":0,"894":0,"903":0,"913":0,"915":0,"917":0,"929":0,"930":0,"933":0,"934":0,"936":0,"937":0,"938":0,"940":0,"942":0,"943":0,"944":0,"947":0,"948":0,"949":0,"954":0,"955":0,"966":0,"967":0,"970":0,"971":0,"974":0,"975":0,"978":0,"979":0,"989":0,"990":0,"992":0,"994":0,"996":0,"998":0,"1019":0,"1021":0,"1022":0,"1025":0,"1038":0,"1039":0,"1042":0,"1043":0,"1044":0,"1046":0,"1048":0,"1050":0,"1052":0,"1054":0,"1074":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/item_array.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/item_array.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":13},"end":{"line":14,"column":16}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":19}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":9},"end":{"line":41,"column":16}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":10},"end":{"line":52,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":16,"column":4},"end":{"line":16,"column":12}},"3":{"start":{"line":17,"column":4},"end":{"line":20,"column":6}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":31}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":41}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"7":{"start":{"line":43,"column":4},"end":{"line":43,"column":60}},"8":{"start":{"line":43,"column":35},"end":{"line":43,"column":58}},"9":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"10":{"start":{"line":54,"column":4},"end":{"line":54,"column":18}},"11":{"start":{"line":56,"column":4},"end":{"line":64,"column":5}},"12":{"start":{"line":58,"column":6},"end":{"line":58,"column":34}},"13":{"start":{"line":60,"column":6},"end":{"line":62,"column":7}},"14":{"start":{"line":61,"column":8},"end":{"line":61,"column":66}},"15":{"start":{"line":61,"column":33},"end":{"line":61,"column":63}},"16":{"start":{"line":66,"column":4},"end":{"line":71,"column":7}},"17":{"start":{"line":67,"column":6},"end":{"line":70,"column":13}},"18":{"start":{"line":68,"column":8},"end":{"line":68,"column":20}},"19":{"start":{"line":69,"column":8},"end":{"line":69,"column":17}},"20":{"start":{"line":77,"column":0},"end":{"line":77,"column":27}}},"branchMap":{"1":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":22}},{"start":{"line":60,"column":26},"end":{"line":60,"column":45}}]}},"code":["'use strict';","","const async = require('async');","","/**","* Array of Items, for easy conversion to Objects","* @class","*/","class ItemArray extends Array {","","  /**","  * Create the ItemArray","  */","  constructor() {","","    super();","    this._meta = {","      total: 0,","      offset: 0","    };","","  }","","  /**","  * Convert a normal Array into a ItemArray","  * @param {Array} arr The array of child objects","  */","  static from(arr) {","","    let itemArray = new this();","    itemArray.push.apply(itemArray, arr);","","    return itemArray;","","  }","","  /**","  * Sets metadata for the modelArray","  * @param {Object} data values to set","  */","  setMeta(data) {","","    Object.keys(data).forEach(k => this._meta[k] = data[k]);","    return this._meta;","","  }","","  /**","  * Creates an Array of plain objects from the ModelArray, with properties matching an optional interface","  * @param {Array} arrInterface Interface to use for object creation for each model","  */","  toObject(arrInterface) {","","    let keys = [];","","    if (this.length) {","","      keys = Object.keys(this[0]);","","      if (arrInterface && arrInterface.length) {","        keys = keys.filter(k => (arrInterface.indexOf(k) !== -1));","      }","","    }","","    return this.map(m => {","      return keys.reduce((p, k) => {","        p[k] = m[k];","        return p;","      }, {});","    });","","  }","","}","","module.exports = ItemArray;",""],"l":{"3":1,"16":0,"17":0,"30":0,"31":0,"33":0,"43":0,"44":0,"54":0,"56":0,"58":0,"60":0,"61":0,"66":0,"67":0,"68":0,"69":0,"77":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/model_array.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/model_array.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":32}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":19}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":10},"end":{"line":45,"column":25}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":5},"end":{"line":55,"column":13}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":9},"end":{"line":63,"column":16}}},"6":{"name":"(anonymous_6)","line":73,"loc":{"start":{"line":73,"column":8},"end":{"line":73,"column":23}}},"7":{"name":"(anonymous_7)","line":82,"loc":{"start":{"line":82,"column":12},"end":{"line":82,"column":23}}},"8":{"name":"(anonymous_8)","line":115,"loc":{"start":{"line":115,"column":16},"end":{"line":115,"column":27}}},"9":{"name":"(anonymous_9)","line":154,"loc":{"start":{"line":154,"column":9},"end":{"line":154,"column":20}}},"10":{"name":"(anonymous_10)","line":191,"loc":{"start":{"line":191,"column":13},"end":{"line":191,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":12}},"4":{"start":{"line":20,"column":4},"end":{"line":20,"column":34}},"5":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"6":{"start":{"line":31,"column":6},"end":{"line":31,"column":67}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":50}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":43}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":22}},"10":{"start":{"line":47,"column":4},"end":{"line":47,"column":63}},"11":{"start":{"line":47,"column":37},"end":{"line":47,"column":61}},"12":{"start":{"line":56,"column":4},"end":{"line":56,"column":72}},"13":{"start":{"line":56,"column":28},"end":{"line":56,"column":59}},"14":{"start":{"line":64,"column":4},"end":{"line":64,"column":44}},"15":{"start":{"line":64,"column":26},"end":{"line":64,"column":42}},"16":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"17":{"start":{"line":74,"column":4},"end":{"line":74,"column":51}},"18":{"start":{"line":74,"column":26},"end":{"line":74,"column":49}},"19":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"20":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"21":{"start":{"line":84,"column":25},"end":{"line":84,"column":39}},"22":{"start":{"line":85,"column":6},"end":{"line":85,"column":65}},"23":{"start":{"line":88,"column":4},"end":{"line":88,"column":37}},"24":{"start":{"line":90,"column":4},"end":{"line":90,"column":44}},"25":{"start":{"line":90,"column":31},"end":{"line":90,"column":42}},"26":{"start":{"line":91,"column":4},"end":{"line":91,"column":82}},"27":{"start":{"line":93,"column":4},"end":{"line":107,"column":6}},"28":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"29":{"start":{"line":99,"column":10},"end":{"line":99,"column":61}},"30":{"start":{"line":102,"column":8},"end":{"line":102,"column":48}},"31":{"start":{"line":102,"column":26},"end":{"line":102,"column":46}},"32":{"start":{"line":104,"column":8},"end":{"line":104,"column":34}},"33":{"start":{"line":117,"column":4},"end":{"line":117,"column":37}},"34":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"35":{"start":{"line":119,"column":25},"end":{"line":119,"column":39}},"36":{"start":{"line":120,"column":6},"end":{"line":120,"column":65}},"37":{"start":{"line":123,"column":4},"end":{"line":123,"column":44}},"38":{"start":{"line":123,"column":31},"end":{"line":123,"column":42}},"39":{"start":{"line":124,"column":4},"end":{"line":124,"column":94}},"40":{"start":{"line":126,"column":4},"end":{"line":126,"column":56}},"41":{"start":{"line":127,"column":4},"end":{"line":131,"column":16}},"42":{"start":{"line":129,"column":8},"end":{"line":129,"column":130}},"43":{"start":{"line":133,"column":4},"end":{"line":146,"column":6}},"44":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"45":{"start":{"line":138,"column":10},"end":{"line":138,"column":31}},"46":{"start":{"line":141,"column":8},"end":{"line":141,"column":48}},"47":{"start":{"line":141,"column":26},"end":{"line":141,"column":46}},"48":{"start":{"line":143,"column":8},"end":{"line":143,"column":23}},"49":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"50":{"start":{"line":157,"column":6},"end":{"line":157,"column":45}},"51":{"start":{"line":160,"column":4},"end":{"line":182,"column":6}},"52":{"start":{"line":161,"column":20},"end":{"line":161,"column":40}},"53":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"54":{"start":{"line":165,"column":10},"end":{"line":165,"column":31}},"55":{"start":{"line":168,"column":8},"end":{"line":179,"column":11}},"56":{"start":{"line":170,"column":10},"end":{"line":172,"column":11}},"57":{"start":{"line":171,"column":12},"end":{"line":171,"column":39}},"58":{"start":{"line":174,"column":10},"end":{"line":177,"column":12}},"59":{"start":{"line":175,"column":26},"end":{"line":175,"column":45}},"60":{"start":{"line":176,"column":19},"end":{"line":176,"column":46}},"61":{"start":{"line":193,"column":4},"end":{"line":193,"column":66}},"62":{"start":{"line":193,"column":43},"end":{"line":193,"column":56}},"63":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"64":{"start":{"line":196,"column":6},"end":{"line":196,"column":64}},"65":{"start":{"line":199,"column":4},"end":{"line":230,"column":6}},"66":{"start":{"line":200,"column":20},"end":{"line":200,"column":40}},"67":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"68":{"start":{"line":204,"column":10},"end":{"line":204,"column":42}},"69":{"start":{"line":207,"column":8},"end":{"line":207,"column":41}},"70":{"start":{"line":209,"column":8},"end":{"line":227,"column":10}},"71":{"start":{"line":211,"column":12},"end":{"line":211,"column":50}},"72":{"start":{"line":212,"column":12},"end":{"line":212,"column":45}},"73":{"start":{"line":216,"column":12},"end":{"line":218,"column":13}},"74":{"start":{"line":217,"column":14},"end":{"line":217,"column":65}},"75":{"start":{"line":220,"column":12},"end":{"line":222,"column":15}},"76":{"start":{"line":221,"column":14},"end":{"line":221,"column":50}},"77":{"start":{"line":224,"column":12},"end":{"line":224,"column":38}},"78":{"start":{"line":236,"column":0},"end":{"line":236,"column":28}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"3":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"4":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"5":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"6":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"7":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":8}},{"start":{"line":164,"column":8},"end":{"line":164,"column":8}}]},"8":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":10},"end":{"line":170,"column":10}},{"start":{"line":170,"column":10},"end":{"line":170,"column":10}}]},"9":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":28},"end":{"line":176,"column":31}},{"start":{"line":176,"column":35},"end":{"line":176,"column":39}}]},"10":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"11":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"12":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":12},"end":{"line":216,"column":12}},{"start":{"line":216,"column":12},"end":{"line":216,"column":12}}]}},"code":["'use strict';","","const async = require('async');","","const ItemArray = require('./item_array.js');","","/**","* Array of Models, for easy conversion to Objects","* @class","*/","class ModelArray extends ItemArray {","","  /**","  * Create the ModelArray with a provided Model to use as a reference.","  * @param {Array|class Nodal.Model} modelConstructor Must pass the constructor for the type of ModelArray you wish to create.","  */","  constructor(modelConstructor) {","","    super();","    this.Model = modelConstructor;","","  }","","  /**","  * Convert a normal Array into a ModelArray","  * @param {Array} arr The array of child objects","  */","  static from(arr) {","","    if (!arr.length) {","      throw new Error('Cannot create ModelArray from empty Array');","    }","","    let modelArray = new this(arr[0].constructor);","    modelArray.push.apply(modelArray, arr);","","    return modelArray;","","  }","","  /**","  * Creates an Array of plain objects from the ModelArray, with properties matching an optional interface","  * @param {Array} arrInterface Interface to use for object creation for each model","  */","  toObject(arrInterface) {","","    return Array.from(this).map(m => m.toObject(arrInterface));","","  }","","  /**","  * Checks if ModelArray has a model in it","  * @param {Nodal.Model} model","  */","  has(model) {","    return this.filter(m => m.get('id') === model.get('id')).length > 0;","  }","","  /**","  * Calls Model#read on each Model in the ModelArray","  * @param {Object}","  */","  readAll(data) {","    this.forEach(model => model.read(data));","    return true;","  }","","  /**","  * Calls Model#set on each Model in the ModelArray","  * @param {string} field Field to set","  * @param {any} value Value for the field","  */","  setAll(field, value) {","    this.forEach(model => model.set(field, value));","    return true;","  }","","  /**","  * Destroys (deletes) all models in the ModelArray from the database","  * @param {function} callback Method to invoke upon completion","  */","  destroyAll(callback) {","","    if (this.filter(m => !m.inStorage()).length) {","      return callback(new Error('Not all models are in storage'))","    }","","    let db = this.Model.prototype.db;","","    let params = this.map(m => m.get('id'));","    let sql = db.adapter.generateDeleteAllQuery(this.Model.table(), 'id', params);","","    db.query(","      sql,","      params,","      (err, result) => {","","        if (err) {","          return callback.call(this, new Error(err.message));","        }","","        this.forEach(m => m._inStorage = false);","","        callback.call(this, null);","","      }","    );","","  }","","  /**","  * Destroys model and cascades all deletes.","  * @param {function} callback method to run upon completion","  */","  destroyCascade(callback) {","","    let db = this.Model.prototype.db;","","    if (this.filter(m => !m.inStorage()).length) {","      return callback(new Error('Not all models are in storage'))","    }","","    let params = this.map(m => m.get('id'));","    let txn = [[db.adapter.generateDeleteAllQuery(this.Model.table(), 'id', params), params]];","","    let children = this.Model.relationships().cascade();","    txn = txn.concat(","      children.map(p => {","        return [db.adapter.generateDeleteAllQuery(p.getModel().table(), 'id', params, p.joins(null, this.Model.table())), params];","      })","    ).reverse();","","    db.transaction(","      txn,","      (err, result) => {","","        if (err) {","          return callback(err);","        }","","        this.forEach(m => m._inStorage = false);","","        callback(null);","","      }","    );","","  }","","  /**","  * Saves / updates all models in the ModelArray. Uses beforeSave / afterSave. Will return an error and rollback if *any* model errors out.","  * @param {function} callback returning the error and reference to self","  */","  saveAll(callback) {","","    if (!this.length) {","      return callback.call(this, null, this);","    }","","    async.series(","      this.map(m => m.beforeSave.bind(m)),","      err => {","","        if (err) {","          return callback(err);","        }","","        this.__saveAll__(err => {","","          if (err) {","            return callback(err, this);","          }","","          async.series(","            this.map(m => m.afterSave.bind(m)),","            err => callback(err || null, this)","          );","","        });","","      }","    );","","  }","","  /**","  * save all models (outside of beforeSave / afterSave)","  * @param {function} callback Called with error, if applicable","  * @private","  */","  __saveAll__(callback) {","","    let firstErrorModel = this.filter(m => m.hasErrors()).shift();","","    if (firstErrorModel) {","      return callback.call(this, firstErrorModel.errorObject());","    }","","    async.series(","      this.map(m => m.__verify__.bind(m)),","      (err) => {","","        if (err) {","          return callback.call(this, err);","        }","","        let db = this.Model.prototype.db;","","        db.transaction(","          this.map(m => {","            let query = m.__generateSaveQuery__();","            return [query.sql, query.params];","          }),","          (err, result) => {","","            if (err) {","              return callback.call(this, new Error(err.message));","            }","","            this.forEach((m, i) => {","              m.__load__(result[i].rows[0], true);","            });","","            callback.call(this, null);","","          }","        );","","      }","    );","","  }","","}","","module.exports = ModelArray;",""],"l":{"3":1,"5":1,"19":0,"20":0,"30":0,"31":0,"34":0,"35":0,"37":0,"47":0,"56":0,"64":0,"65":0,"74":0,"75":0,"84":0,"85":0,"88":0,"90":0,"91":0,"93":0,"98":0,"99":0,"102":0,"104":0,"117":0,"119":0,"120":0,"123":0,"124":0,"126":0,"127":0,"129":0,"133":0,"137":0,"138":0,"141":0,"143":0,"156":0,"157":0,"160":0,"161":0,"164":0,"165":0,"168":0,"170":0,"171":0,"174":0,"175":0,"176":0,"193":0,"195":0,"196":0,"199":0,"200":0,"203":0,"204":0,"207":0,"209":0,"211":0,"212":0,"216":0,"217":0,"220":0,"221":0,"224":0,"236":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/transaction.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/transaction.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":13},"end":{"line":16,"column":41}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":14}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":10},"end":{"line":31,"column":13}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":7},"end":{"line":37,"column":31}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":10},"end":{"line":44,"column":21}}},"6":{"name":"(anonymous_6)","line":54,"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":26}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":30}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":36}},"7":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"8":{"start":{"line":27,"column":6},"end":{"line":27,"column":73}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":34}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":39}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":15}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":21}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":66}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":21}},"15":{"start":{"line":47,"column":4},"end":{"line":50,"column":7}},"16":{"start":{"line":48,"column":6},"end":{"line":48,"column":22}},"17":{"start":{"line":49,"column":6},"end":{"line":49,"column":20}},"18":{"start":{"line":56,"column":4},"end":{"line":56,"column":21}},"19":{"start":{"line":57,"column":4},"end":{"line":60,"column":7}},"20":{"start":{"line":58,"column":6},"end":{"line":58,"column":22}},"21":{"start":{"line":59,"column":6},"end":{"line":59,"column":20}},"22":{"start":{"line":66,"column":0},"end":{"line":66,"column":29}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]}},"code":["'use strict';","","const async = require('async');","","const TXN_STATUS = {","  READY: 0,","  COMPLETE: 1","};","","/**","* The database transaction object (ORM)","* @class","*/","class Transaction {","","  constructor(adapter, client, complete) {","","    this.adapter = adapter;","    this._client = client;","    this._complete = complete;","    this._status = TXN_STATUS.READY;","","  }","","  __check__() {","    if (this._status === TXN_STATUS.COMPLETE) {","      throw new Error('Can not perform after transaction has completed');","    }","  }","","  complete() {","    let complete = this._complete;","    this._status = TXN_STATUS.COMPLETE;","    complete();","  }","","  query(sql, params, callback) {","","    this.__check__();","    this.adapter.queryClient(this._client, sql, params, callback);","","  }","","  rollback(callback) {","","    this.__check__();","    this.adapter.rollbackClient(this._client, err => {","      this.complete();","      callback(err);","    });","","  }","","  commit(callback) {","","    this.__check__();","    this.adapter.commitClient(this._client, err => {","      this.complete();","      callback(err);","    });","","  }","","}","","module.exports = Transaction;",""],"l":{"3":1,"5":1,"18":0,"19":0,"20":0,"21":0,"26":0,"27":0,"32":0,"33":0,"34":0,"39":0,"40":0,"46":0,"47":0,"48":0,"49":0,"56":0,"57":0,"58":0,"59":0,"66":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/utilities.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/utilities.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}}},"branchMap":{},"code":["module.exports = require('fxn').utilities;",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/relationship_graph.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/relationship_graph.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":13},"end":{"line":8,"column":20}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":10},"end":{"line":12,"column":13}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":10},"end":{"line":16,"column":20}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":5},"end":{"line":36,"column":18}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":10},"end":{"line":40,"column":13}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":10},"end":{"line":44,"column":13}}},"7":{"name":"(anonymous_7)","line":55,"loc":{"start":{"line":55,"column":19},"end":{"line":55,"column":22}}},"8":{"name":"(anonymous_8)","line":64,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":27}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":13},"end":{"line":106,"column":28}}},"10":{"name":"(anonymous_10)","line":112,"loc":{"start":{"line":112,"column":10},"end":{"line":112,"column":13}}},"11":{"name":"(anonymous_11)","line":116,"loc":{"start":{"line":116,"column":9},"end":{"line":116,"column":26}}},"12":{"name":"(anonymous_12)","line":142,"loc":{"start":{"line":142,"column":12},"end":{"line":142,"column":15}}},"13":{"name":"(anonymous_13)","line":146,"loc":{"start":{"line":146,"column":9},"end":{"line":146,"column":12}}},"14":{"name":"(anonymous_14)","line":168,"loc":{"start":{"line":168,"column":14},"end":{"line":168,"column":25}}},"15":{"name":"(anonymous_15)","line":199,"loc":{"start":{"line":199,"column":6},"end":{"line":199,"column":13}}},"16":{"name":"(anonymous_16)","line":246,"loc":{"start":{"line":246,"column":13},"end":{"line":246,"column":38}}},"17":{"name":"(anonymous_17)","line":258,"loc":{"start":{"line":258,"column":10},"end":{"line":258,"column":13}}},"18":{"name":"(anonymous_18)","line":262,"loc":{"start":{"line":262,"column":10},"end":{"line":262,"column":18}}},"19":{"name":"(anonymous_19)","line":266,"loc":{"start":{"line":266,"column":11},"end":{"line":266,"column":20}}},"20":{"name":"(anonymous_20)","line":270,"loc":{"start":{"line":270,"column":10},"end":{"line":270,"column":17}}},"21":{"name":"(anonymous_21)","line":279,"loc":{"start":{"line":279,"column":13},"end":{"line":279,"column":16}}},"22":{"name":"(anonymous_22)","line":284,"loc":{"start":{"line":284,"column":4},"end":{"line":284,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":15}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":21}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":35}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":40}},"6":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"7":{"start":{"line":21,"column":6},"end":{"line":21,"column":28}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"9":{"start":{"line":26,"column":4},"end":{"line":30,"column":5}},"10":{"start":{"line":27,"column":6},"end":{"line":27,"column":28}},"11":{"start":{"line":28,"column":6},"end":{"line":28,"column":28}},"12":{"start":{"line":29,"column":6},"end":{"line":29,"column":76}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":28}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":64}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":30}},"16":{"start":{"line":45,"column":4},"end":{"line":51,"column":5}},"17":{"start":{"line":46,"column":6},"end":{"line":46,"column":30}},"18":{"start":{"line":47,"column":6},"end":{"line":47,"column":34}},"19":{"start":{"line":48,"column":6},"end":{"line":50,"column":7}},"20":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":28}},"23":{"start":{"line":57,"column":4},"end":{"line":57,"column":28}},"24":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":18}},"26":{"start":{"line":61,"column":4},"end":{"line":61,"column":17}},"27":{"start":{"line":66,"column":4},"end":{"line":66,"column":13}},"28":{"start":{"line":67,"column":4},"end":{"line":67,"column":14}},"29":{"start":{"line":68,"column":4},"end":{"line":98,"column":11}},"30":{"start":{"line":70,"column":6},"end":{"line":73,"column":7}},"31":{"start":{"line":71,"column":8},"end":{"line":71,"column":20}},"32":{"start":{"line":72,"column":8},"end":{"line":72,"column":21}},"33":{"start":{"line":75,"column":6},"end":{"line":75,"column":22}},"34":{"start":{"line":77,"column":6},"end":{"line":80,"column":8}},"35":{"start":{"line":82,"column":6},"end":{"line":90,"column":7}},"36":{"start":{"line":83,"column":8},"end":{"line":83,"column":43}},"37":{"start":{"line":84,"column":8},"end":{"line":84,"column":45}},"38":{"start":{"line":85,"column":8},"end":{"line":85,"column":43}},"39":{"start":{"line":87,"column":8},"end":{"line":87,"column":45}},"40":{"start":{"line":88,"column":8},"end":{"line":88,"column":43}},"41":{"start":{"line":89,"column":8},"end":{"line":89,"column":41}},"42":{"start":{"line":92,"column":6},"end":{"line":92,"column":65}},"43":{"start":{"line":94,"column":6},"end":{"line":94,"column":23}},"44":{"start":{"line":96,"column":6},"end":{"line":96,"column":19}},"45":{"start":{"line":107,"column":4},"end":{"line":107,"column":23}},"46":{"start":{"line":108,"column":4},"end":{"line":108,"column":23}},"47":{"start":{"line":109,"column":4},"end":{"line":109,"column":20}},"48":{"start":{"line":113,"column":4},"end":{"line":113,"column":40}},"49":{"start":{"line":118,"column":4},"end":{"line":121,"column":5}},"50":{"start":{"line":120,"column":6},"end":{"line":120,"column":18}},"51":{"start":{"line":123,"column":4},"end":{"line":123,"column":28}},"52":{"start":{"line":125,"column":4},"end":{"line":125,"column":42}},"53":{"start":{"line":126,"column":4},"end":{"line":126,"column":165}},"54":{"start":{"line":127,"column":4},"end":{"line":127,"column":76}},"55":{"start":{"line":128,"column":4},"end":{"line":128,"column":74}},"56":{"start":{"line":129,"column":4},"end":{"line":129,"column":42}},"57":{"start":{"line":131,"column":4},"end":{"line":131,"column":42}},"58":{"start":{"line":132,"column":4},"end":{"line":132,"column":104}},"59":{"start":{"line":132,"column":38},"end":{"line":132,"column":96}},"60":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"61":{"start":{"line":135,"column":6},"end":{"line":135,"column":61}},"62":{"start":{"line":138,"column":4},"end":{"line":138,"column":16}},"63":{"start":{"line":143,"column":4},"end":{"line":143,"column":59}},"64":{"start":{"line":143,"column":37},"end":{"line":143,"column":57}},"65":{"start":{"line":148,"column":4},"end":{"line":148,"column":34}},"66":{"start":{"line":149,"column":4},"end":{"line":149,"column":77}},"67":{"start":{"line":149,"column":31},"end":{"line":149,"column":75}},"68":{"start":{"line":151,"column":4},"end":{"line":151,"column":14}},"69":{"start":{"line":152,"column":4},"end":{"line":162,"column":5}},"70":{"start":{"line":154,"column":6},"end":{"line":154,"column":31}},"71":{"start":{"line":155,"column":6},"end":{"line":155,"column":31}},"72":{"start":{"line":157,"column":6},"end":{"line":157,"column":46}},"73":{"start":{"line":158,"column":6},"end":{"line":158,"column":38}},"74":{"start":{"line":160,"column":6},"end":{"line":160,"column":72}},"75":{"start":{"line":160,"column":46},"end":{"line":160,"column":69}},"76":{"start":{"line":164,"column":4},"end":{"line":164,"column":17}},"77":{"start":{"line":170,"column":4},"end":{"line":170,"column":37}},"78":{"start":{"line":171,"column":4},"end":{"line":171,"column":20}},"79":{"start":{"line":172,"column":4},"end":{"line":172,"column":44}},"80":{"start":{"line":175,"column":4},"end":{"line":193,"column":5}},"81":{"start":{"line":177,"column":6},"end":{"line":177,"column":31}},"82":{"start":{"line":179,"column":6},"end":{"line":181,"column":9}},"83":{"start":{"line":180,"column":8},"end":{"line":180,"column":95}},"84":{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},"85":{"start":{"line":184,"column":8},"end":{"line":184,"column":20}},"86":{"start":{"line":187,"column":6},"end":{"line":187,"column":29}},"87":{"start":{"line":188,"column":6},"end":{"line":188,"column":41}},"88":{"start":{"line":190,"column":6},"end":{"line":190,"column":38}},"89":{"start":{"line":191,"column":6},"end":{"line":191,"column":22}},"90":{"start":{"line":195,"column":4},"end":{"line":195,"column":16}},"91":{"start":{"line":201,"column":4},"end":{"line":205,"column":9}},"92":{"start":{"line":204,"column":8},"end":{"line":204,"column":63}},"93":{"start":{"line":207,"column":4},"end":{"line":207,"column":23}},"94":{"start":{"line":209,"column":4},"end":{"line":236,"column":5}},"95":{"start":{"line":211,"column":6},"end":{"line":211,"column":26}},"96":{"start":{"line":212,"column":6},"end":{"line":212,"column":30}},"97":{"start":{"line":213,"column":6},"end":{"line":213,"column":27}},"98":{"start":{"line":214,"column":6},"end":{"line":214,"column":15}},"99":{"start":{"line":216,"column":6},"end":{"line":216,"column":35}},"100":{"start":{"line":218,"column":6},"end":{"line":218,"column":33}},"101":{"start":{"line":219,"column":6},"end":{"line":219,"column":39}},"102":{"start":{"line":221,"column":6},"end":{"line":223,"column":7}},"103":{"start":{"line":222,"column":8},"end":{"line":222,"column":39}},"104":{"start":{"line":225,"column":6},"end":{"line":234,"column":8}},"105":{"start":{"line":227,"column":26},"end":{"line":227,"column":45}},"106":{"start":{"line":229,"column":12},"end":{"line":232,"column":14}},"107":{"start":{"line":238,"column":4},"end":{"line":238,"column":16}},"108":{"start":{"line":248,"column":4},"end":{"line":248,"column":23}},"109":{"start":{"line":249,"column":4},"end":{"line":249,"column":25}},"110":{"start":{"line":250,"column":4},"end":{"line":250,"column":23}},"111":{"start":{"line":251,"column":4},"end":{"line":251,"column":27}},"112":{"start":{"line":253,"column":4},"end":{"line":253,"column":28}},"113":{"start":{"line":254,"column":4},"end":{"line":254,"column":27}},"114":{"start":{"line":259,"column":4},"end":{"line":259,"column":73}},"115":{"start":{"line":263,"column":4},"end":{"line":263,"column":32}},"116":{"start":{"line":267,"column":4},"end":{"line":267,"column":34}},"117":{"start":{"line":271,"column":4},"end":{"line":271,"column":98}},"118":{"start":{"line":272,"column":4},"end":{"line":272,"column":20}},"119":{"start":{"line":280,"column":4},"end":{"line":280,"column":20}},"120":{"start":{"line":281,"column":4},"end":{"line":281,"column":20}},"121":{"start":{"line":286,"column":4},"end":{"line":286,"column":63}},"122":{"start":{"line":286,"column":38},"end":{"line":286,"column":55}},"123":{"start":{"line":287,"column":4},"end":{"line":290,"column":5}},"124":{"start":{"line":288,"column":6},"end":{"line":288,"column":47}},"125":{"start":{"line":289,"column":6},"end":{"line":289,"column":28}},"126":{"start":{"line":292,"column":4},"end":{"line":292,"column":16}},"127":{"start":{"line":298,"column":0},"end":{"line":298,"column":35}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":39},"end":{"line":29,"column":56}},{"start":{"line":29,"column":59},"end":{"line":29,"column":74}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"4":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":10},"end":{"line":48,"column":29}},{"start":{"line":48,"column":33},"end":{"line":48,"column":54}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"6":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":27}},{"start":{"line":58,"column":31},"end":{"line":58,"column":52}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"8":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":45},"end":{"line":79,"column":78}},{"start":{"line":79,"column":82},"end":{"line":79,"column":100}}]},"9":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":82},"end":{"line":79,"column":92}},{"start":{"line":79,"column":96},"end":{"line":79,"column":100}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"11":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":31},"end":{"line":92,"column":47}},{"start":{"line":92,"column":50},"end":{"line":92,"column":64}}]},"12":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"13":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":14},"end":{"line":123,"column":21}},{"start":{"line":123,"column":25},"end":{"line":123,"column":27}}]},"14":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":17},"end":{"line":126,"column":27}},{"start":{"line":126,"column":32},"end":{"line":126,"column":163}}]},"15":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":51},"end":{"line":126,"column":115}},{"start":{"line":126,"column":118},"end":{"line":126,"column":163}}]},"16":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":19},"end":{"line":127,"column":31}},{"start":{"line":127,"column":35},"end":{"line":127,"column":75}}]},"17":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":18},"end":{"line":128,"column":29}},{"start":{"line":128,"column":33},"end":{"line":128,"column":73}}]},"18":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":20},"end":{"line":129,"column":33}},{"start":{"line":129,"column":37},"end":{"line":129,"column":41}}]},"19":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":38},"end":{"line":132,"column":61}},{"start":{"line":132,"column":65},"end":{"line":132,"column":96}}]},"20":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"21":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":16},"end":{"line":180,"column":35}},{"start":{"line":180,"column":39},"end":{"line":180,"column":65}},{"start":{"line":180,"column":70},"end":{"line":180,"column":94}}]},"22":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]},"23":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":6}},{"start":{"line":221,"column":6},"end":{"line":221,"column":6}}]},"24":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":11},"end":{"line":221,"column":36}},{"start":{"line":221,"column":40},"end":{"line":221,"column":69}},{"start":{"line":221,"column":74},"end":{"line":221,"column":101}}]},"25":{"line":271,"type":"cond-expr","locations":[{"start":{"line":271,"column":41},"end":{"line":271,"column":52}},{"start":{"line":271,"column":56},"end":{"line":271,"column":96}}]},"26":{"line":271,"type":"cond-expr","locations":[{"start":{"line":271,"column":79},"end":{"line":271,"column":89}},{"start":{"line":271,"column":92},"end":{"line":271,"column":96}}]},"27":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]}},"code":["'use strict';","","const inflect = require('i')();","let __id__ = 0;","","class RelationshipPath {","","  constructor(path) {","    this.path = path;","  }","","  toString() {","    return this.path.join(' <-> ');","  }","","  joinName(reverse) {","","    let path = [].slice.call(this.path);","","    if (reverse) {","      path = path.reverse();","    }","","    let names = [];","","    while (path.length > 1) {","      let node = path.pop();","      let edge = path.pop();","      names.push(edge.hasChild(node) ? edge.options.name : edge.options.as);","    }","","    return names.join('__');","","  }","","  add(node, edge) {","    return new this.constructor([node, edge].concat(this.path));","  }","","  getModel() {","    return this.path[0].Model;","  }","","  multiple() {","    for (let i = 1; i < this.path.length; i += 2) {","      let edge = this.path[i];","      let node = this.path[i - 1];","      if (edge.hasChild(node) && edge.options.multiple) {","        return true;","      }","    }","    return false;","  }","","  immediateMultiple() {","    let node = this.path[0];","    let edge = this.path[1];","    if (edge.hasChild(node) && edge.options.multiple) {","      return true;","    }","    return false;","  }","","  joins(alias, firstTable) {","","    let node;","    let i = 0;","    return this.path.slice().reverse().reduce((joins, item) => {","","      if (item instanceof RelationshipNode) {","        node = item;","        return joins;","      }","","      let edge = item;","","      let join = {","        joinTable: edge.opposite(node).Model.table(),","        prevTable: joins[joins.length - 1] ? joins[joins.length - 1].joinAlias : (firstTable || null),","      };","","      if (edge.hasChild(node)) {","        join.prevColumn = edge.options.via;","        join.joinColumn = edge.options.using;","        join.joinAlias = edge.options.name;","      } else {","        join.prevColumn = edge.options.using;","        join.joinColumn = edge.options.via;","        join.joinAlias = edge.options.as;","      }","","      join.joinAlias = alias ? `${alias}${++i}` : join.joinAlias;","","      joins.push(join);","","      return joins;","","    }, []);","","  }","","}","","class RelationshipNode {","","  constructor(Graph, Model) {","    this.Graph = Graph;","    this.Model = Model;","    this.edges = [];","  }","","  toString() {","    return `[Node: ${this.Model.name}]`;","  }","","  joinsTo(Model, options) {","","    if (!Model.name) {","      // Sanity check for circular dependency resolution","      return null;","    }","","    options = options || {};","","    options.multiple = !!options.multiple;","    options.as = options.as || (options.multiple ? `${inflect.pluralize(inflect.camelize(this.Model.name, false))}` : `${inflect.camelize(this.Model.name, false)}`);","    options.name = options.name || `${inflect.camelize(Model.name, false)}`;","    options.via = options.via || `${inflect.underscore(options.name)}_id`;","    options.using = options.using || `id`;","","    let parentNode = this.Graph.of(Model);","    let edge = this.edges.filter(e => e.parent === parentNode && e.options.name === options.name).pop();","","    if (!edge) {","      edge = new RelationshipEdge(parentNode, this, options);","    }","","    return edge;","","  }","","  childEdges() {","    return this.edges.filter(edge => edge.parent === this);","  }","","  cascade() {","","    let queue = this.childEdges();","    let paths = queue.map(e => new RelationshipPath([e.child, e, e.parent]));","","    let i = 0;","    while (queue.length) {","","      let edge = queue.shift();","      let curPath = paths[i++];","","      let nextEdges = edge.child.childEdges();","      queue = queue.concat(nextEdges);","","      paths = paths.concat(nextEdges.map(e => curPath.add(e.child, e)));","","    }","","    return paths;","","  }","","  findExplicit(pathname) {","","    let names = pathname.split('__');","    let node = this;","    let path = new RelationshipPath([node]);","","","    while (names.length) {","","      let name = names.shift();","","      let edges = node.edges.filter(edge => {","        return (edge.hasChild(node) && edge.options.name === name) || edge.options.as === name;","      });","","      if (edges.length === 0) {","        return null;","      }","","      let edge = edges.pop();","      let nextNode = edge.opposite(node);","","      path = path.add(nextNode, edge);","      node = nextNode;","","    }","","    return path;","","  }","","  find(name) {","","    let queue = this.edges","      .slice()","      .map(edge => {","        return {edge: edge, path: new RelationshipPath([this])}","      });","","    let traversed = {};","","    while (queue.length) {","","      let item = queue[0];","      let curEdge = item.edge;","      let path = item.path;","      let node;","","      traversed[curEdge.id] = true;","","      let curNode = path.path[0];","      node = curEdge.opposite(curNode);","","      if ((curEdge.hasChild(curNode) && curEdge.options.name === name) || curEdge.options.as === name) {","        return path.add(node, curEdge);","      }","","      queue = queue.slice(1).concat(","        node.edges","          .filter(edge => !traversed[edge.id])","          .map(edge => {","            return {","              edge: edge,","              path: path.add(node, curEdge)","            };","          })","      );","","    }","","    return null;","","  }","","}","","class RelationshipEdge {","","  constructor(parent, child, options) {","","    this.id = ++__id__;","    this.parent = parent;","    this.child = child;","    this.options = options;","","    parent.edges.push(this);","    child.edges.push(this);","","  }","","  toString() {","    return `[Edge: ${this.parent.Model.name}, ${this.child.Model.name}]`;","  }","","  hasChild(child) {","    return this.child === child;","  }","","  hasParent(parent) {","    return this.parent === parent;","  }","","  opposite(node) {","    let opposite = this.child === node ? this.parent : (this.parent === node ? this.child : null);","    return opposite;","  }","","}","","class RelationshipGraph {","","  constructor() {","    this.nodes = [];","    this.edges = [];","  }","","  of(Model) {","","    let node = this.nodes.filter(n => n.Model === Model).pop();","    if (!node) {","      node = new RelationshipNode(this, Model);","      this.nodes.push(node);","    }","","    return node;","","  }","","}","","module.exports = RelationshipGraph;",""],"l":{"3":1,"4":1,"9":0,"13":0,"18":0,"20":0,"21":0,"24":0,"26":0,"27":0,"28":0,"29":0,"32":0,"37":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"56":0,"57":0,"58":0,"59":0,"61":0,"66":0,"67":0,"68":0,"70":0,"71":0,"72":0,"75":0,"77":0,"82":0,"83":0,"84":0,"85":0,"87":0,"88":0,"89":0,"92":0,"94":0,"96":0,"107":0,"108":0,"109":0,"113":0,"118":0,"120":0,"123":0,"125":0,"126":0,"127":0,"128":0,"129":0,"131":0,"132":0,"134":0,"135":0,"138":0,"143":0,"148":0,"149":0,"151":0,"152":0,"154":0,"155":0,"157":0,"158":0,"160":0,"164":0,"170":0,"171":0,"172":0,"175":0,"177":0,"179":0,"180":0,"183":0,"184":0,"187":0,"188":0,"190":0,"191":0,"195":0,"201":0,"204":0,"207":0,"209":0,"211":0,"212":0,"213":0,"214":0,"216":0,"218":0,"219":0,"221":0,"222":0,"225":0,"227":0,"229":0,"238":0,"248":0,"249":0,"250":0,"251":0,"253":0,"254":0,"259":0,"263":0,"267":0,"271":0,"272":0,"280":1,"281":1,"286":0,"287":0,"288":0,"289":0,"292":0,"298":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/application.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/application.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":13},"end":{"line":8,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":7},"end":{"line":17,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":19}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":27}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":49}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":55}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":34}},"8":{"start":{"line":26,"column":4},"end":{"line":42,"column":6}},"9":{"start":{"line":48,"column":0},"end":{"line":48,"column":29}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":13},"end":{"line":19,"column":19}},{"start":{"line":19,"column":23},"end":{"line":19,"column":26}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":14},"end":{"line":20,"column":21}},{"start":{"line":20,"column":25},"end":{"line":20,"column":48}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":7}},{"start":{"line":24,"column":11},"end":{"line":24,"column":33}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":33}},{"start":{"line":36,"column":36},"end":{"line":36,"column":40}}]},"5":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":48}},{"start":{"line":35,"column":52},"end":{"line":35,"column":55}}]}},"code":["'use strict';","","const fxn = require('fxn');","const API = require('./api.js');","","class Application extends fxn.Application {","","  constructor() {","","    super('Nodal');","","  }","","  /**","  * HTTP Error","  */","  error(req, res, start, status, message, err) {","","    status = status || 500;","    message = message || 'Internal Server Error';","","    let headers = {'Content-Type': 'application/json'};","","    err && console.log(err.stack);","","    this.send(","      req,","      res,","      start,","      status,","      headers,","      JSON.stringify(","        API.error(","          message,","          (process.env.NODE_ENV !== 'production' && err) ?","            err.stack.split('\\n') : null","        ),","        null,","        2","      ),","      message","    );","","  }","","}","","module.exports = Application;",""],"l":{"3":1,"4":1,"10":0,"19":0,"20":0,"22":0,"24":0,"26":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/controller.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/controller.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":8},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":27}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":14},"end":{"line":35,"column":29}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":10},"end":{"line":47,"column":25}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":16},"end":{"line":59,"column":31}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":32}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":13},"end":{"line":84,"column":34}}},"8":{"name":"(anonymous_8)","line":96,"loc":{"start":{"line":96,"column":7},"end":{"line":96,"column":22}}},"9":{"name":"(anonymous_9)","line":108,"loc":{"start":{"line":108,"column":9},"end":{"line":108,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":59}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":16}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":21}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":58}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":21}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":59}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":16}},"11":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"12":{"start":{"line":49,"column":4},"end":{"line":49,"column":56}},"13":{"start":{"line":50,"column":4},"end":{"line":50,"column":16}},"14":{"start":{"line":60,"column":4},"end":{"line":60,"column":21}},"15":{"start":{"line":61,"column":4},"end":{"line":61,"column":63}},"16":{"start":{"line":62,"column":4},"end":{"line":62,"column":16}},"17":{"start":{"line":72,"column":4},"end":{"line":72,"column":21}},"18":{"start":{"line":73,"column":4},"end":{"line":73,"column":64}},"19":{"start":{"line":74,"column":4},"end":{"line":74,"column":16}},"20":{"start":{"line":85,"column":4},"end":{"line":85,"column":22}},"21":{"start":{"line":86,"column":4},"end":{"line":86,"column":66}},"22":{"start":{"line":87,"column":4},"end":{"line":87,"column":16}},"23":{"start":{"line":97,"column":4},"end":{"line":97,"column":21}},"24":{"start":{"line":98,"column":4},"end":{"line":98,"column":68}},"25":{"start":{"line":99,"column":4},"end":{"line":99,"column":16}},"26":{"start":{"line":110,"column":4},"end":{"line":118,"column":5}},"27":{"start":{"line":112,"column":6},"end":{"line":114,"column":7}},"28":{"start":{"line":113,"column":8},"end":{"line":113,"column":57}},"29":{"start":{"line":116,"column":6},"end":{"line":116,"column":57}},"30":{"start":{"line":120,"column":4},"end":{"line":120,"column":48}},"31":{"start":{"line":121,"column":4},"end":{"line":121,"column":16}},"32":{"start":{"line":127,"column":0},"end":{"line":127,"column":28}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":52},"end":{"line":13,"column":57}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":26},"end":{"line":25,"column":29}},{"start":{"line":25,"column":33},"end":{"line":25,"column":46}}]},"3":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":26},"end":{"line":37,"column":29}},{"start":{"line":37,"column":33},"end":{"line":37,"column":47}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":26},"end":{"line":49,"column":29}},{"start":{"line":49,"column":33},"end":{"line":49,"column":44}}]},"5":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":26},"end":{"line":61,"column":29}},{"start":{"line":61,"column":34},"end":{"line":61,"column":51}}]},"6":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":26},"end":{"line":73,"column":29}},{"start":{"line":73,"column":33},"end":{"line":73,"column":52}}]},"7":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":26},"end":{"line":86,"column":29}},{"start":{"line":86,"column":33},"end":{"line":86,"column":54}}]},"8":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":26},"end":{"line":98,"column":29}},{"start":{"line":98,"column":33},"end":{"line":98,"column":56}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"10":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":112,"column":6}},{"start":{"line":112,"column":6},"end":{"line":112,"column":6}}]}},"code":["'use strict';","","const fxn = require('fxn');","const API = require('./api.js');","","class Controller extends fxn.Controller {","","  /**","  * Set HTTP status code for this response. If OPTIONS mode, default to 200.","  * @param {Number} code","  */","  status(value) {","    super.status(this._method === 'OPTIONS' ? 200 : value);","    return true;","  }","","  /**","  * Using API formatting, send an http.ServerResponse indicating there was a Bad Request (400)","  * @param {string} msg Error message to send","  * @param {Object} details Any additional details for the error (must be serializable)","  * @return {boolean}","  */","  badRequest(msg, details) {","    this.status(400);","    this.render(API.error(msg || 'Bad Request', details));","    return true;","  }","","  /**","  * Using API formatting, send an http.ServerResponse indicating there was an Unauthorized request (401)","  * @param {string} msg Error message to send","  * @param {Object} details Any additional details for the error (must be serializable)","  * @return {boolean}","  */","  unauthorized(msg, details) {","    this.status(401);","    this.render(API.error(msg || 'Unauthorized', details));","    return true;","  }","","  /**","  * Using API formatting, send an http.ServerResponse indicating the requested resource was Not Found (404)","  * @param {string} msg Error message to send","  * @param {Object} details Any additional details for the error (must be serializable)","  * @return {boolean}","  */","  notFound(msg, details) {","    this.status(404);","    this.render(API.error(msg || 'Not Found', details));","    return true;","  }","","  /**","  * Endpoint not implemented","  * @param {string} msg Error message to send","  * @param {Object} details Any additional details for the error (must be serializable)","  * @return {boolean}","  */","  notImplemented(msg, details) {","    this.status(501);","    this.render(API.error(msg  || 'Not Implemented', details));","    return true;","  }","","  /**","  * Using API formatting, send an http.ServerResponse indicating there were Too Many Requests (429) (i.e. the client is being rate limited)","  * @param {string} msg Error message to send","  * @param {Object} details Any additional details for the error (must be serializable)","  * @return {boolean}","  */","  tooManyRequests(msg, details) {","    this.status(429);","    this.render(API.error(msg || 'Too Many Requests', details));","    return true;","  }","","  /**","  * Using API formatting, send a http.ServerResponse error with a specific HTTP response status code","  * @param {Number} code HTTP response status code","  * @param {string} msg Response message to send","  * @param {Object} details Any additional details for the error (must be serializable)","  * @return {boolean}","  */","  statusError(code, msg, details) {","    this.status(code);","    this.render(API.error(msg || `${code} Status Code`, details));","    return true;","  }","","  /**","  * Using API formatting, send an http.ServerResponse indicating there was an Internal Server Error (500)","  * @param {string} msg Error message to send","  * @param {Object} details Any additional details for the error (must be serializable)","  * @return {boolean}","  */","  error(msg, details) {","    this.status(500);","    this.render(API.error(msg || 'Internal Server Error', details));","    return true;","  }","","  /**","  * Using API formatting, generate an error or respond with model / object data.","  * @param {Error|Object|Array|Nodal.Model|Nodal.ModelArray} data Object to be formatted for API response","  * @param {optional Array} The interface to use for the data being returned, if not an error.","  * @return {boolean}","  */","  respond(data, arrInterface) {","","    if (data instanceof Error) {","","      if (data.notFound) {","        return this.notFound(data.message, data.details);","      }","","      return this.badRequest(data.message, data.details);","","    }","","    this.render(API.format(data, arrInterface));","    return true;","","  }","","}","","module.exports = Controller;",""],"l":{"3":1,"4":1,"13":0,"14":0,"24":0,"25":0,"26":0,"36":0,"37":0,"38":0,"48":0,"49":0,"50":0,"60":0,"61":0,"62":0,"72":0,"73":0,"74":0,"85":0,"86":0,"87":0,"97":0,"98":0,"99":0,"110":0,"112":0,"113":0,"116":0,"120":0,"121":0,"127":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/cli.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":66}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":21}}},"branchMap":{},"code":["'use strict';","","const CommandLineInterface = require('cmnd').CommandLineInterface;","const CLI = new CommandLineInterface();","","CLI.load(__dirname, './commands');","","module.exports = CLI;",""],"l":{"3":1,"4":1,"6":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/bootstrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/bootstrap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":29}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":69}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":37}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBBootstrapCommand extends Command {","","  constructor() {","","    super('db', 'bootstrap');","","  }","","  help() {","","    return {","      description: 'Runs db:drop, db:create, db:prepare, db:migrate, db:seed',","    };","","  }","","  run(params, callback) {","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.bootstrap(callback);","","  }","","}","","module.exports = DBBootstrapCommand;",""],"l":{"3":1,"9":1,"15":0,"23":0,"24":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/compose.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/compose.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":69}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":35}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBBootstrapCommand extends Command {","","  constructor() {","","    super('db', 'compose');","","  }","","  help() {","","    return {","      description: 'Runs db:prepare, db:migrate, db:seed',","    };","","  }","","  run(params, callback) {","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.compose(callback);","","  }","","}","","module.exports = DBBootstrapCommand;",""],"l":{"3":1,"9":1,"15":0,"23":0,"24":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/create.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":16}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":6},"end":{"line":15,"column":9}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":5},"end":{"line":23,"column":24}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":26}},"3":{"start":{"line":17,"column":4},"end":{"line":19,"column":6}},"4":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"5":{"start":{"line":26,"column":6},"end":{"line":26,"column":50}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":69}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":34}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":33}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]}},"code":["","","'use strict';","","const Command = require('cmnd').Command;","","class DBCreateCommand extends Command {","","  constructor() {","","    super('db', 'create');","","  }","","  help() {","","    return {","      description: 'Create a new PostgreSQL database for the current project'","    };","","  }","","  run(params, callback) {","","    if (params.vflags.env) {","      process.env.NODE_ENV = params.vflags.env[0];","    }","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.create(callback);","","  }","","}","","module.exports = DBCreateCommand;",""],"l":{"5":1,"11":1,"17":0,"25":0,"26":0,"29":0,"30":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/drop.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/drop.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":24}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"5":{"start":{"line":24,"column":6},"end":{"line":24,"column":50}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":69}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":32}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBDropCommand extends Command {","","  constructor() {","","    super('db', 'drop');","","  }","","  help() {","","    return {","      description: 'drops the currently active database'","    };","","  }","","  run(params, callback) {","","    if (params.vflags.env) {","      process.env.NODE_ENV = params.vflags.env[0];","    }","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.drop(callback);","","  }","","}","","module.exports = DBDropCommand;",""],"l":{"3":1,"9":1,"15":0,"23":0,"24":0,"27":0,"28":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/migrate.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/migrate.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":5},"end":{"line":24,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"3":{"start":{"line":15,"column":4},"end":{"line":20,"column":6}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":69}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":55}},"6":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBMigrateCommand extends Command {","","  constructor() {","","    super('db', 'migrate');","","  }","","  help() {","","    return {","      description: 'An example command',","      vflags: {","        step: 'The number of steps to migrate (default: all)'","      }","    };","","  }","","  run(params, callback) {","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.migrate(params.vflags.step, callback);","","  }","","}","","module.exports = DBMigrateCommand;",""],"l":{"3":1,"9":1,"15":0,"26":0,"27":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/prepare.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/prepare.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":69}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":35}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBPrepareCommand extends Command {","","  constructor() {","","    super('db', 'prepare');","","  }","","  help() {","","    return {","      description: 'Prepares your database for migrations (resets all data)'","    };","","  }","","  run(params, callback) {","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.prepare(callback);","","  }","","}","","module.exports = DBPrepareCommand;",""],"l":{"3":1,"9":1,"15":0,"23":0,"24":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/rollback.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/rollback.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":5},"end":{"line":24,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":28}},"3":{"start":{"line":15,"column":4},"end":{"line":20,"column":6}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":69}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":56}},"6":{"start":{"line":33,"column":0},"end":{"line":33,"column":35}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBRollbackCommand extends Command {","","  constructor() {","","    super('db', 'rollback');","","  }","","  help() {","","    return {","      description: 'Rollback completed migrations',","      vflags: {","        step: 'Number of steps to rollback (default: 1)'","      }","    };","","  }","","  run(params, callback) {","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.rollback(params.vflags.step, callback);","","  }","","}","","module.exports = DBRollbackCommand;",""],"l":{"3":1,"9":1,"15":0,"26":0,"27":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/seed.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/seed.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":24}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":69}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":32}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":32}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBSeedCommand extends Command {","","  constructor() {","","    super('db', 'seed');","","  }","","  help() {","","    return {","      description: `Seeds the database with data in './config/seed.json'`","    };","","  }","","  run(params, callback) {","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.seed(callback);","","  }","","}","","module.exports =  DBSeedCommand;",""],"l":{"3":1,"9":1,"15":0,"23":0,"24":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/db/version.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":69}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":35}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","","class DBVersionCommand extends Command {","","  constructor() {","","    super('db', 'version');","","  }","","  help() {","","    return {","      description: 'Gets the current schema version from the database'","    };","","  }","","  run(params, callback) {","","    const bootstrapper = require('../../../core/my/bootstrapper.js');","    bootstrapper.version(callback);","","  }","","}","","module.exports = DBVersionCommand;",""],"l":{"3":1,"9":1,"15":0,"23":0,"24":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/controller.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/controller.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":14,"8":14,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"generateController","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}}},"2":{"name":"generateRoute","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":72}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":31},"end":{"line":59,"column":46}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":24}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":30},"end":{"line":79,"column":45}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":12},"end":{"line":84,"column":24}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":13},"end":{"line":107,"column":16}}},"8":{"name":"(anonymous_8)","line":113,"loc":{"start":{"line":113,"column":6},"end":{"line":113,"column":9}}},"9":{"name":"(anonymous_9)","line":123,"loc":{"start":{"line":123,"column":5},"end":{"line":123,"column":24}}},"10":{"name":"(anonymous_10)","line":153,"loc":{"start":{"line":153,"column":40},"end":{"line":153,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"6":{"start":{"line":11,"column":0},"end":{"line":14,"column":6}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":11}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":40}},"12":{"start":{"line":20,"column":0},"end":{"line":34,"column":1}},"13":{"start":{"line":22,"column":2},"end":{"line":25,"column":4}},"14":{"start":{"line":27,"column":2},"end":{"line":30,"column":4}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"16":{"start":{"line":36,"column":0},"end":{"line":103,"column":1}},"17":{"start":{"line":38,"column":2},"end":{"line":45,"column":12}},"18":{"start":{"line":47,"column":2},"end":{"line":53,"column":13}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":61}},"20":{"start":{"line":57,"column":2},"end":{"line":57,"column":30}},"21":{"start":{"line":59,"column":2},"end":{"line":66,"column":11}},"22":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"23":{"start":{"line":65,"column":4},"end":{"line":65,"column":25}},"24":{"start":{"line":68,"column":2},"end":{"line":77,"column":3}},"25":{"start":{"line":70,"column":4},"end":{"line":75,"column":6}},"26":{"start":{"line":79,"column":2},"end":{"line":86,"column":11}},"27":{"start":{"line":80,"column":4},"end":{"line":83,"column":5}},"28":{"start":{"line":85,"column":4},"end":{"line":85,"column":25}},"29":{"start":{"line":88,"column":2},"end":{"line":97,"column":3}},"30":{"start":{"line":90,"column":4},"end":{"line":95,"column":6}},"31":{"start":{"line":99,"column":2},"end":{"line":99,"column":57}},"32":{"start":{"line":101,"column":2},"end":{"line":101,"column":65}},"33":{"start":{"line":109,"column":4},"end":{"line":109,"column":29}},"34":{"start":{"line":115,"column":4},"end":{"line":119,"column":6}},"35":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"36":{"start":{"line":126,"column":6},"end":{"line":126,"column":66}},"37":{"start":{"line":129,"column":4},"end":{"line":129,"column":73}},"38":{"start":{"line":130,"column":4},"end":{"line":130,"column":27}},"39":{"start":{"line":132,"column":4},"end":{"line":132,"column":24}},"40":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"41":{"start":{"line":134,"column":49},"end":{"line":134,"column":76}},"42":{"start":{"line":135,"column":6},"end":{"line":135,"column":101}},"43":{"start":{"line":138,"column":4},"end":{"line":147,"column":5}},"44":{"start":{"line":140,"column":6},"end":{"line":143,"column":8}},"45":{"start":{"line":145,"column":6},"end":{"line":145,"column":59}},"46":{"start":{"line":149,"column":4},"end":{"line":149,"column":67}},"47":{"start":{"line":151,"column":4},"end":{"line":151,"column":75}},"48":{"start":{"line":153,"column":4},"end":{"line":155,"column":7}},"49":{"start":{"line":154,"column":6},"end":{"line":154,"column":35}},"50":{"start":{"line":157,"column":4},"end":{"line":157,"column":97}},"51":{"start":{"line":158,"column":4},"end":{"line":158,"column":97}},"52":{"start":{"line":160,"column":4},"end":{"line":160,"column":74}},"53":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"54":{"start":{"line":163,"column":6},"end":{"line":163,"column":62}},"55":{"start":{"line":166,"column":4},"end":{"line":169,"column":5}},"56":{"start":{"line":167,"column":6},"end":{"line":167,"column":23}},"57":{"start":{"line":168,"column":6},"end":{"line":168,"column":41}},"58":{"start":{"line":171,"column":4},"end":{"line":171,"column":83}},"59":{"start":{"line":173,"column":4},"end":{"line":173,"column":60}},"60":{"start":{"line":175,"column":4},"end":{"line":175,"column":75}},"61":{"start":{"line":177,"column":4},"end":{"line":177,"column":19}},"62":{"start":{"line":183,"column":0},"end":{"line":183,"column":43}}},"branchMap":{"1":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"2":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"3":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"4":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":27}},{"start":{"line":125,"column":31},"end":{"line":125,"column":49}}]},"5":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":42},"end":{"line":129,"column":67}},{"start":{"line":129,"column":70},"end":{"line":129,"column":72}}]},"6":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"7":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"8":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"9":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":11},"end":{"line":166,"column":32}},{"start":{"line":166,"column":37},"end":{"line":166,"column":71}},{"start":{"line":166,"column":76},"end":{"line":166,"column":94}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const fs = require('fs');","","const colors = require('colors/safe');","const inflect = require('i')();","","const dot = require('dot');","let templateSettings = Object.keys(dot.templateSettings).reduce((o, k) => {","  o[k] = dot.templateSettings[k];","  return o;","}, {})","templateSettings.strip = false;","templateSettings.varname = 'data';","","let controllerDir = './app/controllers';","","function generateController(controllerName, forModel) {","","  let controller = {","    name: controllerName,","    for: forModel","  };","","  var fn = dot.template(","    fs.readFileSync(__dirname + '/../../templates/controller.jst').toString(),","    templateSettings","  );","","  return fn(controller);","","}","","function generateRoute(controllerName, controllerPath, controllerRoute) {","","  let importStatement = [","    'const ',","      controllerName,","    ' = ',","    'Nodal.require(\\'app/controllers/',","      controllerPath.join('/'),","    '\\');'","  ].join('')","","  let routeStatement = [","    `router.route('/`,","    controllerPath.slice(0, -1).concat([controllerRoute]).join('/'),","    `/\\{id\\}').use(`,","    controllerName,","    ');'","  ].join('');","","  let routes = fs.readFileSync('./app/router.js').toString();","","  routes = routes.split('\\n');","","  let importIndex = routes.map(function(v, i) {","    return {","      spaces: v.indexOf('/* generator: end imports */'),","      index: i","    }","  }).filter(function(v) {","    return v.spaces > -1;","  }).pop();","","  if (importIndex !== undefined) {","","    routes = routes.slice(0, importIndex.index - 1).concat(","      [","        Array(importIndex.spaces + 1).join(' ') + importStatement,","      ],","      routes.slice(importIndex.index - 1)","    );","","  }","","  let routeIndex = routes.map(function(v, i) {","    return {","      spaces: v.indexOf('/* generator: end routes */'),","      index: i","    }","  }).filter(function(v) {","    return v.spaces > -1;","  }).pop();","","  if (routeIndex !== undefined) {","","    routes = routes.slice(0, routeIndex.index - 1).concat(","      [","        Array(routeIndex.spaces + 1).join(' ') + routeStatement,","      ],","      routes.slice(routeIndex.index - 1)","    );","","  }","","  fs.writeFileSync('./app/router.js', routes.join('\\n'));","","  console.log(colors.green.bold('Modify: ') + './app/router.js');","","}","","class GenerateControllerCommand extends Command {","","  constructor() {","","    super('g', 'controller');","","  }","","  help() {","","    return {","      description: 'Creates a new controller, and adds a default route',","      args: ['controller name'],","      vflags: {for: 'The model the controller is for'}","    };","","  }","","  run(params, callback) {","","    if (!params.args.length && !params.vflags.for) {","      return callback(new Error('No controller path specified.'));","    }","","    let controllerPath = params.args[0] ? params.args[0].split('/') : [];","    let cd = controllerDir;","","    let forModel = null;","","    if (Object.keys(params.vflags).filter(key => key.substr(0, 4) === 'for:').length) {","      return callback(new Error('Syntax `--for:ModelName` removed. Use `--for ModelName` instead.'));","    }","","    if (params.vflags.for) {","","      forModel = {","        name: inflect.classify(params.vflags.for[0]),","        path: 'app/models/' + inflect.underscore(inflect.classify(params.vflags.for[0])) + '.js'","      };","","      controllerPath.push(inflect.tableize(forModel.name));","","    }","","    let controllerRoute = inflect.underscore(controllerPath.pop());","","    let controllerName = inflect.classify(controllerRoute + '_controller');","","    controllerPath = controllerPath.map(function(v) {","      return inflect.underscore(v);","    });","","    let fullControllerName = inflect.classify(controllerPath.concat([controllerName]).join('_'));","    let fullControllerPath = controllerPath.concat([inflect.underscore(controllerName) + '.js']);","","    let createPath = [controllerDir].concat(fullControllerPath).join('/');","","    if (fs.existsSync(createPath)) {","      return callback(new Error('Controller already exists'));","    }","","    while (controllerPath.length && (cd += '/' + controllerPath.shift()) && !fs.existsSync(cd)) {","      fs.mkdirSync(cd);","      cd += '/' + controllerPath.shift();","    }","","    fs.writeFileSync(createPath, generateController(fullControllerName, forModel));","","    console.log(colors.green.bold('Create: ') + createPath);","","    generateRoute(fullControllerName, fullControllerPath, controllerRoute);","","    callback(null);","","  }","","}","","module.exports = GenerateControllerCommand;",""],"l":{"3":1,"5":1,"7":1,"8":1,"10":1,"11":1,"12":14,"13":14,"15":1,"16":1,"18":1,"20":1,"22":0,"27":0,"32":0,"36":1,"38":0,"47":0,"55":0,"57":0,"59":0,"60":0,"65":0,"68":0,"70":0,"79":0,"80":0,"85":0,"88":0,"90":0,"99":0,"101":0,"109":1,"115":0,"125":0,"126":0,"129":0,"130":0,"132":0,"134":0,"135":0,"138":0,"140":0,"145":0,"149":0,"151":0,"153":0,"154":0,"157":0,"158":0,"160":0,"162":0,"163":0,"166":0,"167":0,"168":0,"171":0,"173":0,"175":0,"177":0,"183":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/middleware.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/middleware.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":14,"8":14,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"generateMiddleware","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":13},"end":{"line":38,"column":16}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":6},"end":{"line":44,"column":9}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":5},"end":{"line":53,"column":24}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":40},"end":{"line":64,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"6":{"start":{"line":12,"column":0},"end":{"line":15,"column":6}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":11}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}},"12":{"start":{"line":21,"column":0},"end":{"line":34,"column":1}},"13":{"start":{"line":23,"column":2},"end":{"line":25,"column":4}},"14":{"start":{"line":27,"column":2},"end":{"line":30,"column":4}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":29}},"17":{"start":{"line":46,"column":4},"end":{"line":49,"column":6}},"18":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"19":{"start":{"line":56,"column":6},"end":{"line":56,"column":66}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":51}},"21":{"start":{"line":60,"column":4},"end":{"line":60,"column":27}},"22":{"start":{"line":62,"column":4},"end":{"line":62,"column":64}},"23":{"start":{"line":64,"column":4},"end":{"line":66,"column":7}},"24":{"start":{"line":65,"column":6},"end":{"line":65,"column":35}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":132}},"26":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"27":{"start":{"line":71,"column":6},"end":{"line":71,"column":62}},"28":{"start":{"line":74,"column":4},"end":{"line":77,"column":5}},"29":{"start":{"line":75,"column":6},"end":{"line":75,"column":23}},"30":{"start":{"line":76,"column":6},"end":{"line":76,"column":41}},"31":{"start":{"line":79,"column":4},"end":{"line":79,"column":69}},"32":{"start":{"line":81,"column":4},"end":{"line":81,"column":60}},"33":{"start":{"line":83,"column":4},"end":{"line":83,"column":19}},"34":{"start":{"line":89,"column":0},"end":{"line":89,"column":43}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"2":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":32}},{"start":{"line":74,"column":37},"end":{"line":74,"column":71}},{"start":{"line":74,"column":76},"end":{"line":74,"column":94}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const fs = require('fs');","","const colors = require('colors/safe');","const inflect = require('i')();","","const dot = require('dot');","","let templateSettings = Object.keys(dot.templateSettings).reduce((o, k) => {","  o[k] = dot.templateSettings[k];","  return o;","}, {})","templateSettings.strip = false;","templateSettings.varname = 'data';","","let middlewareDir = './middleware';","","function generateMiddleware(middlewareName) {","","  let middleware = {","    name: middlewareName,","  };","","  var fn = dot.template(","    fs.readFileSync(__dirname + '/../../templates/middleware.jst').toString(),","    templateSettings","  );","","  return fn(middleware);","","}","","class GenerateMiddlewareCommand extends Command {","","  constructor() {","","    super('g', 'middleware');","","  }","","  help() {","","    return {","      description: 'Generate new Middleware (runs pre-controller)',","      args: ['middleware name']","    };","","  }","","  run(params, callback) {","","    if (!params.args.length) {","      return callback(new Error('No middleware path specified.'));","    }","","    let middlewarePath = params.args[0].split('/');","    let cd = middlewareDir;","","    let middlewareName = inflect.classify(middlewarePath.pop());","","    middlewarePath = middlewarePath.map(function(v) {","      return inflect.underscore(v);","    });","","    let createPath = [middlewareDir].concat(middlewarePath).join('/') + '/' + inflect.underscore(middlewareName) + '_middleware.js';","","    if (fs.existsSync(createPath)) {","      return callback(new Error('middleware already exists'));","    }","","    while (middlewarePath.length && (cd += '/' + middlewarePath.shift()) && !fs.existsSync(cd)) {","      fs.mkdirSync(cd);","      cd += '/' + middlewarePath.shift();","    }","","    fs.writeFileSync(createPath, generateMiddleware(middlewareName));","","    console.log(colors.green.bold('Create: ') + createPath);","","    callback(null);","","  }","","}","","module.exports = GenerateMiddlewareCommand;",""],"l":{"3":1,"5":1,"7":1,"8":1,"10":1,"12":1,"13":14,"14":14,"16":1,"17":1,"19":1,"21":1,"23":0,"27":0,"32":0,"40":1,"46":0,"55":0,"56":0,"59":0,"60":0,"62":0,"64":0,"65":0,"68":0,"70":0,"71":0,"74":0,"75":0,"76":0,"79":0,"81":0,"83":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/migration.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/migration.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":14,"9":14,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":2,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":0,"12":0},"fnMap":{"1":{"name":"composeMigration","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":9},"end":{"line":26,"column":37}}},"3":{"name":"generateId","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":26}}},"4":{"name":"padZero","line":46,"loc":{"start":{"line":46,"column":2},"end":{"line":46,"column":25}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":8},"end":{"line":61,"column":20}}},"6":{"name":"generateMigration","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":56}}},"7":{"name":"convertArgListToPropertyList","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":47}}},"8":{"name":"(anonymous_8)","line":92,"loc":{"start":{"line":92,"column":30},"end":{"line":92,"column":42}}},"9":{"name":"generateModelSchemaObject","line":118,"loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":60}}},"10":{"name":"(anonymous_10)","line":129,"loc":{"start":{"line":129,"column":13},"end":{"line":129,"column":16}}},"11":{"name":"(anonymous_11)","line":135,"loc":{"start":{"line":135,"column":6},"end":{"line":135,"column":9}}},"12":{"name":"(anonymous_12)","line":147,"loc":{"start":{"line":147,"column":5},"end":{"line":147,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":61}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"7":{"start":{"line":12,"column":0},"end":{"line":15,"column":6}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":11}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"13":{"start":{"line":21,"column":0},"end":{"line":42,"column":1}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":17}},"15":{"start":{"line":24,"column":2},"end":{"line":24,"column":20}},"16":{"start":{"line":26,"column":2},"end":{"line":40,"column":4}},"17":{"start":{"line":28,"column":4},"end":{"line":33,"column":6}},"18":{"start":{"line":35,"column":4},"end":{"line":38,"column":17}},"19":{"start":{"line":44,"column":0},"end":{"line":65,"column":1}},"20":{"start":{"line":46,"column":2},"end":{"line":51,"column":3}},"21":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":62}},"23":{"start":{"line":53,"column":2},"end":{"line":63,"column":15}},"24":{"start":{"line":62,"column":4},"end":{"line":62,"column":34}},"25":{"start":{"line":67,"column":0},"end":{"line":84,"column":1}},"26":{"start":{"line":69,"column":2},"end":{"line":69,"column":36}},"27":{"start":{"line":70,"column":2},"end":{"line":70,"column":80}},"28":{"start":{"line":72,"column":2},"end":{"line":72,"column":61}},"29":{"start":{"line":74,"column":2},"end":{"line":74,"column":61}},"30":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"31":{"start":{"line":77,"column":4},"end":{"line":77,"column":48}},"32":{"start":{"line":80,"column":2},"end":{"line":80,"column":81}},"33":{"start":{"line":82,"column":2},"end":{"line":82,"column":61}},"34":{"start":{"line":86,"column":0},"end":{"line":116,"column":1}},"35":{"start":{"line":89,"column":2},"end":{"line":89,"column":26}},"36":{"start":{"line":90,"column":2},"end":{"line":90,"column":96}},"37":{"start":{"line":92,"column":2},"end":{"line":114,"column":5}},"38":{"start":{"line":94,"column":4},"end":{"line":94,"column":21}},"39":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"40":{"start":{"line":97,"column":6},"end":{"line":97,"column":116}},"41":{"start":{"line":100,"column":4},"end":{"line":100,"column":73}},"42":{"start":{"line":101,"column":4},"end":{"line":101,"column":26}},"43":{"start":{"line":102,"column":4},"end":{"line":102,"column":24}},"44":{"start":{"line":104,"column":4},"end":{"line":108,"column":7}},"45":{"start":{"line":105,"column":6},"end":{"line":107,"column":7}},"46":{"start":{"line":106,"column":8},"end":{"line":106,"column":29}},"47":{"start":{"line":110,"column":4},"end":{"line":110,"column":68}},"48":{"start":{"line":112,"column":4},"end":{"line":112,"column":15}},"49":{"start":{"line":118,"column":0},"end":{"line":125,"column":1}},"50":{"start":{"line":120,"column":2},"end":{"line":123,"column":4}},"51":{"start":{"line":131,"column":4},"end":{"line":131,"column":28}},"52":{"start":{"line":137,"column":4},"end":{"line":143,"column":6}},"53":{"start":{"line":149,"column":4},"end":{"line":149,"column":57}},"54":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"55":{"start":{"line":152,"column":6},"end":{"line":152,"column":54}},"56":{"start":{"line":155,"column":4},"end":{"line":155,"column":16}},"57":{"start":{"line":156,"column":4},"end":{"line":156,"column":18}},"58":{"start":{"line":158,"column":4},"end":{"line":166,"column":5}},"59":{"start":{"line":160,"column":6},"end":{"line":160,"column":38}},"60":{"start":{"line":161,"column":6},"end":{"line":161,"column":102}},"61":{"start":{"line":163,"column":6},"end":{"line":163,"column":112}},"62":{"start":{"line":164,"column":6},"end":{"line":164,"column":66}},"63":{"start":{"line":168,"column":4},"end":{"line":178,"column":5}},"64":{"start":{"line":170,"column":6},"end":{"line":170,"column":39}},"65":{"start":{"line":172,"column":6},"end":{"line":176,"column":9}},"66":{"start":{"line":173,"column":8},"end":{"line":173,"column":33}},"67":{"start":{"line":174,"column":8},"end":{"line":174,"column":76}},"68":{"start":{"line":175,"column":8},"end":{"line":175,"column":67}},"69":{"start":{"line":180,"column":4},"end":{"line":180,"column":47}},"70":{"start":{"line":182,"column":4},"end":{"line":182,"column":19}},"71":{"start":{"line":188,"column":0},"end":{"line":188,"column":42}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":10}},{"start":{"line":23,"column":14},"end":{"line":23,"column":16}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":9},"end":{"line":24,"column":13}},{"start":{"line":24,"column":17},"end":{"line":24,"column":19}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":22}},{"start":{"line":32,"column":26},"end":{"line":32,"column":27}}]},"4":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":7},"end":{"line":69,"column":9}},{"start":{"line":69,"column":13},"end":{"line":69,"column":35}}]},"5":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":30}},{"start":{"line":72,"column":34},"end":{"line":72,"column":60}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"7":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":56},"end":{"line":90,"column":76}},{"start":{"line":90,"column":80},"end":{"line":90,"column":93}}]},"8":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"9":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]},"10":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":34}},{"start":{"line":110,"column":39},"end":{"line":110,"column":66}}]},"11":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"12":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"13":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const Database = require('../../../core/module.js').Database;","","const fs = require('fs');","const inflect = require('i')();","const colors = require('colors/safe');","const dot = require('dot');","","let templateSettings = Object.keys(dot.templateSettings).reduce((o, k) => {","  o[k] = dot.templateSettings[k];","  return o;","}, {})","templateSettings.strip = false;","templateSettings.varname = 'data';","","let migrationDir = './db/migrations';","","function composeMigration(up, down) {","","  up =  up || [];","  down = down || [];","","  return function(migrationName, id) {","","    let migration = {","      up: up,","      down: down,","      name: migrationName,","      id: parseInt(id) || 0","    };","","    return dot.template(","      fs.readFileSync(__dirname + '/../../templates/migration.jst').toString(),","      templateSettings","    )(migration);","","  };","","}","","function generateId(date) {","","  function padZero(n, l) {","","    n = n.toString();","    return Array(1 + Math.max(0, l - n.length)).join('0') + n;","","  }","","  return parseInt([","    [date.getUTCFullYear(), 4],","    [date.getUTCMonth() + 1, 2],","    [date.getUTCDate(), 2],","    [date.getUTCHours(), 2],","    [date.getUTCMinutes(), 2],","    [date.getUTCSeconds(), 2],","    [(date.getUTCMilliseconds() / 10) | 0, 2]","  ].map(function(v) {","    return padZero.apply(null, v);","  }).join(''));","","}","","function generateMigration(migrationName, up, down, id) {","","  id = id || generateId(new Date());","  let migrationFileName = id + '__' + inflect.underscore(migrationName) + '.js';","","  !fs.existsSync(migrationDir) && fs.mkdirSync(migrationDir);","","  let migrationPath = migrationDir + '/' + migrationFileName;","","  if (fs.existsSync(migrationPath)) {","    throw new Error('Migration already exists');","  }","","  fs.writeFileSync(migrationPath, composeMigration(up, down)(migrationName, id));","","  console.log(colors.green.bold('Create: ') + migrationPath);","","}","","function convertArgListToPropertyList(argList) {","","  // Instantiate Database so we can get access to the Adapater types","  let db = new Database();","  db.connect(require(`${process.cwd()}/config/db.json`)[process.env.NODE_ENV || 'development']);","","  return argList.slice(1).map(function(v) {","","    v = v.split(':');","","    if (Object.keys(db.adapter.types).indexOf(v[1].toLowerCase()) == -1) {","      throw new Error(`Un-supported column type ${colors.yellow.bold(v[1])} for field ${colors.yellow.bold(v[0])}`);","    }","","    let obj = {name: inflect.underscore(v[0]), type: v[1].toLowerCase()};","    let rest = v.slice(2);","    let properties = {};","","    ['array', 'unique'].forEach(v => {","      if (rest.indexOf(v) !== -1) {","        properties[v] = true;","      }","    });","","    Object.keys(properties).length && (obj.properties = properties);","","    return obj;","","  });","","}","","function generateModelSchemaObject(modelName, propertyList) {","","  return {","    table: inflect.tableize(modelName),","    columns: propertyList","  };","","}","","class GenerateMigrationCommand extends Command {","","  constructor() {","","    super('g', 'migration');","","  }","","  help() {","","    return {","      description: 'Generate a new, empty migration. Optionally to add / remove columns.',","      args: ['migration name'],","      vflags: {","        add: '[table] [field_1:type_1] [...] [field_n:type_n]'","      }","    };","","  }","","  run(params, callback) {","","    let migrationName = inflect.camelize(params.args[0]);","","    if (!migrationName) {","      throw new Error('Migration name not specified');","    }","","    let up = [];","    let down = [];","","    if (params.vflags.for) {","","      let forArgs = params.vflags.for;","      let schemaObject = generateModelSchemaObject(forArgs[0], convertArgListToPropertyList(forArgs));","","      up.push('this.createTable(\\\"' + schemaObject.table + '\\\", ' + JSON.stringify(schemaObject.columns) + ')');","      down.push('this.dropTable(\\\"' + schemaObject.table + '\\\")');","","    }","","    if (params.vflags.add) {","","      let table = params.vflags.add[0];","","      params.vflags.add.slice(1).forEach(field => {","        field = field.split(':');","        up.push(`this.addColumn('${table}', '${field[0]}', '${field[1]}')`);","        down.unshift(`this.dropColumn('${table}', '${field[0]}')`);","      });","","    }","","    generateMigration(migrationName, up, down);","","    callback(null);","","  }","","}","","module.exports = GenerateMigrationCommand;",""],"l":{"3":1,"5":1,"7":1,"8":1,"9":1,"10":1,"12":1,"13":14,"14":14,"16":1,"17":1,"19":1,"21":1,"23":0,"24":0,"26":0,"28":0,"35":0,"44":1,"46":1,"48":0,"49":0,"53":0,"62":0,"67":1,"69":0,"70":0,"72":0,"74":0,"76":0,"77":0,"80":0,"82":0,"86":1,"89":0,"90":0,"92":0,"94":0,"96":0,"97":0,"100":0,"101":0,"102":0,"104":0,"105":0,"106":0,"110":0,"112":0,"118":1,"120":0,"131":2,"137":0,"149":0,"151":0,"152":0,"155":0,"156":0,"158":0,"160":0,"161":0,"163":0,"164":0,"168":0,"170":0,"172":0,"173":0,"174":0,"175":0,"180":0,"182":0,"188":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":14,"11":14,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"generateModelDefinition","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":53}}},"2":{"name":"generateUserDefinition","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}}},"3":{"name":"generateAccessTokenDefinition","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":41}}},"4":{"name":"convertArgListToPropertyList","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":47}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":30},"end":{"line":57,"column":42}}},"6":{"name":"generateModelSchemaObject","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":60}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":13},"end":{"line":99,"column":16}}},"8":{"name":"(anonymous_8)","line":105,"loc":{"start":{"line":105,"column":6},"end":{"line":105,"column":9}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":5},"end":{"line":118,"column":24}}},"10":{"name":"(anonymous_10)","line":192,"loc":{"start":{"line":192,"column":25},"end":{"line":192,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":57}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":61}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"9":{"start":{"line":14,"column":0},"end":{"line":17,"column":6}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":33}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":11}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"13":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"14":{"start":{"line":21,"column":0},"end":{"line":21,"column":30}},"15":{"start":{"line":23,"column":0},"end":{"line":35,"column":1}},"16":{"start":{"line":25,"column":2},"end":{"line":28,"column":4}},"17":{"start":{"line":30,"column":2},"end":{"line":33,"column":11}},"18":{"start":{"line":37,"column":0},"end":{"line":42,"column":1}},"19":{"start":{"line":38,"column":2},"end":{"line":41,"column":6}},"20":{"start":{"line":44,"column":0},"end":{"line":49,"column":1}},"21":{"start":{"line":45,"column":2},"end":{"line":48,"column":6}},"22":{"start":{"line":51,"column":0},"end":{"line":81,"column":1}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":26}},"24":{"start":{"line":55,"column":2},"end":{"line":55,"column":96}},"25":{"start":{"line":57,"column":2},"end":{"line":79,"column":5}},"26":{"start":{"line":59,"column":4},"end":{"line":59,"column":21}},"27":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"28":{"start":{"line":62,"column":6},"end":{"line":62,"column":116}},"29":{"start":{"line":65,"column":4},"end":{"line":65,"column":73}},"30":{"start":{"line":66,"column":4},"end":{"line":66,"column":26}},"31":{"start":{"line":67,"column":4},"end":{"line":67,"column":24}},"32":{"start":{"line":69,"column":4},"end":{"line":73,"column":7}},"33":{"start":{"line":70,"column":6},"end":{"line":72,"column":7}},"34":{"start":{"line":71,"column":8},"end":{"line":71,"column":29}},"35":{"start":{"line":75,"column":4},"end":{"line":75,"column":68}},"36":{"start":{"line":77,"column":4},"end":{"line":77,"column":15}},"37":{"start":{"line":83,"column":0},"end":{"line":95,"column":1}},"38":{"start":{"line":85,"column":2},"end":{"line":85,"column":46}},"39":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"40":{"start":{"line":86,"column":31},"end":{"line":86,"column":51}},"41":{"start":{"line":87,"column":4},"end":{"line":87,"column":104}},"42":{"start":{"line":90,"column":2},"end":{"line":93,"column":4}},"43":{"start":{"line":101,"column":4},"end":{"line":101,"column":24}},"44":{"start":{"line":107,"column":4},"end":{"line":114,"column":6}},"45":{"start":{"line":120,"column":4},"end":{"line":136,"column":5}},"46":{"start":{"line":121,"column":6},"end":{"line":126,"column":8}},"47":{"start":{"line":127,"column":11},"end":{"line":136,"column":5}},"48":{"start":{"line":128,"column":6},"end":{"line":135,"column":8}},"49":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"50":{"start":{"line":139,"column":6},"end":{"line":139,"column":61}},"51":{"start":{"line":142,"column":4},"end":{"line":142,"column":53}},"52":{"start":{"line":143,"column":4},"end":{"line":143,"column":21}},"53":{"start":{"line":145,"column":4},"end":{"line":149,"column":5}},"54":{"start":{"line":146,"column":6},"end":{"line":146,"column":101}},"55":{"start":{"line":148,"column":6},"end":{"line":148,"column":25}},"56":{"start":{"line":151,"column":4},"end":{"line":151,"column":55}},"57":{"start":{"line":153,"column":4},"end":{"line":153,"column":76}},"58":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"59":{"start":{"line":156,"column":6},"end":{"line":156,"column":57}},"60":{"start":{"line":159,"column":4},"end":{"line":170,"column":5}},"61":{"start":{"line":161,"column":6},"end":{"line":161,"column":61}},"62":{"start":{"line":163,"column":11},"end":{"line":170,"column":5}},"63":{"start":{"line":165,"column":6},"end":{"line":165,"column":68}},"64":{"start":{"line":169,"column":6},"end":{"line":169,"column":71}},"65":{"start":{"line":172,"column":4},"end":{"line":172,"column":60}},"66":{"start":{"line":174,"column":4},"end":{"line":205,"column":7}},"67":{"start":{"line":180,"column":6},"end":{"line":182,"column":7}},"68":{"start":{"line":181,"column":8},"end":{"line":181,"column":29}},"69":{"start":{"line":184,"column":6},"end":{"line":201,"column":7}},"70":{"start":{"line":186,"column":8},"end":{"line":186,"column":75}},"71":{"start":{"line":187,"column":8},"end":{"line":187,"column":24}},"72":{"start":{"line":189,"column":8},"end":{"line":189,"column":49}},"73":{"start":{"line":190,"column":8},"end":{"line":190,"column":109}},"74":{"start":{"line":192,"column":8},"end":{"line":197,"column":11}},"75":{"start":{"line":194,"column":10},"end":{"line":194,"column":32}},"76":{"start":{"line":195,"column":10},"end":{"line":195,"column":25}},"77":{"start":{"line":199,"column":8},"end":{"line":199,"column":15}},"78":{"start":{"line":203,"column":6},"end":{"line":203,"column":21}},"79":{"start":{"line":211,"column":0},"end":{"line":211,"column":38}}},"branchMap":{"1":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":56},"end":{"line":55,"column":76}},{"start":{"line":55,"column":80},"end":{"line":55,"column":93}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"4":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":34}},{"start":{"line":75,"column":39},"end":{"line":75,"column":66}}]},"5":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"6":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"7":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":11},"end":{"line":127,"column":11}},{"start":{"line":127,"column":11},"end":{"line":127,"column":11}}]},"8":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"9":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":28}},{"start":{"line":151,"column":32},"end":{"line":151,"column":54}}]},"10":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"11":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"12":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":11},"end":{"line":163,"column":11}},{"start":{"line":163,"column":11},"end":{"line":163,"column":11}}]},"13":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":6}},{"start":{"line":180,"column":6},"end":{"line":180,"column":6}}]},"14":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"15":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":15}},{"start":{"line":194,"column":19},"end":{"line":194,"column":31}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const GenerateMigrationCommand = require('./migration.js');","const generateMigration = new GenerateMigrationCommand();","","const fs = require('fs');","const Database = require('../../../core/module.js').Database;","","const colors = require('colors/safe');","const inflect = require('i')();","","const dot = require('dot');","let templateSettings = Object.keys(dot.templateSettings).reduce((o, k) => {","  o[k] = dot.templateSettings[k];","  return o;","}, {})","templateSettings.strip = false;","templateSettings.varname = 'data';","","let modelDir = './app/models';","","function generateModelDefinition(modelName, columns) {","","  let model = {","    name: modelName,","    columns: columns","  };","","  return dot.template(","    fs.readFileSync(__dirname + '/../../templates/model.jst').toString(),","    templateSettings","  )(model);","","}","","function generateUserDefinition() {","  return dot.template(","    fs.readFileSync(__dirname + '/../../templates/models/user.jst').toString(),","    templateSettings","  )();","};","","function generateAccessTokenDefinition() {","  return dot.template(","    fs.readFileSync(__dirname + '/../../templates/models/access_token.jst').toString(),","    templateSettings","  )();","};","","function convertArgListToPropertyList(argList) {","","  // Instantiate Database so we can get access to the Adapater types","  let db = new Database();","  db.connect(require(`${process.cwd()}/config/db.json`)[process.env.NODE_ENV || 'development']);","","  return argList.slice(1).map(function(v) {","","    v = v.split(':');","","    if (Object.keys(db.adapter.types).indexOf(v[1].toLowerCase()) == -1) {","      throw new Error(`Un-supported column type ${colors.yellow.bold(v[1])} for field ${colors.yellow.bold(v[0])}`);","    }","","    let obj = {name: inflect.underscore(v[0]), type: v[1].toLowerCase()};","    let rest = v.slice(2);","    let properties = {};","","    ['array', 'unique'].forEach(v => {","      if (rest.indexOf(v) !== -1) {","        properties[v] = true;","      }","    });","","    Object.keys(properties).length && (obj.properties = properties);","","    return obj;","","  });","","}","","function generateModelSchemaObject(modelName, propertyList) {","","  let tableName = inflect.tableize(modelName);","  if (propertyList.filter(c => c.name === tableName).length) {","    throw new Error(`Can not create a table with an identical field name. (${tableName}.${tableName})`);","  }","","  return {","    table: inflect.tableize(modelName),","    columns: propertyList","  };","","}","","class GenerateModelCommand extends Command {","","  constructor() {","","    super('g', 'model');","","  }","","  help() {","","    return {","      description: 'Generate a new model and associated migration',","      args: ['ModelName', 'field_1:type_1', '...', 'field_n:type_n'],","      vflags: {","        user: 'Use a prebuilt User model',","        access_token: 'Use a prebuilt AccessToken model'","      }","    };","","  }","","  run(params, callback) {","","    if (params.vflags.hasOwnProperty('user')) {","      params.args = [","        'User',","        'email:string:unique',","        'password:string',","        'username:string'","      ];","    } else if (params.vflags.hasOwnProperty('access_token')) {","      params.args = [","        'AccessToken',","        'user_id:int',","        'access_token:string',","        'token_type:string',","        'expires_at:datetime',","        'ip_address:string'","      ];","    }","","    if (!params.args.length) {","      return callback(new Error('No model name specified.'));","    }","","    let modelName = inflect.classify(params.args[0]);","    let schemaObject;","","    try {","      schemaObject = generateModelSchemaObject(modelName, convertArgListToPropertyList(params.args));","    } catch(e) {","      return callback(e);","    }","","    !fs.existsSync(modelDir) && fs.mkdirSync(modelDir);","","    let createPath = modelDir + '/' + inflect.underscore(modelName) + '.js';","","    if (fs.existsSync(createPath)) {","      return callback(new Error('Model already exists'));","    }","","    if (params.vflags.hasOwnProperty('user')) {","","      fs.writeFileSync(createPath, generateUserDefinition());","","    } else if (params.vflags.hasOwnProperty('access_token')) {","","      fs.writeFileSync(createPath, generateAccessTokenDefinition());","","    } else {","","      fs.writeFileSync(createPath, generateModelDefinition(modelName));","    }","","    console.log(colors.green.bold('Create: ') + createPath);","","    generateMigration.run({","      args: [`create_${schemaObject.table}`],","      flags: [],","      vflags: {for: params.args}","    }, (err, result) => {","","      if (err) {","        return callback(err);","      }","","      if (params.vflags.hasOwnProperty('user')) {","","        console.log('Installing additional packages in this directory...');","        console.log('');","","        let spawn = require('cross-spawn-async');","        let child = spawn('npm',  ['install', 'bcryptjs', '--save'], {cwd: process.cwd(), stdio: 'inherit'});","","        child.on('exit', function() {","","          child && child.kill();","          callback(null);","","        });","","        return;","","      }","","      callback(null);","","    });","","  }","","}","","module.exports = GenerateModelCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"10":1,"11":1,"13":1,"14":1,"15":14,"16":14,"18":1,"19":1,"21":1,"23":1,"25":0,"30":0,"37":1,"38":0,"44":1,"45":0,"51":1,"54":0,"55":0,"57":0,"59":0,"61":0,"62":0,"65":0,"66":0,"67":0,"69":0,"70":0,"71":0,"75":0,"77":0,"83":1,"85":0,"86":0,"87":0,"90":0,"101":1,"107":0,"120":0,"121":0,"127":0,"128":0,"138":0,"139":0,"142":0,"143":0,"145":0,"146":0,"148":0,"151":0,"153":0,"155":0,"156":0,"159":0,"161":0,"163":0,"165":0,"169":0,"172":0,"174":0,"180":0,"181":0,"184":0,"186":0,"187":0,"189":0,"190":0,"192":0,"194":0,"195":0,"199":0,"203":0,"211":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/renderware.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/renderware.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":14,"8":14,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"generateRenderware","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":13},"end":{"line":38,"column":16}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":6},"end":{"line":44,"column":9}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":5},"end":{"line":53,"column":24}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":40},"end":{"line":64,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"6":{"start":{"line":12,"column":0},"end":{"line":15,"column":6}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":11}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}},"12":{"start":{"line":21,"column":0},"end":{"line":34,"column":1}},"13":{"start":{"line":23,"column":2},"end":{"line":25,"column":4}},"14":{"start":{"line":27,"column":2},"end":{"line":30,"column":4}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":29}},"17":{"start":{"line":46,"column":4},"end":{"line":49,"column":6}},"18":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"19":{"start":{"line":56,"column":6},"end":{"line":56,"column":66}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":51}},"21":{"start":{"line":60,"column":4},"end":{"line":60,"column":27}},"22":{"start":{"line":62,"column":4},"end":{"line":62,"column":64}},"23":{"start":{"line":64,"column":4},"end":{"line":66,"column":7}},"24":{"start":{"line":65,"column":6},"end":{"line":65,"column":35}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":132}},"26":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"27":{"start":{"line":71,"column":6},"end":{"line":71,"column":62}},"28":{"start":{"line":74,"column":4},"end":{"line":77,"column":5}},"29":{"start":{"line":75,"column":6},"end":{"line":75,"column":23}},"30":{"start":{"line":76,"column":6},"end":{"line":76,"column":41}},"31":{"start":{"line":79,"column":4},"end":{"line":79,"column":69}},"32":{"start":{"line":81,"column":4},"end":{"line":81,"column":60}},"33":{"start":{"line":83,"column":4},"end":{"line":83,"column":19}},"34":{"start":{"line":89,"column":0},"end":{"line":89,"column":43}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"2":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":32}},{"start":{"line":74,"column":37},"end":{"line":74,"column":71}},{"start":{"line":74,"column":76},"end":{"line":74,"column":94}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const fs = require('fs');","","const colors = require('colors/safe');","const inflect = require('i')();","","const dot = require('dot');","","let templateSettings = Object.keys(dot.templateSettings).reduce((o, k) => {","  o[k] = dot.templateSettings[k];","  return o;","}, {})","templateSettings.strip = false;","templateSettings.varname = 'data';","","let renderwareDir = './renderware';","","function generateRenderware(renderwareName) {","","  let renderware = {","    name: renderwareName,","  };","","  var fn = dot.template(","    fs.readFileSync(__dirname + '/../../templates/renderware.jst').toString(),","    templateSettings","  );","","  return fn(renderware);","","}","","class GenerateRenderwareCommand extends Command {","","  constructor() {","","    super('g', 'renderware');","","  }","","  help() {","","    return {","      description: 'Generate new Renderware (runs post-controller)',","      args: ['renderware name']","    };","","  }","","  run(params, callback) {","","    if (!params.args.length) {","      return callback(new Error('No renderware path specified.'));","    }","","    let renderwarePath = params.args[0].split('/');","    let cd = renderwareDir;","","    let renderwareName = inflect.classify(renderwarePath.pop());","","    renderwarePath = renderwarePath.map(function(v) {","      return inflect.underscore(v);","    });","","    let createPath = [renderwareDir].concat(renderwarePath).join('/') + '/' + inflect.underscore(renderwareName) + '_renderware.js';","","    if (fs.existsSync(createPath)) {","      return callback(new Error('renderware already exists'));","    }","","    while (renderwarePath.length && (cd += '/' + renderwarePath.shift()) && !fs.existsSync(cd)) {","      fs.mkdirSync(cd);","      cd += '/' + renderwarePath.shift();","    }","","    fs.writeFileSync(createPath, generateRenderware(renderwareName));","","    console.log(colors.green.bold('Create: ') + createPath);","","    callback(null);","","  }","","}","","module.exports = GenerateRenderwareCommand;",""],"l":{"3":1,"5":1,"7":1,"8":1,"10":1,"12":1,"13":14,"14":14,"16":1,"17":1,"19":1,"21":1,"23":0,"27":0,"32":0,"40":1,"46":0,"55":0,"56":0,"59":0,"60":0,"62":0,"64":0,"65":0,"68":0,"70":0,"71":0,"74":0,"75":0,"76":0,"79":0,"81":0,"83":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/task.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/task.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":14,"8":14,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"generateTask","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":13},"end":{"line":38,"column":16}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":6},"end":{"line":44,"column":9}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":5},"end":{"line":53,"column":24}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":28},"end":{"line":64,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"6":{"start":{"line":12,"column":0},"end":{"line":15,"column":6}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":11}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}},"12":{"start":{"line":21,"column":0},"end":{"line":34,"column":1}},"13":{"start":{"line":23,"column":2},"end":{"line":25,"column":4}},"14":{"start":{"line":27,"column":2},"end":{"line":30,"column":4}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":23}},"17":{"start":{"line":46,"column":4},"end":{"line":49,"column":6}},"18":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"19":{"start":{"line":56,"column":6},"end":{"line":56,"column":60}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":45}},"21":{"start":{"line":60,"column":4},"end":{"line":60,"column":21}},"22":{"start":{"line":62,"column":4},"end":{"line":62,"column":52}},"23":{"start":{"line":64,"column":4},"end":{"line":66,"column":7}},"24":{"start":{"line":65,"column":6},"end":{"line":65,"column":35}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":103}},"26":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"27":{"start":{"line":71,"column":6},"end":{"line":71,"column":56}},"28":{"start":{"line":74,"column":4},"end":{"line":77,"column":5}},"29":{"start":{"line":75,"column":6},"end":{"line":75,"column":23}},"30":{"start":{"line":76,"column":6},"end":{"line":76,"column":35}},"31":{"start":{"line":79,"column":4},"end":{"line":79,"column":57}},"32":{"start":{"line":81,"column":4},"end":{"line":81,"column":60}},"33":{"start":{"line":83,"column":4},"end":{"line":83,"column":19}},"34":{"start":{"line":89,"column":0},"end":{"line":89,"column":37}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"2":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":26}},{"start":{"line":74,"column":31},"end":{"line":74,"column":59}},{"start":{"line":74,"column":64},"end":{"line":74,"column":82}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const fs = require('fs');","","const colors = require('colors/safe');","const inflect = require('i')();","","const dot = require('dot');","","let templateSettings = Object.keys(dot.templateSettings).reduce((o, k) => {","  o[k] = dot.templateSettings[k];","  return o;","}, {})","templateSettings.strip = false;","templateSettings.varname = 'data';","","let taskDir = './tasks';","","function generateTask(taskName) {","","  let task = {","    name: taskName,","  };","","  var fn = dot.template(","    fs.readFileSync(__dirname + '/../../templates/task.jst').toString(),","    templateSettings","  );","","  return fn(task);","","}","","class GenerateTaskCommand extends Command {","","  constructor() {","","    super('g', 'task');","","  }","","  help() {","","    return {","      description: 'Generates a new task',","      args: ['task name']","    };","","  }","","  run(params, callback) {","","    if (!params.args.length) {","      return callback(new Error('No task path specified.'));","    }","","    let taskPath = params.args[0].split('/');","    let cd = taskPath","","    let taskName = inflect.classify(taskPath.pop());","","    taskPath = taskPath.map(function(v) {","      return inflect.underscore(v);","    });","","    let createPath = [taskDir].concat(taskPath).join('/') + '/' + inflect.underscore(taskName) + '.js';","","    if (fs.existsSync(createPath)) {","      return callback(new Error('task already exists'));","    }","","    while (taskPath.length && (cd += '/' + taskPath.shift()) && !fs.existsSync(cd)) {","      fs.mkdirSync(cd);","      cd += '/' + taskPath.shift();","    }","","    fs.writeFileSync(createPath, generateTask(taskName));","","    console.log(colors.green.bold('Create: ') + createPath);","","    callback(null);","","  }","","}","","module.exports = GenerateTaskCommand;",""],"l":{"3":1,"5":1,"7":1,"8":1,"10":1,"12":1,"13":14,"14":14,"16":1,"17":1,"19":1,"21":1,"23":0,"27":0,"32":0,"40":1,"46":0,"55":0,"56":0,"59":0,"60":0,"62":0,"64":0,"65":0,"68":0,"70":0,"71":0,"74":0,"75":0,"76":0,"79":0,"81":0,"83":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/g/test.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":14,"8":14,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"generateTest","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":13},"end":{"line":36,"column":16}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":6},"end":{"line":42,"column":9}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":5},"end":{"line":51,"column":24}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":28},"end":{"line":62,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"6":{"start":{"line":10,"column":0},"end":{"line":13,"column":6}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":33}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":11}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"12":{"start":{"line":19,"column":0},"end":{"line":32,"column":1}},"13":{"start":{"line":21,"column":2},"end":{"line":23,"column":4}},"14":{"start":{"line":25,"column":2},"end":{"line":28,"column":4}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"17":{"start":{"line":44,"column":4},"end":{"line":47,"column":6}},"18":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"19":{"start":{"line":54,"column":6},"end":{"line":54,"column":60}},"20":{"start":{"line":57,"column":4},"end":{"line":57,"column":45}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":22}},"22":{"start":{"line":60,"column":4},"end":{"line":60,"column":61}},"23":{"start":{"line":62,"column":4},"end":{"line":64,"column":7}},"24":{"start":{"line":63,"column":6},"end":{"line":63,"column":35}},"25":{"start":{"line":66,"column":4},"end":{"line":66,"column":103}},"26":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"27":{"start":{"line":69,"column":6},"end":{"line":69,"column":49}},"28":{"start":{"line":72,"column":4},"end":{"line":75,"column":5}},"29":{"start":{"line":73,"column":6},"end":{"line":73,"column":23}},"30":{"start":{"line":74,"column":6},"end":{"line":74,"column":35}},"31":{"start":{"line":77,"column":4},"end":{"line":77,"column":57}},"32":{"start":{"line":79,"column":4},"end":{"line":79,"column":60}},"33":{"start":{"line":81,"column":4},"end":{"line":81,"column":19}},"34":{"start":{"line":87,"column":0},"end":{"line":87,"column":37}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"2":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"3":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":11},"end":{"line":72,"column":26}},{"start":{"line":72,"column":31},"end":{"line":72,"column":59}},{"start":{"line":72,"column":64},"end":{"line":72,"column":82}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const fs = require('fs');","const colors = require('colors/safe');","const inflect = require('i')();","const dot = require('dot');","","let templateSettings = Object.keys(dot.templateSettings).reduce((o, k) => {","  o[k] = dot.templateSettings[k];","  return o;","}, {})","templateSettings.strip = false;","templateSettings.varname = 'data';","","let testDir = './test/tests';","","function generateTest(testName) {","","  let test = {","    name: testName,","  };","","  var fn = dot.template(","    fs.readFileSync(__dirname + '/../../templates/test.jst').toString(),","    templateSettings","  );","","  return fn(test);","","}","","class GenerateTestCommand extends Command {","","  constructor() {","","    super('g', 'test');","","  }","","  help() {","","    return {","      description: 'Generates a new test',","      args: ['test']","    };","","  }","","  run(params, callback) {","","    if (!params.args.length) {","      return callback(new Error('No test path specified.'));","    }","","    let testPath = params.args[0].split('/');","    let cd = testPath;","","    let testName = inflect.classify(testPath.pop()) + 'Test';","","    testPath = testPath.map(function(v) {","      return inflect.underscore(v);","    });","","    let createPath = [testDir].concat(testPath).join('/') + '/' + inflect.underscore(testName) + '.js';","","    if (fs.existsSync(createPath)) {","      callback(new Error('test already exists'));","    }","","    while (testPath.length && (cd += '/' + testPath.shift()) && !fs.existsSync(cd)) {","      fs.mkdirSync(cd);","      cd += '/' + testPath.shift();","    }","","    fs.writeFileSync(createPath, generateTest(testName));","","    console.log(colors.green.bold('Create: ') + createPath);","","    callback(null);","","  }","","}","","module.exports = GenerateTestCommand;",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":14,"12":14,"14":1,"15":1,"17":1,"19":1,"21":0,"25":0,"30":0,"38":1,"44":0,"53":0,"54":0,"57":0,"58":0,"60":0,"62":0,"63":0,"66":0,"68":0,"69":0,"72":0,"73":0,"74":0,"77":0,"79":0,"81":0,"87":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/new.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/new.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":16}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":9}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":5},"end":{"line":29,"column":24}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":55},"end":{"line":94,"column":69}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":17}},"10":{"start":{"line":23,"column":4},"end":{"line":25,"column":6}},"11":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"12":{"start":{"line":32,"column":6},"end":{"line":32,"column":83}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":45}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":58}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":20}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":73}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":20}},"18":{"start":{"line":42,"column":4},"end":{"line":46,"column":6}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":23}},"20":{"start":{"line":50,"column":4},"end":{"line":55,"column":7}},"21":{"start":{"line":57,"column":4},"end":{"line":62,"column":7}},"22":{"start":{"line":65,"column":4},"end":{"line":65,"column":134}},"23":{"start":{"line":66,"column":4},"end":{"line":66,"column":32}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":14}},"25":{"start":{"line":69,"column":4},"end":{"line":169,"column":7}},"26":{"start":{"line":71,"column":6},"end":{"line":71,"column":68}},"27":{"start":{"line":72,"column":6},"end":{"line":72,"column":63}},"28":{"start":{"line":74,"column":6},"end":{"line":74,"column":71}},"29":{"start":{"line":76,"column":6},"end":{"line":76,"column":78}},"30":{"start":{"line":78,"column":6},"end":{"line":78,"column":37}},"31":{"start":{"line":80,"column":6},"end":{"line":80,"column":85}},"32":{"start":{"line":82,"column":6},"end":{"line":82,"column":61}},"33":{"start":{"line":83,"column":6},"end":{"line":83,"column":22}},"34":{"start":{"line":85,"column":6},"end":{"line":87,"column":7}},"35":{"start":{"line":86,"column":8},"end":{"line":86,"column":104}},"36":{"start":{"line":89,"column":6},"end":{"line":89,"column":35}},"37":{"start":{"line":91,"column":6},"end":{"line":91,"column":68}},"38":{"start":{"line":92,"column":6},"end":{"line":92,"column":22}},"39":{"start":{"line":94,"column":6},"end":{"line":167,"column":9}},"40":{"start":{"line":96,"column":8},"end":{"line":96,"column":38}},"41":{"start":{"line":96,"column":17},"end":{"line":96,"column":38}},"42":{"start":{"line":98,"column":8},"end":{"line":98,"column":33}},"43":{"start":{"line":100,"column":8},"end":{"line":100,"column":43}},"44":{"start":{"line":101,"column":8},"end":{"line":101,"column":46}},"45":{"start":{"line":104,"column":8},"end":{"line":104,"column":76}},"46":{"start":{"line":106,"column":8},"end":{"line":108,"column":25}},"47":{"start":{"line":110,"column":8},"end":{"line":112,"column":25}},"48":{"start":{"line":119,"column":8},"end":{"line":119,"column":85}},"49":{"start":{"line":120,"column":8},"end":{"line":120,"column":86}},"50":{"start":{"line":121,"column":8},"end":{"line":121,"column":72}},"51":{"start":{"line":122,"column":8},"end":{"line":122,"column":94}},"52":{"start":{"line":124,"column":8},"end":{"line":127,"column":10}},"53":{"start":{"line":129,"column":8},"end":{"line":165,"column":10}},"54":{"start":{"line":131,"column":12},"end":{"line":140,"column":14}},"55":{"start":{"line":133,"column":14},"end":{"line":133,"column":45}},"56":{"start":{"line":134,"column":14},"end":{"line":138,"column":16}},"57":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"58":{"start":{"line":145,"column":14},"end":{"line":145,"column":28}},"59":{"start":{"line":148,"column":12},"end":{"line":160,"column":13}},"60":{"start":{"line":149,"column":14},"end":{"line":149,"column":30}},"61":{"start":{"line":150,"column":14},"end":{"line":150,"column":58}},"62":{"start":{"line":151,"column":14},"end":{"line":151,"column":30}},"63":{"start":{"line":152,"column":14},"end":{"line":152,"column":112}},"64":{"start":{"line":153,"column":14},"end":{"line":153,"column":30}},"65":{"start":{"line":154,"column":14},"end":{"line":154,"column":157}},"66":{"start":{"line":155,"column":14},"end":{"line":155,"column":30}},"67":{"start":{"line":156,"column":14},"end":{"line":156,"column":105}},"68":{"start":{"line":157,"column":14},"end":{"line":157,"column":30}},"69":{"start":{"line":158,"column":14},"end":{"line":158,"column":61}},"70":{"start":{"line":159,"column":14},"end":{"line":159,"column":30}},"71":{"start":{"line":162,"column":12},"end":{"line":162,"column":27}},"72":{"start":{"line":175,"column":0},"end":{"line":175,"column":28}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":29},"end":{"line":43,"column":69}},{"start":{"line":43,"column":72},"end":{"line":43,"column":74}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":14},"end":{"line":44,"column":61}},{"start":{"line":44,"column":65},"end":{"line":44,"column":67}}]},"4":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":15},"end":{"line":44,"column":35}},{"start":{"line":44,"column":39},"end":{"line":44,"column":41}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":14}},{"start":{"line":50,"column":18},"end":{"line":55,"column":6}}]},"6":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":16}},{"start":{"line":57,"column":20},"end":{"line":62,"column":6}}]},"7":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":26},"end":{"line":71,"column":54}},{"start":{"line":71,"column":58},"end":{"line":71,"column":67}}]},"8":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":28},"end":{"line":72,"column":47}},{"start":{"line":72,"column":51},"end":{"line":72,"column":62}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":6}},{"start":{"line":85,"column":6},"end":{"line":85,"column":6}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"11":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":12}},{"start":{"line":144,"column":12},"end":{"line":144,"column":12}}]},"12":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":12}},{"start":{"line":148,"column":12},"end":{"line":148,"column":12}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const fs = require('fs-extra');","const path = require('path');","const inquirer = require('inquirer');","const inflect = require('i')();","const colors = require('colors/safe');","const async = require('async');","const http = require('http');","","class NewCommand extends Command {","","  constructor() {","","    super('new');","","  }","","  help() {","","    return {","      description: 'Initialize the current directory as a new Nodal project'","    };","","  }","","  run(params, callback) {","","    if (fs.existsSync('./.nodal')) {","      return callback(new Error('Nodal project already exists in this directory'));","    }","","    const rootPath = path.resolve(__dirname);","    const version = require('../../package.json').version;","","    console.log('');","    console.log(`Welcome to ${colors.bold.green('Nodal! v' + version)}`);","    console.log('');","","    let data = {","      name: params.args[0] ? (params.args[0] + '').replace(/_/g, ' ') : '',","      author: (params.vflags.author || '').replace(/_/g, ' ') || '',","      ignoreOutput: params.vflags.hasOwnProperty('ignore-output')","    };","","    let questions = [];","","    !data.name && questions.push({","      name: 'project-name',","      type: 'input',","      default: 'my-nodal-project',","      message: 'Name',","    });","","    !data.author && questions.push({","      name: 'author',","      type: 'input',","      default: 'mysterious author',","      message: 'Author',","    });","","    // Count new nodal projects being made. :)","    let req = http.request({host: 'api.polybit.com', port: 80, path: `/v1/nodal_initializations?version=${version}`, method: 'POST'});","    req.on('error', (() => {}));","    req.end();","","    inquirer.prompt(questions, (promptResult) => {","","      promptResult.name = promptResult['project-name'] || data.name;","      promptResult.author = promptResult.author || data.author;","","      promptResult.simpleName = promptResult.name.replace(/\\s/gi, '-');","","      promptResult.databaseName = inflect.underscore(promptResult.simpleName);","","      promptResult.version = version;","","      let dirname = promptResult.name.replace(/[^A-Za-z0-9-_]/gi, '-').toLowerCase();","","      console.log('Creating directory \"' + dirname + '\"...');","      console.log('');","","      if (fs.existsSync('./' + dirname)) {","        callback(new Error('Directory \"' + dirname + '\" already exists, try a different project name'));","      }","","      fs.mkdirSync('./' + dirname);","","      console.log('Copying Nodal directory structure and files...');","      console.log('');","","      fs.copy(rootPath + '/../../src', './' + dirname, function(err) {","","        if (err) return callback(err);","","        let dot = require('dot');","","        dot.templateSettings.strip = false;","        dot.templateSettings.varname = 'data';","","        // Write .env","        fs.writeFileSync('./' + dirname + '/.env', 'EXAMPLE_ENV_VAR=hello');","","        fs.writeFileSync('./' + dirname + '/package.json', dot.template(","          fs.readFileSync(rootPath + '/../templates/package.json.jst').toString()","        )(promptResult));","","        fs.writeFileSync('./' + dirname + '/README.md', dot.template(","          fs.readFileSync(rootPath + '/../templates/README.md.jst').toString()","        )(promptResult));","","        // read in the dbjson template, replace the development database name","        // generate new config/db.json in the generated app","        // NOTE: The db.json is intentionally not conditionally wrapped based","        // on DB support since if users want to enable it later, worse case it","        // defaults to an underscored version  <appname>_development","        let dbjson = JSON.parse(fs.readFileSync(rootPath + '/../templates/db.json'));","        dbjson.development.main.database = promptResult.databaseName + '_development';","        dbjson.test.main.database = promptResult.databaseName + '_test';","        fs.writeFileSync('./' + dirname + '/config/db.json', JSON.stringify(dbjson, null, 2));","","        let copyNodeModules = [","          'cli', 'core', 'test', 'node_modules',","          'package.json'","        ];","","        async.series(","          copyNodeModules.map(m => {","            return (callback) => {","","              console.log(`Copying ${m}...`);","              fs.copy(","                path.join(rootPath, '..', '..', m),","                path.join(process.cwd(), dirname, 'node_modules', 'nodal', m),","                callback","              );","","            };","          }),","          (err) => {","","            if (err) {","              callback(err);","            }","","            if (!data.ignoreOutput) {","              console.log('');","              console.log(colors.bold.green('All done!'));","              console.log('');","              console.log('Your new Nodal project, ' + colors.bold(promptResult.name) + ', is ready to go! :)');","              console.log('');","              console.log('Have fun ' + promptResult.author + ', and check out https://github.com/keithwhor/nodal for the most up-to-date Nodal information')","              console.log('');","              console.log(colors.bold('Pro tip: ') + 'You can try running your server right away with:');","              console.log('');","              console.log('  cd ' + dirname + ' && nodal s');","              console.log('');","            }","","            callback(null);","","          }","        );","","      });","","    });","","  }","","}","","module.exports = NewCommand;",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"17":1,"23":0,"31":0,"32":0,"35":0,"36":0,"38":0,"39":0,"40":0,"42":0,"48":0,"50":0,"57":0,"65":0,"66":0,"67":0,"69":0,"71":0,"72":0,"74":0,"76":0,"78":0,"80":0,"82":0,"83":0,"85":0,"86":0,"89":0,"91":0,"92":0,"94":0,"96":0,"98":0,"100":0,"101":0,"104":0,"106":0,"110":0,"119":0,"120":0,"121":0,"122":0,"124":0,"129":0,"131":0,"133":0,"134":0,"144":0,"145":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"162":0,"175":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/compile.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/compile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":9}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":5},"end":{"line":31,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":29}},"7":{"start":{"line":20,"column":4},"end":{"line":27,"column":6}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"9":{"start":{"line":35,"column":4},"end":{"line":37,"column":6}},"10":{"start":{"line":36,"column":12},"end":{"line":36,"column":107}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":157}},"12":{"start":{"line":39,"column":49},"end":{"line":39,"column":155}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":156}},"14":{"start":{"line":40,"column":48},"end":{"line":40,"column":154}},"15":{"start":{"line":42,"column":4},"end":{"line":55,"column":7}},"16":{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},"17":{"start":{"line":45,"column":8},"end":{"line":45,"column":29}},"18":{"start":{"line":48,"column":6},"end":{"line":48,"column":22}},"19":{"start":{"line":49,"column":6},"end":{"line":49,"column":73}},"20":{"start":{"line":50,"column":6},"end":{"line":50,"column":47}},"21":{"start":{"line":51,"column":6},"end":{"line":51,"column":47}},"22":{"start":{"line":52,"column":6},"end":{"line":52,"column":20}},"23":{"start":{"line":53,"column":6},"end":{"line":53,"column":17}},"24":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":25}},{"start":{"line":39,"column":29},"end":{"line":39,"column":156}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":24}},{"start":{"line":40,"column":28},"end":{"line":40,"column":155}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const async = require('async');","const colors = require('colors/safe');","","const PolyDeployCommand = require('./deploy.js');","const PolyRunCommand = require('./run.js');","","class PolyCompileCommand extends Command {","","  constructor() {","","    super('poly', 'compile');","","  }","","  help() {","","    return {","      description: 'Compiles your Nodal API to the cloud, runs database migrations',","      args: ['projectName'],","      vflags: {","        prepare: 'Runs db:prepare after compilation (resets DB)',","        'no-migrate': 'Do not run db:migrate after compilation'","      }","    };","","  }","","  run(params, callback) {","","    let name = params.args[0];","","    let commands = [","      cb => PolyDeployCommand.prototype.run({args: [name], flags: params.flags, vflags: params.vflags}, cb)","    ];","","    params.vflags.prepare && commands.push(cb => PolyRunCommand.prototype.run({args: [name, 'db:prepare'], flags: params.flags, vflags: params.vflags}, cb));","    vflags['no-migrate'] || commands.push(cb => PolyRunCommand.prototype.run({args: [name, 'db:migrate'], flags: params.flags, vflags: params.vflags}, cb));","","    async.series(commands, (err, results) => {","","      if (err) {","        return callback(err);","      }","","      console.log('');","      console.log(colors.bold.green('Awesome. Compilation Successful!'));","      console.log(`Access your API online at:`)","      console.log(colors.bold(results[0].url));","      console.log();","      callback();","","    });","","  }","","}","","module.exports = PolyCompileCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"14":1,"20":0,"33":0,"35":0,"36":0,"39":0,"40":0,"42":0,"44":0,"45":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/deploy.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/deploy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":16}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":9}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":5},"end":{"line":30,"column":24}}},"4":{"name":"(anonymous_4)","line":150,"loc":{"start":{"line":150,"column":6},"end":{"line":150,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":28}},"10":{"start":{"line":23,"column":4},"end":{"line":26,"column":6}},"11":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"12":{"start":{"line":33,"column":6},"end":{"line":33,"column":117}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":30}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":78}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":51}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":47}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":57}},"18":{"start":{"line":44,"column":4},"end":{"line":146,"column":7}},"19":{"start":{"line":47,"column":8},"end":{"line":61,"column":10}},"20":{"start":{"line":49,"column":10},"end":{"line":51,"column":11}},"21":{"start":{"line":50,"column":12},"end":{"line":50,"column":27}},"22":{"start":{"line":53,"column":10},"end":{"line":55,"column":11}},"23":{"start":{"line":54,"column":12},"end":{"line":54,"column":88}},"24":{"start":{"line":57,"column":10},"end":{"line":57,"column":41}},"25":{"start":{"line":59,"column":10},"end":{"line":59,"column":28}},"26":{"start":{"line":66,"column":6},"end":{"line":68,"column":7}},"27":{"start":{"line":67,"column":8},"end":{"line":67,"column":29}},"28":{"start":{"line":70,"column":6},"end":{"line":70,"column":34}},"29":{"start":{"line":72,"column":6},"end":{"line":72,"column":31}},"30":{"start":{"line":74,"column":6},"end":{"line":89,"column":9}},"31":{"start":{"line":83,"column":8},"end":{"line":87,"column":10}},"32":{"start":{"line":84,"column":10},"end":{"line":86,"column":13}},"33":{"start":{"line":85,"column":12},"end":{"line":85,"column":82}},"34":{"start":{"line":91,"column":6},"end":{"line":144,"column":9}},"35":{"start":{"line":93,"column":8},"end":{"line":93,"column":56}},"36":{"start":{"line":95,"column":8},"end":{"line":142,"column":11}},"37":{"start":{"line":97,"column":10},"end":{"line":100,"column":11}},"38":{"start":{"line":98,"column":12},"end":{"line":98,"column":62}},"39":{"start":{"line":99,"column":12},"end":{"line":99,"column":33}},"40":{"start":{"line":102,"column":10},"end":{"line":102,"column":115}},"41":{"start":{"line":103,"column":10},"end":{"line":103,"column":38}},"42":{"start":{"line":105,"column":10},"end":{"line":120,"column":15}},"43":{"start":{"line":106,"column":12},"end":{"line":106,"column":41}},"44":{"start":{"line":107,"column":12},"end":{"line":107,"column":28}},"45":{"start":{"line":108,"column":12},"end":{"line":108,"column":29}},"46":{"start":{"line":109,"column":12},"end":{"line":109,"column":32}},"47":{"start":{"line":110,"column":12},"end":{"line":110,"column":30}},"48":{"start":{"line":111,"column":12},"end":{"line":111,"column":22}},"49":{"start":{"line":112,"column":12},"end":{"line":115,"column":19}},"50":{"start":{"line":113,"column":14},"end":{"line":113,"column":146}},"51":{"start":{"line":114,"column":14},"end":{"line":114,"column":18}},"52":{"start":{"line":116,"column":12},"end":{"line":119,"column":14}},"53":{"start":{"line":117,"column":14},"end":{"line":117,"column":38}},"54":{"start":{"line":118,"column":14},"end":{"line":118,"column":127}},"55":{"start":{"line":123,"column":10},"end":{"line":140,"column":13}},"56":{"start":{"line":125,"column":12},"end":{"line":125,"column":21}},"57":{"start":{"line":127,"column":12},"end":{"line":130,"column":13}},"58":{"start":{"line":128,"column":14},"end":{"line":128,"column":64}},"59":{"start":{"line":129,"column":14},"end":{"line":129,"column":35}},"60":{"start":{"line":132,"column":12},"end":{"line":132,"column":48}},"61":{"start":{"line":134,"column":12},"end":{"line":138,"column":15}},"62":{"start":{"line":136,"column":14},"end":{"line":136,"column":54}},"63":{"start":{"line":152,"column":4},"end":{"line":152,"column":46}},"64":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"65":{"start":{"line":155,"column":6},"end":{"line":155,"column":13}},"66":{"start":{"line":158,"column":4},"end":{"line":158,"column":33}},"67":{"start":{"line":160,"column":4},"end":{"line":165,"column":5}},"68":{"start":{"line":161,"column":6},"end":{"line":164,"column":45}},"69":{"start":{"line":163,"column":18},"end":{"line":163,"column":36}},"70":{"start":{"line":167,"column":4},"end":{"line":167,"column":25}},"71":{"start":{"line":168,"column":4},"end":{"line":168,"column":17}},"72":{"start":{"line":174,"column":0},"end":{"line":174,"column":35}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":32},"end":{"line":38,"column":49}},{"start":{"line":38,"column":52},"end":{"line":38,"column":77}}]},"3":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":15},"end":{"line":39,"column":29}},{"start":{"line":39,"column":33},"end":{"line":39,"column":50}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":10},"end":{"line":49,"column":10}},{"start":{"line":49,"column":10},"end":{"line":49,"column":10}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":10},"end":{"line":53,"column":10}},{"start":{"line":53,"column":10},"end":{"line":53,"column":10}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":6}},{"start":{"line":66,"column":6},"end":{"line":66,"column":6}}]},"7":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":10},"end":{"line":97,"column":10}},{"start":{"line":97,"column":10},"end":{"line":97,"column":10}}]},"8":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":12}},{"start":{"line":127,"column":12},"end":{"line":127,"column":12}}]},"9":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"10":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","const PolyCreditsCommand = require('./credits.js');","","const fs = require('fs');","const zlib = require('zlib');","const async = require('async');","const path = require('path');","","class PolyDeployCommand extends Command {","","  constructor() {","","    super('poly', 'deploy');","","  }","","  help() {","","    return {","      description: 'Deploys current directory as a Nodal project',","      args: ['project']","    };","","  }","","  run(params, callback) {","","    if (!fs.existsSync(path.join(process.cwd(), '.nodal'))) {","      return callback(new Error('Must run `nodal poly:deploy` or `nodal poly:compile` from a valid Nodal project.'));","    }","","    let name = params.args[0];","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    async.parallel([","      (cb) => {","","        resource.request('v1/projects').index({name: name}, (err, response) => {","","          if (err) {","            return cb(err);","          }","","          if (response.data.length < 1) {","            return cb(new Error(`Could not deploy: Project \"${name}\" does not exist.`));","          }","","          let project = response.data[0];","","          cb(null, project);","","        })","","      }","    ], (err, results) => {","","      if (err) {","        return callback(err);","      }","","      console.log('Compiling...');","","      let project = results[0];","","      let files = [","        'app',","        'config',","        'db',","        'middleware',","        'node_modules',","        'renderware'","      ].reduce(this.list.bind(this), []).map(filename => {","","        return (cb) => {","          return fs.readFile(filename, (err, result) => {","            return cb(err, {filename: filename, data: result.toString('base64')});","          });","        };","","      });","","      async.parallel(files, (err, result) => {","","        let buffer = new Buffer(JSON.stringify(result));","","        zlib.deflate(buffer, (err, compressed) => {","","          if (err) {","            console.error(`Could not deploy: ${err.message}`);","            return callback(err);","          }","","          console.log(`Package size: ${compressed.length} (${(compressed.length / (1024 * 1024)).toFixed(2)} MB)`);","          console.log('Deploying...');","","          let finish = (() => {","            let t = new Date().valueOf();","            let length = 50;","            let barSize = 10;","            let emptyChar = '-';","            let barChar = '=';","            let i = 0;","            let progress = setInterval(() => {","              process.stdout.write(`\\r[${emptyChar.repeat(i % length)}${barChar.repeat(barSize)}${emptyChar.repeat(length - (i % length) - 1)}]`);","              i++;","            }, 50);","            return () => {","              clearInterval(progress);","              process.stdout.write(`\\rDeployed in ${((new Date().valueOf() - t) / 1000) | 0} seconds!${' '.repeat(length)}\\n`);","            };","          })();","","","          resource.request('v1/projects').update(project.id, {action: 'deploy'}, compressed, (err, response) => {","","            finish();","","            if (err) {","              console.error(`Could not deploy: ${err.message}`);","              return callback(err);","            }","","            console.log('Deployment complete!');","","            PolyCreditsCommand.prototype.run({args: [], flags: params.flags, vflags: params.vflags}, () => {","","              return callback(null, response.data[0]);","","            });","","          });","","        });","","      });","","    });","","  }","","  list(files, filename) {","","    let path = process.cwd() + '/' + filename;","","    if (!fs.existsSync(path)) {","      return;","    }","","    let stat = fs.statSync(path);","","    if (stat.isDirectory()) {","      return fs","        .readdirSync(path)","        .map(v => `${filename}/${v}`)","        .reduce(this.list.bind(this), files);","    }","","    files.push(filename);","    return files;","","  }","","}","","module.exports = PolyDeployCommand;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"17":1,"23":0,"32":0,"33":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0,"47":0,"49":0,"50":0,"53":0,"54":0,"57":0,"59":0,"66":0,"67":0,"70":0,"72":0,"74":0,"83":0,"84":0,"85":0,"91":0,"93":0,"95":0,"97":0,"98":0,"99":0,"102":0,"103":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"123":0,"125":0,"127":0,"128":0,"129":0,"132":0,"134":0,"136":0,"152":0,"154":0,"155":0,"158":0,"160":0,"161":0,"163":0,"167":0,"168":0,"174":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/credentials.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/credentials.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"readCredentials","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}}},"2":{"name":"writeCredentials","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"4":{"start":{"line":7,"column":0},"end":{"line":23,"column":1}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"6":{"start":{"line":11,"column":2},"end":{"line":15,"column":3}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":76}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"9":{"start":{"line":17,"column":2},"end":{"line":21,"column":58}},"10":{"start":{"line":19,"column":17},"end":{"line":19,"column":18}},"11":{"start":{"line":20,"column":14},"end":{"line":20,"column":26}},"12":{"start":{"line":21,"column":24},"end":{"line":21,"column":51}},"13":{"start":{"line":25,"column":0},"end":{"line":30,"column":1}},"14":{"start":{"line":27,"column":2},"end":{"line":27,"column":74}},"15":{"start":{"line":27,"column":38},"end":{"line":27,"column":54}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":62}},"17":{"start":{"line":32,"column":0},"end":{"line":49,"column":2}},"18":{"start":{"line":36,"column":4},"end":{"line":36,"column":34}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":33}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":22}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":27}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}}},"branchMap":{},"code":["'use strict';","","const path = require('path');","const fs = require('fs');","const FILENAME = '.polybit';","","function readCredentials() {","","  let cred = '';","","  try {","    cred = fs.readFileSync(path.join(process.cwd(), '.polybit')).toString();","  } catch (e) {","    cred = '';","  }","","  return cred","    .split('\\n')","    .filter(v => v)","    .map(l => l.split('='))","    .reduce((p, c) => { return (p[c[0]] = c[1]), p; }, {})","","}","","function writeCredentials(obj) {","","  let str = Object.keys(obj).map(k => `${k}=${obj[k]}`).join('\\n') + '\\n';","  fs.writeFileSync(path.join(process.cwd(), '.polybit'), str);","","}","","module.exports = {","","  read: (key) => {","","    return readCredentials()[key];","","  },","","  write: (key, value) => {","","    let cred = readCredentials();","    cred[key] = value;","    writeCredentials(cred);","    return true;","","  }","","};",""],"l":{"3":1,"4":1,"5":1,"7":1,"9":0,"11":0,"12":0,"14":0,"17":0,"19":0,"20":0,"21":0,"25":1,"27":0,"28":0,"32":1,"36":0,"42":0,"43":0,"44":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/credits.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/credits.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":29}},"7":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":78}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":51}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":47}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":57}},"12":{"start":{"line":34,"column":4},"end":{"line":65,"column":7}},"13":{"start":{"line":37,"column":8},"end":{"line":51,"column":10}},"14":{"start":{"line":39,"column":10},"end":{"line":41,"column":11}},"15":{"start":{"line":40,"column":12},"end":{"line":40,"column":53}},"16":{"start":{"line":43,"column":10},"end":{"line":45,"column":11}},"17":{"start":{"line":44,"column":12},"end":{"line":44,"column":75}},"18":{"start":{"line":47,"column":10},"end":{"line":47,"column":38}},"19":{"start":{"line":49,"column":10},"end":{"line":49,"column":31}},"20":{"start":{"line":56,"column":6},"end":{"line":58,"column":7}},"21":{"start":{"line":57,"column":8},"end":{"line":57,"column":34}},"22":{"start":{"line":60,"column":6},"end":{"line":60,"column":28}},"23":{"start":{"line":62,"column":6},"end":{"line":62,"column":96}},"24":{"start":{"line":63,"column":6},"end":{"line":63,"column":17}},"25":{"start":{"line":71,"column":0},"end":{"line":71,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":32},"end":{"line":28,"column":49}},{"start":{"line":28,"column":52},"end":{"line":28,"column":77}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":29}},{"start":{"line":29,"column":33},"end":{"line":29,"column":50}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":10},"end":{"line":39,"column":10}},{"start":{"line":39,"column":10},"end":{"line":39,"column":10}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":10},"end":{"line":43,"column":10}},{"start":{"line":43,"column":10},"end":{"line":43,"column":10}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","const colors = require('colors/safe');","","const async = require('async');","","class PolyCreditsCommand extends Command {","","  constructor() {","","    super('poly', 'credits');","","  }","","  help() {","","    return {","      description: 'Shows you your current Polybit Credit balance'","    };","","  }","","  run(params, callback) {","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    async.parallel([","      (callback) => {","","        resource.request('v1/users').index({me: true}, (err, response) => {","","          if (err) {","            return callback(`Error: ${err.message}`);","          }","","          if (response.data.length < 1) {","            return callback(`You are not currently logged in to Polybit.`);","          }","","          let user = response.data[0];","","          callback(null, user);","","        })","","      }","    ], (err, results) => {","","      if (err) {","        return console.error(err);","      }","","      let user = results[0];","","      console.log(`You have ${colors.bold.green(user.credits | 0)} Polybit Credits available.`);","      callback();","","    });","","  }","","}","","module.exports = PolyCreditsCommand;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"14":1,"20":0,"28":0,"29":0,"31":0,"32":0,"34":0,"37":0,"39":0,"40":0,"43":0,"44":0,"47":0,"49":0,"56":0,"57":0,"60":0,"62":0,"63":0,"71":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/run.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/run.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":24}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":6},"end":{"line":82,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"6":{"start":{"line":19,"column":4},"end":{"line":22,"column":6}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":30}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":33}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":78}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":51}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":47}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":57}},"13":{"start":{"line":37,"column":4},"end":{"line":78,"column":7}},"14":{"start":{"line":40,"column":8},"end":{"line":54,"column":10}},"15":{"start":{"line":42,"column":10},"end":{"line":44,"column":11}},"16":{"start":{"line":43,"column":12},"end":{"line":43,"column":27}},"17":{"start":{"line":46,"column":10},"end":{"line":48,"column":11}},"18":{"start":{"line":47,"column":12},"end":{"line":47,"column":93}},"19":{"start":{"line":50,"column":10},"end":{"line":50,"column":41}},"20":{"start":{"line":52,"column":10},"end":{"line":52,"column":28}},"21":{"start":{"line":59,"column":6},"end":{"line":61,"column":7}},"22":{"start":{"line":60,"column":8},"end":{"line":60,"column":29}},"23":{"start":{"line":63,"column":6},"end":{"line":63,"column":31}},"24":{"start":{"line":65,"column":6},"end":{"line":65,"column":45}},"25":{"start":{"line":67,"column":6},"end":{"line":76,"column":9}},"26":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"27":{"start":{"line":70,"column":10},"end":{"line":70,"column":71}},"28":{"start":{"line":73,"column":8},"end":{"line":73,"column":54}},"29":{"start":{"line":74,"column":8},"end":{"line":74,"column":41}},"30":{"start":{"line":84,"column":4},"end":{"line":84,"column":46}},"31":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"32":{"start":{"line":87,"column":6},"end":{"line":87,"column":13}},"33":{"start":{"line":90,"column":4},"end":{"line":90,"column":33}},"34":{"start":{"line":92,"column":4},"end":{"line":97,"column":5}},"35":{"start":{"line":93,"column":6},"end":{"line":96,"column":45}},"36":{"start":{"line":95,"column":18},"end":{"line":95,"column":36}},"37":{"start":{"line":99,"column":4},"end":{"line":99,"column":25}},"38":{"start":{"line":100,"column":4},"end":{"line":100,"column":17}},"39":{"start":{"line":106,"column":0},"end":{"line":106,"column":32}}},"branchMap":{"1":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":32},"end":{"line":31,"column":49}},{"start":{"line":31,"column":52},"end":{"line":31,"column":77}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":15},"end":{"line":32,"column":29}},{"start":{"line":32,"column":33},"end":{"line":32,"column":50}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":10},"end":{"line":42,"column":10}},{"start":{"line":42,"column":10},"end":{"line":42,"column":10}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":10}},{"start":{"line":46,"column":10},"end":{"line":46,"column":10}}]},"5":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"6":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"8":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","","const async = require('async');","","class PolyRunCommand extends Command {","","  constructor() {","","    super('poly', 'run');","","  }","","  help() {","","    return {","      description: 'Runs a Nodal command on your deployed project',","      args: ['project']","    };","","  }","","  run(params, callback) {","","    let name = params.args[0];","    let command = params.args[1];","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    async.parallel([","      (cb) => {","","        resource.request('v1/projects').index({name: name}, (err, response) => {","","          if (err) {","            return cb(err);","          }","","          if (response.data.length < 1) {","            return cb(new Error(`Could not run command: Project \"${name}\" does not exist.`));","          }","","          let project = response.data[0];","","          cb(null, project);","","        })","","      }","    ], (err, results) => {","","      if (err) {","        return callback(err);","      }","","      let project = results[0];","","      console.log(`Running \"${command}...\"`);","","      resource.request('v1/projects').update(project.id, {action: 'command', command: command}, null, (err, response) => {","","        if (err) {","          callback(new Error(`Could not run command: ${err.message}`));","        }","","        console.log(`Ran \"${command}\" successfully!`);","        callback(null, response.data[0]);","","      });","","    });","","  }","","  list(files, filename) {","","    let path = process.cwd() + '/' + filename;","","    if (!fs.existsSync(path)) {","      return;","    }","","    let stat = fs.statSync(path);","","    if (stat.isDirectory()) {","      return fs","        .readdirSync(path)","        .map(v => `${filename}/${v}`)","        .reduce(this.list.bind(this), files);","    }","","    files.push(filename);","    return files;","","  }","","}","","module.exports = PolyRunCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"13":1,"19":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"40":0,"42":0,"43":0,"46":0,"47":0,"50":0,"52":0,"59":0,"60":0,"63":0,"65":0,"67":0,"69":0,"70":0,"73":0,"74":0,"84":0,"86":0,"87":0,"90":0,"92":0,"93":0,"95":0,"99":0,"100":0,"106":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/create.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":9}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":5},"end":{"line":27,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"7":{"start":{"line":20,"column":4},"end":{"line":23,"column":6}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":18}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":31}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":54}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":78}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":51}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":47}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":57}},"15":{"start":{"line":40,"column":4},"end":{"line":54,"column":7}},"16":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":29}},"18":{"start":{"line":46,"column":6},"end":{"line":46,"column":51}},"19":{"start":{"line":48,"column":6},"end":{"line":52,"column":9}},"20":{"start":{"line":50,"column":8},"end":{"line":50,"column":48}},"21":{"start":{"line":60,"column":0},"end":{"line":60,"column":35}}},"branchMap":{"1":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":32},"end":{"line":34,"column":49}},{"start":{"line":34,"column":52},"end":{"line":34,"column":77}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":29}},{"start":{"line":35,"column":33},"end":{"line":35,"column":50}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","const PolyCreditsCommand = require('./credits.js');","","const async = require('async');","","class PolyCreateCommand extends Command {","","  constructor() {","","    super('poly', 'create');","","  }","","  help() {","","    return {","      description: 'Creates a new, empty project',","      args: ['project']","    };","","  }","","  run(params, callback) {","","    let data = {};","    data.name = params.args[0];","","    console.log(`Creating project \"${data.name}\"...`);","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    resource.request('/v1/projects').create({}, data, (err, response) => {","","      if (err) {","        return callback(err);","      }","","      console.log('Project created successfully!');","","      PolyCreditsCommand.prototype.run({args: [], flags: params.flags, vflags: params.vflags}, () => {","","        return callback(null, response.data[0]);","","      });","","    });","","  }","","}","","module.exports = PolyCreateCommand;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"14":1,"20":0,"29":0,"30":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"42":0,"43":0,"46":0,"48":0,"50":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/assign.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/assign.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":34}},"6":{"start":{"line":19,"column":4},"end":{"line":22,"column":6}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":18}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":38}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":78}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":78}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":51}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":47}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":57}},"15":{"start":{"line":40,"column":4},"end":{"line":101,"column":7}},"16":{"start":{"line":43,"column":8},"end":{"line":56,"column":10}},"17":{"start":{"line":45,"column":10},"end":{"line":47,"column":11}},"18":{"start":{"line":46,"column":12},"end":{"line":46,"column":27}},"19":{"start":{"line":49,"column":10},"end":{"line":51,"column":11}},"20":{"start":{"line":50,"column":12},"end":{"line":50,"column":115}},"21":{"start":{"line":53,"column":10},"end":{"line":53,"column":40}},"22":{"start":{"line":54,"column":10},"end":{"line":54,"column":27}},"23":{"start":{"line":60,"column":8},"end":{"line":74,"column":10}},"24":{"start":{"line":62,"column":10},"end":{"line":64,"column":11}},"25":{"start":{"line":63,"column":12},"end":{"line":63,"column":27}},"26":{"start":{"line":66,"column":10},"end":{"line":68,"column":11}},"27":{"start":{"line":67,"column":12},"end":{"line":67,"column":115}},"28":{"start":{"line":70,"column":10},"end":{"line":70,"column":41}},"29":{"start":{"line":72,"column":10},"end":{"line":72,"column":28}},"30":{"start":{"line":79,"column":6},"end":{"line":81,"column":7}},"31":{"start":{"line":80,"column":8},"end":{"line":80,"column":29}},"32":{"start":{"line":83,"column":6},"end":{"line":83,"column":26}},"33":{"start":{"line":84,"column":6},"end":{"line":84,"column":31}},"34":{"start":{"line":86,"column":6},"end":{"line":86,"column":99}},"35":{"start":{"line":86,"column":60},"end":{"line":86,"column":97}},"36":{"start":{"line":87,"column":6},"end":{"line":87,"column":41}},"37":{"start":{"line":88,"column":6},"end":{"line":88,"column":19}},"38":{"start":{"line":90,"column":6},"end":{"line":99,"column":9}},"39":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"40":{"start":{"line":93,"column":10},"end":{"line":93,"column":98}},"41":{"start":{"line":96,"column":8},"end":{"line":96,"column":117}},"42":{"start":{"line":97,"column":8},"end":{"line":97,"column":48}},"43":{"start":{"line":107,"column":0},"end":{"line":107,"column":37}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":31}},{"start":{"line":29,"column":35},"end":{"line":29,"column":37}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":33}},{"start":{"line":30,"column":37},"end":{"line":30,"column":39}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":32},"end":{"line":34,"column":49}},{"start":{"line":34,"column":52},"end":{"line":34,"column":77}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":29}},{"start":{"line":35,"column":33},"end":{"line":35,"column":50}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":10}},{"start":{"line":45,"column":10},"end":{"line":45,"column":10}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":10},"end":{"line":49,"column":10}},{"start":{"line":49,"column":10},"end":{"line":49,"column":10}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":10},"end":{"line":62,"column":10}},{"start":{"line":62,"column":10},"end":{"line":62,"column":10}}]},"8":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":10},"end":{"line":66,"column":10}},{"start":{"line":66,"column":10},"end":{"line":66,"column":10}}]},"9":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"10":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":17},"end":{"line":86,"column":28}},{"start":{"line":86,"column":32},"end":{"line":86,"column":34}}]},"11":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":60},"end":{"line":86,"column":61}},{"start":{"line":86,"column":65},"end":{"line":86,"column":97}}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../../credentials.js');","","const async = require('async');","","class PolyDBAssignCommand extends Command {","","  constructor() {","","    super('poly', 'db', 'assign');","","  }","","  help() {","","    return {","      description: 'Assigns a database to a project',","      args: ['database', 'project']","    };","","  }","","  run(params, callback) {","","    let data = {};","    data.alias = params.args[0] || '';","    data.project = params.args[1] || '';","","    console.log(`Assigning database \"${data.alias}\" to \"${data.project}\"...`);","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    async.parallel([","      (cb) => {","","        resource.request('v1/databases').index({alias: data.alias}, (err, response) => {","","          if (err) {","            return cb(err);","          }","","          if (response.data.length < 1) {","            return cb(new Error(`Could not assign database: Database with alias \"${data.alias}\" does not exist.`));","          }","","          let userDb = response.data[0];","          cb(null, userDb);","","        })","      },","      (cb) => {","","        resource.request('v1/projects').index({name: data.project}, (err, response) => {","","          if (err) {","            return cb(err);","          }","","          if (response.data.length < 1) {","            return cb(new Error(`Could not assign database: Project with name \"${data.project}\" does not exist.`));","          }","","          let project = response.data[0];","","          cb(null, project);","","        })","","      }","    ], (err, results) => {","","      if (err) {","        return callback(err);","      }","","      let db = results[0];","      let project = results[1];","","      let env = (project.env || '').split('\\n').filter(v => v && v.indexOf('DATABASE_URL=') !== 0);","      env.push(`DATABASE_URL=${db.url}`);","      env.push('');","","      resource.request('v1/projects').update(project.id, {}, {env: env.join('\\n')}, (err, response) => {","","        if (err) {","          return callback(new Error('Could not assign database: Error setting environment vars'));","        }","","        console.log(`Environment variable DATABASE_URL set for project \"${project.name}\" to database \"${db.alias}\"`);","        return callback(null, response.data[0]);","","      });","","    });","","  }","","}","","module.exports = PolyDBAssignCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"13":1,"19":0,"28":0,"29":0,"30":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"43":0,"45":0,"46":0,"49":0,"50":0,"53":0,"54":0,"60":0,"62":0,"63":0,"66":0,"67":0,"70":0,"72":0,"79":0,"80":0,"83":0,"84":0,"86":0,"87":0,"88":0,"90":0,"92":0,"93":0,"96":0,"97":0,"107":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/create.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":16}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":9}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":5},"end":{"line":34,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}},"9":{"start":{"line":23,"column":4},"end":{"line":30,"column":6}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":18}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":32}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":71}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":78}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":51}},"15":{"start":{"line":44,"column":4},"end":{"line":44,"column":47}},"16":{"start":{"line":45,"column":4},"end":{"line":45,"column":57}},"17":{"start":{"line":47,"column":4},"end":{"line":76,"column":7}},"18":{"start":{"line":49,"column":6},"end":{"line":51,"column":7}},"19":{"start":{"line":50,"column":8},"end":{"line":50,"column":29}},"20":{"start":{"line":53,"column":6},"end":{"line":53,"column":52}},"21":{"start":{"line":55,"column":6},"end":{"line":74,"column":9}},"22":{"start":{"line":57,"column":8},"end":{"line":57,"column":68}},"23":{"start":{"line":58,"column":8},"end":{"line":58,"column":34}},"24":{"start":{"line":60,"column":8},"end":{"line":70,"column":9}},"25":{"start":{"line":62,"column":10},"end":{"line":62,"column":73}},"26":{"start":{"line":63,"column":10},"end":{"line":63,"column":65}},"27":{"start":{"line":65,"column":15},"end":{"line":70,"column":9}},"28":{"start":{"line":67,"column":10},"end":{"line":67,"column":66}},"29":{"start":{"line":68,"column":10},"end":{"line":68,"column":65}},"30":{"start":{"line":72,"column":8},"end":{"line":72,"column":48}},"31":{"start":{"line":82,"column":0},"end":{"line":82,"column":37}}},"branchMap":{"1":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":32},"end":{"line":41,"column":49}},{"start":{"line":41,"column":52},"end":{"line":41,"column":77}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":15},"end":{"line":42,"column":29}},{"start":{"line":42,"column":33},"end":{"line":42,"column":50}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":15},"end":{"line":65,"column":15}},{"start":{"line":65,"column":15},"end":{"line":65,"column":15}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../../credentials.js');","const PolyCreditsCommand = require('../credits.js');","","const path = require('path');","const fs = require('fs');","","const async = require('async');","","class PolyDBCreateCommand extends Command {","","  constructor() {","","    super('poly', 'db', 'create');","","  }","","  help() {","","    return {","      description: 'Creates a new database',","      args: ['name'],","      vflags: {","        development: 'Sets your development environment database to this db',","        test: 'Sets your test environment database to this db',","      }","    };","","  }","","  run(params, callback) {","","    let data = {};","    data.alias = params.args[0];","","    console.log(`Creating new database with alias \"${data.alias}\"...`);","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    resource.request('v1/databases').create({}, data, (err, response) => {","","      if (err) {","        return callback(err);","      }","","      console.log('Database created successfully!');","","      PolyCreditsCommand.prototype.run({args: [], flags: params.flags, vflags: params.vflags}, () => {","","        let cfgPath = path.join(process.cwd(), 'config', 'db.json');","        let db = require(cfgPath);","","        if (params.vflags.development) {","","          db.development.main = {connectionString: response.data[0].url};","          fs.writeFileSync(cfgPath, JSON.stringify(db, null, 2));","","        } else if (params.vflags.test) {","","          db.test.main = {connectionString: response.data[0].url};","          fs.writeFileSync(cfgPath, JSON.stringify(db, null, 2));","","        }","","        return callback(null, response.data[0]);","","      });","","    });","","  }","","}","","module.exports = PolyDBCreateCommand;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"11":1,"17":1,"23":0,"36":0,"37":0,"39":0,"41":0,"42":0,"44":0,"45":0,"47":0,"49":0,"50":0,"53":0,"55":0,"57":0,"58":0,"60":0,"62":0,"63":0,"65":0,"67":0,"68":0,"72":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/drop.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/drop.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":32}},"6":{"start":{"line":19,"column":4},"end":{"line":22,"column":6}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":18}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":31}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":55}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":78}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":51}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":57}},"14":{"start":{"line":39,"column":4},"end":{"line":61,"column":7}},"15":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":29}},"17":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":85}},"19":{"start":{"line":49,"column":6},"end":{"line":49,"column":35}},"20":{"start":{"line":51,"column":6},"end":{"line":59,"column":9}},"21":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"22":{"start":{"line":54,"column":10},"end":{"line":54,"column":31}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":90}},"24":{"start":{"line":67,"column":0},"end":{"line":67,"column":35}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":32},"end":{"line":33,"column":49}},{"start":{"line":33,"column":52},"end":{"line":33,"column":77}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":15},"end":{"line":34,"column":29}},{"start":{"line":34,"column":33},"end":{"line":34,"column":50}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../../credentials.js');","","const async = require('async');","","class PolyDBDropCommand extends Command {","","  constructor() {","","    super('poly', 'db', 'drop');","","  }","","  help() {","","    return {","      description: 'Destroys a database',","      args: ['db']","    };","","  }","","  run(params, callback) {","","    let data = {};","    data.name = params.args[0];","","    console.log(`Destroying database ${data.name}...`);","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    resource.request('v1/databases').index({name: data.name}, (err, response) => {","","      if (err) {","        return callback(err);","      }","","      if (!response.data.length) {","        return callback(new Error(`Could not find database with name ${data.name}`));","      }","","      let id = response.data[0].id;","","      resource.request('v1/databases').destroy(id, {}, (err, response) => {","","        if (err) {","          return callback(err);","        }","","        return callback(null, `Dropped database \"${response.data[0].name}\" successfully`);","","      });","","    });","","  }","","}","","module.exports = PolyDBDropCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"13":1,"19":0,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0,"41":0,"42":0,"45":0,"46":0,"49":0,"51":0,"53":0,"54":0,"57":0,"67":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/list.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/db/list.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":55}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}},"7":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":30}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":78}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":51}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":47}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":57}},"13":{"start":{"line":36,"column":4},"end":{"line":67,"column":7}},"14":{"start":{"line":39,"column":8},"end":{"line":53,"column":10}},"15":{"start":{"line":41,"column":10},"end":{"line":43,"column":11}},"16":{"start":{"line":42,"column":12},"end":{"line":42,"column":53}},"17":{"start":{"line":45,"column":10},"end":{"line":47,"column":11}},"18":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"19":{"start":{"line":49,"column":10},"end":{"line":49,"column":34}},"20":{"start":{"line":51,"column":10},"end":{"line":51,"column":30}},"21":{"start":{"line":58,"column":6},"end":{"line":60,"column":7}},"22":{"start":{"line":59,"column":8},"end":{"line":59,"column":34}},"23":{"start":{"line":62,"column":6},"end":{"line":62,"column":27}},"24":{"start":{"line":64,"column":6},"end":{"line":64,"column":40}},"25":{"start":{"line":65,"column":6},"end":{"line":65,"column":55}},"26":{"start":{"line":73,"column":0},"end":{"line":73,"column":35}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":32},"end":{"line":30,"column":49}},{"start":{"line":30,"column":52},"end":{"line":30,"column":77}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":15},"end":{"line":31,"column":29}},{"start":{"line":31,"column":33},"end":{"line":31,"column":50}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":10},"end":{"line":41,"column":10}},{"start":{"line":41,"column":10},"end":{"line":41,"column":10}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":10}},{"start":{"line":45,"column":10},"end":{"line":45,"column":10}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const tabler = require('../../../tabler.js');","const Credentials = require('../../../credentials.js');","","const async = require('async');","","class PolyDBListCommand extends Command {","","  constructor() {","","    super('poly', 'db', 'list');","","  }","","  help() {","","    return {","      description: 'Retrieves a list of all available Polybit databases for current user'","    };","","  }","","  run(args, flags, vflags) {","","    let name = params.args[0];","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    async.parallel([","      (callback) => {","","        resource.request('v1/databases').index({}, (err, response) => {","","          if (err) {","            return callback(`Error: ${err.message}`);","          }","","          if (response.data.length < 1) {","            return callback(`No databases available.`);","          }","","          let dbs = response.data;","","          callback(null, dbs);","","        })","","      }","    ], (err, results) => {","","      if (err) {","        return console.error(err);","      }","","      let dbs = results[0];","","      console.log('Current databases:');","      console.log(tabler(['name', 'created_at'], dbs));","","    });","","  }","","}","","module.exports = PolyDBListCommand;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"14":1,"20":0,"28":0,"30":0,"31":0,"33":0,"34":0,"36":0,"39":0,"41":0,"42":0,"45":0,"46":0,"49":0,"51":0,"58":0,"59":0,"62":0,"64":0,"65":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/tabler.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/tabler.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":22,"column":2}},"2":{"start":{"line":5,"column":2},"end":{"line":8,"column":5}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":79}},"4":{"start":{"line":6,"column":54},"end":{"line":6,"column":76}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"6":{"start":{"line":10,"column":2},"end":{"line":20,"column":15}},"7":{"start":{"line":11,"column":25},"end":{"line":11,"column":81}},"8":{"start":{"line":12,"column":25},"end":{"line":12,"column":54}},"9":{"start":{"line":15,"column":6},"end":{"line":18,"column":18}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":34}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":75}}},"branchMap":{},"code":["'use strict';","","module.exports = (fields, objects) => {","","  let sizes = fields.map(f => {","    let rowSizes = [f.length].concat(objects.map(o => o[f].toString().length));","    return Math.max.apply(null, rowSizes);","  });","","  return [","    fields.map((f, i) => ' ' + f + Array(sizes[i] - f.length + 1).join(' ') + ' ').join('|'),","    fields.map((f, i) => Array(sizes[i] + 3).join('-')).join('|')","  ].concat(","    objects.map(o => {","      return fields.map((f, i) => {","        let val = o[f].toString();","        return ' ' + val + Array(sizes[i] - val.length + 1).join(' ') + ' '","      }).join('|')","    })","  ).join('\\n');","","};",""],"l":{"3":1,"5":0,"6":0,"7":0,"10":0,"11":0,"12":0,"15":0,"16":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/env.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/env.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":9}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":5},"end":{"line":34,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"6":{"start":{"line":19,"column":4},"end":{"line":30,"column":6}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":30}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":50}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":56}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":78}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":51}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":47}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":57}},"14":{"start":{"line":46,"column":4},"end":{"line":100,"column":7}},"15":{"start":{"line":49,"column":8},"end":{"line":63,"column":10}},"16":{"start":{"line":51,"column":10},"end":{"line":53,"column":11}},"17":{"start":{"line":52,"column":12},"end":{"line":52,"column":27}},"18":{"start":{"line":55,"column":10},"end":{"line":57,"column":11}},"19":{"start":{"line":56,"column":12},"end":{"line":56,"column":80}},"20":{"start":{"line":59,"column":10},"end":{"line":59,"column":41}},"21":{"start":{"line":61,"column":10},"end":{"line":61,"column":28}},"22":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"23":{"start":{"line":69,"column":8},"end":{"line":69,"column":29}},"24":{"start":{"line":72,"column":6},"end":{"line":72,"column":31}},"25":{"start":{"line":74,"column":6},"end":{"line":74,"column":63}},"26":{"start":{"line":74,"column":60},"end":{"line":74,"column":61}},"27":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"28":{"start":{"line":77,"column":8},"end":{"line":77,"column":69}},"29":{"start":{"line":77,"column":30},"end":{"line":77,"column":67}},"30":{"start":{"line":80,"column":6},"end":{"line":83,"column":7}},"31":{"start":{"line":81,"column":8},"end":{"line":81,"column":66}},"32":{"start":{"line":81,"column":30},"end":{"line":81,"column":64}},"33":{"start":{"line":82,"column":8},"end":{"line":82,"column":40}},"34":{"start":{"line":85,"column":6},"end":{"line":85,"column":19}},"35":{"start":{"line":87,"column":6},"end":{"line":98,"column":9}},"36":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"37":{"start":{"line":90,"column":10},"end":{"line":90,"column":65}},"38":{"start":{"line":93,"column":8},"end":{"line":93,"column":39}},"39":{"start":{"line":95,"column":8},"end":{"line":95,"column":66}},"40":{"start":{"line":96,"column":8},"end":{"line":96,"column":33}},"41":{"start":{"line":106,"column":0},"end":{"line":106,"column":32}}},"branchMap":{"1":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":14},"end":{"line":37,"column":28}},{"start":{"line":37,"column":32},"end":{"line":37,"column":49}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":31}},{"start":{"line":38,"column":35},"end":{"line":38,"column":55}}]},"3":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":32},"end":{"line":40,"column":49}},{"start":{"line":40,"column":52},"end":{"line":40,"column":77}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":29}},{"start":{"line":41,"column":33},"end":{"line":41,"column":50}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":10},"end":{"line":51,"column":10}},{"start":{"line":51,"column":10},"end":{"line":51,"column":10}}]},"6":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":10},"end":{"line":55,"column":10}},{"start":{"line":55,"column":10},"end":{"line":55,"column":10}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"8":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":17},"end":{"line":74,"column":28}},{"start":{"line":74,"column":32},"end":{"line":74,"column":34}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"10":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":30},"end":{"line":77,"column":31}},{"start":{"line":77,"column":35},"end":{"line":77,"column":67}}]},"11":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"12":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":30},"end":{"line":81,"column":31}},{"start":{"line":81,"column":35},"end":{"line":81,"column":64}}]},"13":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":8}},{"start":{"line":89,"column":8},"end":{"line":89,"column":8}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","","const async = require('async');","","class PolyEnvCommand extends Command {","","  constructor() {","","    super('poly', 'env');","","  }","","  help() {","","    return {","      description: 'Retrieves, sets or removes environment variables for a project',","      args: ['project'],","      flags: {","        s: '[key] [value] Sets an environment variable',","        r: '[key] Removes an environment variable'","      },","      vflags: {","        set: '[key] [value] Sets an environment variable',","        remove: '[key] Removes an environment variable'","      }","    };","","  }","","  run(params, callback) {","","    let name = params.args[0];","    let set = params.flags.s || params.vflags.set;","    let remove = params.flags.r || params.vflags.remove;","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    async.parallel([","      (cb) => {","","        resource.request('v1/projects').index({name: name}, (err, response) => {","","          if (err) {","            return cb(err);","          }","","          if (response.data.length < 1) {","            return cb(new Error(`Project with name \"${name}\" does not exist.`));","          }","","          let project = response.data[0];","","          cb(null, project);","","        })","","      }","    ], (err, results) => {","","      if (err) {","        return callback(err);","      }","","      let project = results[0];","","      let env = (project.env || '').split('\\n').filter(v => v);","","      if (remove) {","        env = env.filter(v => v && v.indexOf(remove[0] + '=') !== 0);","      }","","      if (set) {","        env = env.filter(v => v && v.indexOf(set[0] + '=') !== 0);","        env.push(`${set[0]}=${set[1]}`);","      }","","      env.push('');","","      resource.request('v1/projects').update(project.id, {}, {env: env.join('\\n')}, (err, response) => {","","        if (err) {","          return console.error('Error setting environment vars');","        }","","        let project = response.data[0];","","        console.log(`Environment variables for ${project.name}:`);","        console.log(project.env);","","      });","","    });","","  }","","}","","module.exports = PolyEnvCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"13":1,"19":0,"36":0,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0,"46":0,"49":0,"51":0,"52":0,"55":0,"56":0,"59":0,"61":0,"68":0,"69":0,"72":0,"74":0,"76":0,"77":0,"80":0,"81":0,"82":0,"85":0,"87":0,"89":0,"90":0,"93":0,"95":0,"96":0,"106":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/list.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/list.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":26}},"7":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":78}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":51}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":47}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":57}},"12":{"start":{"line":34,"column":4},"end":{"line":65,"column":7}},"13":{"start":{"line":37,"column":8},"end":{"line":51,"column":10}},"14":{"start":{"line":39,"column":10},"end":{"line":41,"column":11}},"15":{"start":{"line":40,"column":12},"end":{"line":40,"column":53}},"16":{"start":{"line":43,"column":10},"end":{"line":45,"column":11}},"17":{"start":{"line":44,"column":12},"end":{"line":44,"column":54}},"18":{"start":{"line":47,"column":10},"end":{"line":47,"column":39}},"19":{"start":{"line":49,"column":10},"end":{"line":49,"column":35}},"20":{"start":{"line":56,"column":6},"end":{"line":58,"column":7}},"21":{"start":{"line":57,"column":8},"end":{"line":57,"column":34}},"22":{"start":{"line":60,"column":6},"end":{"line":60,"column":32}},"23":{"start":{"line":62,"column":6},"end":{"line":62,"column":41}},"24":{"start":{"line":63,"column":6},"end":{"line":63,"column":76}},"25":{"start":{"line":71,"column":0},"end":{"line":71,"column":33}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":32},"end":{"line":28,"column":49}},{"start":{"line":28,"column":52},"end":{"line":28,"column":77}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":29}},{"start":{"line":29,"column":33},"end":{"line":29,"column":50}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":10},"end":{"line":39,"column":10}},{"start":{"line":39,"column":10},"end":{"line":39,"column":10}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":10},"end":{"line":43,"column":10}},{"start":{"line":43,"column":10},"end":{"line":43,"column":10}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const tabler = require('../../tabler.js');","const Credentials = require('../../credentials.js');","","const async = require('async');","","class PolyListCommand extends Command {","","  constructor() {","","    super('poly', 'list');","","  }","","  help() {","","    return {","      description: 'Retrieves a list of all available Polybit projects for current user'","    };","","  }","","  run(args, flags, vflags) {","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    async.parallel([","      (callback) => {","","        resource.request('v1/projects').index({}, (err, response) => {","","          if (err) {","            return callback(`Error: ${err.message}`);","          }","","          if (response.data.length < 1) {","            return callback(`No projects available.`);","          }","","          let projects = response.data;","","          callback(null, projects);","","        })","","      }","    ], (err, results) => {","","      if (err) {","        return console.error(err);","      }","","      let projects = results[0];","","      console.log('Available projects:');","      console.log(tabler(['name', 'service_type', 'created_at'], projects));","","    });","","  }","","}","","module.exports = PolyListCommand;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"14":1,"20":0,"28":0,"29":0,"31":0,"32":0,"34":0,"37":0,"39":0,"40":0,"43":0,"44":0,"47":0,"49":0,"56":0,"57":0,"60":0,"62":0,"63":0,"71":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/login.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/login.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":16}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":27}},"7":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":78}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":51}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":62}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":71}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":23}},"13":{"start":{"line":36,"column":4},"end":{"line":41,"column":7}},"14":{"start":{"line":43,"column":4},"end":{"line":47,"column":7}},"15":{"start":{"line":49,"column":4},"end":{"line":67,"column":7}},"16":{"start":{"line":51,"column":6},"end":{"line":51,"column":42}},"17":{"start":{"line":52,"column":6},"end":{"line":52,"column":51}},"18":{"start":{"line":54,"column":6},"end":{"line":54,"column":49}},"19":{"start":{"line":56,"column":6},"end":{"line":65,"column":9}},"20":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"21":{"start":{"line":59,"column":10},"end":{"line":59,"column":31}},"22":{"start":{"line":62,"column":8},"end":{"line":62,"column":73}},"23":{"start":{"line":63,"column":8},"end":{"line":63,"column":56}},"24":{"start":{"line":73,"column":0},"end":{"line":73,"column":34}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":32},"end":{"line":28,"column":49}},{"start":{"line":28,"column":52},"end":{"line":28,"column":77}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":29}},{"start":{"line":29,"column":33},"end":{"line":29,"column":50}}]},"3":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":16},"end":{"line":31,"column":35}},{"start":{"line":31,"column":39},"end":{"line":31,"column":61}}]},"4":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":19},"end":{"line":32,"column":41}},{"start":{"line":32,"column":45},"end":{"line":32,"column":70}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":9}},{"start":{"line":36,"column":13},"end":{"line":41,"column":6}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":12}},{"start":{"line":43,"column":16},"end":{"line":47,"column":6}}]},"7":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":14},"end":{"line":51,"column":19}},{"start":{"line":51,"column":23},"end":{"line":51,"column":41}}]},"8":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":17},"end":{"line":52,"column":25}},{"start":{"line":52,"column":29},"end":{"line":52,"column":50}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","","const inquirer = require('inquirer');","const async = require('async');","","class PolyLoginCommand extends Command {","","  constructor() {","","    super('poly', 'login');","","  }","","  help() {","","    return {","      description: 'Logs in to Polybit API server'","    };","","  }","","  run(params, callback) {","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let email = params.vflags.email && params.vflags.email[0];","    let password = params.vflags.password && params.vflags.password[0];","","    let questions = [];","","    email || questions.push({","      name: 'email',","      type: 'input',","      default: '',","      message: 'e-mail',","    });","","    password || questions.push({","      name: 'password',","      type: 'password',","      message: 'password',","    });","","    inquirer.prompt(questions, (promptResult) => {","","      email = email || promptResult.email;","      password = password || promptResult.password;","","      let resource = new APIResource(host, port);","","      resource.request('v1/access_tokens').create({}, {grant_type: 'password', username: email, password: password}, (err, response) => {","","        if (err) {","          return callback(err);","        }","","        Credentials.write('ACCESS_TOKEN', response.data[0].access_token);","        return callback(null, 'Logged in successfully');","","      });","","    });","","  }","","}","","module.exports = PolyLoginCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"14":1,"20":0,"28":0,"29":0,"31":0,"32":0,"34":0,"36":0,"43":0,"49":0,"51":0,"52":0,"54":0,"56":0,"58":0,"59":0,"62":0,"63":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/logout.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/logout.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":9}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":5},"end":{"line":25,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"6":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":78}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":51}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":47}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":57}},"11":{"start":{"line":33,"column":4},"end":{"line":42,"column":7}},"12":{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":29}},"14":{"start":{"line":39,"column":6},"end":{"line":39,"column":44}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":55}},"16":{"start":{"line":48,"column":0},"end":{"line":48,"column":35}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":32},"end":{"line":27,"column":49}},{"start":{"line":27,"column":52},"end":{"line":27,"column":77}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":29}},{"start":{"line":28,"column":33},"end":{"line":28,"column":50}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","","const async = require('async');","","class PolyLogoutCommand extends Command {","","  constructor() {","","    super('poly', 'logout');","","  }","","  help() {","","    return {","      description: 'Logs out of Polybit API server'","    };","","  }","","  run(params, callback) {","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    resource.request('v1/access_tokens').destroy(null, {}, (err, response) => {","","      if (err) {","        return callback(err);","      }","","      Credentials.write('ACCESS_TOKEN', '');","      return callback(null, 'Logged out successfully');","","    });","","  }","","}","","module.exports = PolyLogoutCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"13":1,"19":0,"27":0,"28":0,"30":0,"31":0,"33":0,"35":0,"36":0,"39":0,"40":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/new.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/new.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":16}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":9}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":5},"end":{"line":30,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":54}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":25}},"10":{"start":{"line":23,"column":4},"end":{"line":26,"column":6}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":30}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":33}},"13":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"14":{"start":{"line":38,"column":6},"end":{"line":38,"column":120}},"15":{"start":{"line":41,"column":4},"end":{"line":54,"column":7}},"16":{"start":{"line":42,"column":12},"end":{"line":42,"column":107}},"17":{"start":{"line":43,"column":12},"end":{"line":43,"column":109}},"18":{"start":{"line":44,"column":12},"end":{"line":44,"column":115}},"19":{"start":{"line":45,"column":12},"end":{"line":45,"column":108}},"20":{"start":{"line":48,"column":6},"end":{"line":50,"column":7}},"21":{"start":{"line":49,"column":8},"end":{"line":49,"column":29}},"22":{"start":{"line":52,"column":6},"end":{"line":52,"column":51}},"23":{"start":{"line":60,"column":0},"end":{"line":60,"column":32}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const async = require('async');","const fs = require('fs');","const path = require('path');","","const PolyCreateCommand = require('./create.js');","const PolyDBCreateCommand = require('./db/create.js');","const PolyDBAssignCommand = require('./db/assign.js');","const PolyCompileCommand = require('./compile.js');","","class PolyNewCommand extends Command {","","  constructor() {","","    super('poly', 'new');","","  }","","  help() {","","    return {","      description: 'Creates a new API project with associated database',","      args: ['projectName']","    };","","  }","","  run(params, callback) {","","    let name = params.args[0];","","    // for PolyCompileCommand","    params.vflags.prepare = true;","","    if (!fs.existsSync(path.join(process.cwd(), '.nodal'))) {","      return callback(new Error('Must run `nodal poly:new` from a valid Nodal project. Please try `nodal new` first.'));","    }","","    async.series([","      cb => PolyCreateCommand.prototype.run({args: [name], flags: params.flags, vflags: params.vflags}, cb),","      cb => PolyDBCreateCommand.prototype.run({args: [name], flags: params.flags, vflags: params.vflags}, cb),","      cb => PolyDBAssignCommand.prototype.run({args: [name, name], flags: params.flags, vflags: params.vflags}, cb),","      cb => PolyCompileCommand.prototype.run({args: [name], flags: params.flags, vflags: params.vflags}, cb)","    ], (err) => {","","      if (err) {","        return callback(err);","      }","","      console.log('Project created successfully!');","","    });","","  }","","}","","module.exports = PolyNewCommand;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"17":1,"23":0,"32":0,"35":0,"37":0,"38":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":0,"49":0,"52":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/register.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/register.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":16}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":6},"end":{"line":19,"column":9}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":5},"end":{"line":27,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":30}},"8":{"start":{"line":21,"column":4},"end":{"line":23,"column":6}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":78}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":51}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":23}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":20}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":64}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":44}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":20}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":80}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":65}},"18":{"start":{"line":40,"column":4},"end":{"line":40,"column":98}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":20}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"22":{"start":{"line":45,"column":4},"end":{"line":50,"column":7}},"23":{"start":{"line":52,"column":4},"end":{"line":56,"column":7}},"24":{"start":{"line":58,"column":4},"end":{"line":62,"column":7}},"25":{"start":{"line":64,"column":4},"end":{"line":86,"column":7}},"26":{"start":{"line":66,"column":6},"end":{"line":66,"column":37}},"27":{"start":{"line":67,"column":6},"end":{"line":67,"column":43}},"28":{"start":{"line":68,"column":6},"end":{"line":68,"column":48}},"29":{"start":{"line":71,"column":6},"end":{"line":71,"column":49}},"30":{"start":{"line":72,"column":6},"end":{"line":84,"column":9}},"31":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"32":{"start":{"line":75,"column":10},"end":{"line":75,"column":31}},"33":{"start":{"line":78,"column":8},"end":{"line":82,"column":21}},"34":{"start":{"line":92,"column":0},"end":{"line":92,"column":37}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":32},"end":{"line":29,"column":49}},{"start":{"line":29,"column":52},"end":{"line":29,"column":77}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":29}},{"start":{"line":30,"column":33},"end":{"line":30,"column":50}}]},"3":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","","const colors = require('colors/safe');","const inquirer = require('inquirer');","const async = require('async');","","class PolyRegisterCommand extends Command {","","  constructor() {","","    super('poly', 'register');","","  }","","  help() {","","    return {","      description: 'Registers a new Polybit User Account'","    };","","  }","","  run(params, callback) {","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let questions = [];","","    console.log('');","    console.log(colors.bold.green('Welcome to Polybit Cloud!'));","    console.log('https://www.polybit.com/');","    console.log('');","    console.log('Polybit Cloud is an API Deployment Platform built for Nodal.');","    console.log('Please ensure you use a valid e-mail address.');","    console.log(colors.bold.red('Accounts with invalid e-mails may be removed without warning.'));","    console.log('');","    console.log('Enjoy! :)');","    console.log('');","","    questions.push({","      name: 'email',","      type: 'input',","      default: '',","      message: 'e-mail',","    });","","    questions.push({","      name: 'password',","      type: 'password',","      message: 'password',","    });","","    questions.push({","      name: 'repeat_password',","      type: 'password',","      message: 'repeat password',","    });","","    inquirer.prompt(questions, (promptResult) => {","","      let email = promptResult.email;","      let password = promptResult.password;","      let repeat = promptResult.repeat_password;","","","      let resource = new APIResource(host, port);","      resource.request('v1/users').create({}, {email: email, password: password, repeat_password: repeat}, (err, response) => {","","        if (err) {","          return callback(err);","        }","","        require('./login.js').prototype.run({","          args: params.args,","          flags: params.flags,","          vflags: {email: [email], password: [password]}","        }, callback);","","      });","","    });","","  }","","}","","module.exports = PolyRegisterCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1,"15":1,"21":0,"29":0,"30":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"52":0,"58":0,"64":0,"66":0,"67":0,"68":0,"71":0,"72":0,"74":0,"75":0,"78":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/remove.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/poly/remove.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":9}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"6":{"start":{"line":19,"column":4},"end":{"line":22,"column":6}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":18}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":31}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":54}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":78}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":51}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":57}},"14":{"start":{"line":39,"column":4},"end":{"line":61,"column":7}},"15":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":29}},"17":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":84}},"19":{"start":{"line":49,"column":6},"end":{"line":49,"column":35}},"20":{"start":{"line":51,"column":6},"end":{"line":59,"column":9}},"21":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"22":{"start":{"line":54,"column":10},"end":{"line":54,"column":31}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":89}},"24":{"start":{"line":67,"column":0},"end":{"line":67,"column":35}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":32},"end":{"line":33,"column":49}},{"start":{"line":33,"column":52},"end":{"line":33,"column":77}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":15},"end":{"line":34,"column":29}},{"start":{"line":34,"column":33},"end":{"line":34,"column":50}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","const APIResource = require('api-res');","const Credentials = require('../../credentials.js');","","const async = require('async');","","class PolyRemoveCommand extends Command {","","  constructor() {","","    super('poly', 'remove');","","  }","","  help() {","","    return {","      description: 'Removes a project',","      args: ['project']","    };","","  }","","  run(params, callback) {","","    let data = {};","    data.name = params.args[0];","","    console.log(`Destroying project ${data.name}...`);","","    let host = params.flags.h ? params.flags.h[0] : 'https://api.polybit.com';","    let port = params.flags.p && params.flags.p[0];","","    let resource = new APIResource(host, port);","    resource.authorize(Credentials.read('ACCESS_TOKEN'));","","    resource.request('v1/projects').index({name: data.name}, (err, response) => {","","      if (err) {","        return callback(err);","      }","","      if (!response.data.length) {","        return callback(new Error(`Could not find project with name ${data.name}`));","      }","","      let id = response.data[0].id;","","      resource.request('v1/projects').destroy(id, {}, (err, response) => {","","        if (err) {","          return callback(err);","        }","","        return callback(null, `Destroyed project ${response.data[0].name} successfully`);","","      });","","    });","","  }","","}","","module.exports = PolyRemoveCommand;",""],"l":{"3":1,"4":1,"5":1,"7":1,"13":1,"19":0,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0,"41":0,"42":0,"45":0,"46":0,"49":0,"51":0,"53":0,"54":0,"57":0,"67":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/s.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/s.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":16}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":6},"end":{"line":13,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":24}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":23},"end":{"line":26,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":45}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":61}},"6":{"start":{"line":26,"column":4},"end":{"line":28,"column":7}},"7":{"start":{"line":27,"column":6},"end":{"line":27,"column":28}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":11}},{"start":{"line":27,"column":15},"end":{"line":27,"column":27}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","class ServerCommand extends Command {","","  constructor() {","","    super('s');","","  }","","  help() {","","    return {","      description: 'Starts your Nodal Server'","    };","","  }","","  run(params, callback) {","","    let spawn = require('cross-spawn-async');","    let child = spawn('npm',  ['start'], {stdio: 'inherit'});","","    process.on('exit', function() {","      child && child.kill();","    });","","  }","","}","","module.exports = ServerCommand;",""],"l":{"3":1,"9":1,"15":0,"23":0,"24":0,"26":0,"27":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/task.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/task.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":13},"end":{"line":10,"column":16}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":6},"end":{"line":16,"column":9}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":5},"end":{"line":25,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":18}},"5":{"start":{"line":18,"column":4},"end":{"line":21,"column":6}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":40}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":28}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":54}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":96}},"10":{"start":{"line":31,"column":34},"end":{"line":31,"column":96}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":35}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":26}},"13":{"start":{"line":36,"column":4},"end":{"line":46,"column":7}},"14":{"start":{"line":38,"column":6},"end":{"line":42,"column":7}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":72}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":38}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":21}},"18":{"start":{"line":52,"column":0},"end":{"line":52,"column":29}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":19},"end":{"line":27,"column":33}},{"start":{"line":27,"column":37},"end":{"line":27,"column":39}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]}},"code":["'use strict';","","const Command = require('cmnd').Command;","","const fs = require('fs');","const colors = require('colors/safe');","","class TaskCommand extends Command {","","  constructor() {","","    super('task');","","  }","","  help() {","","    return {","      description: 'Runs the named task',","      args: ['task name']","    };","","  }","","  run(params, callback) {","","    let taskName = params.args[0] || '';","    let cwd = process.cwd();","    let taskPath = cwd + '/tasks/' + taskName + '.js';","","    if (!fs.existsSync(taskPath)) callback(new Error('Task \"' + taskName + '\" does not exist'));","","    const Task = require(taskPath);","    let task = new Task();","","    task.exec(params.args.slice(1), (err) => {","","      if (err) {","        console.log(`${colors.red.bold('Task Error:')} ${err.message}`);","      } else {","        console.log('Task complete!');","      }","","      callback(null);","","    });","","  }","","}","","module.exports = TaskCommand;",""],"l":{"3":1,"5":1,"6":1,"12":1,"18":0,"27":0,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"38":0,"39":0,"41":0,"44":0,"52":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/cli/commands/version.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":13},"end":{"line":8,"column":16}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":6},"end":{"line":14,"column":9}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":5},"end":{"line":22,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":21}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":6}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":56}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":64}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":19}},"8":{"start":{"line":33,"column":0},"end":{"line":33,"column":32}}},"branchMap":{},"code":["'use strict';","","const Command = require('cmnd').Command;","const colors = require('colors/safe');","","class VersionCommand extends Command {","","  constructor() {","","    super('version');","","  }","","  help() {","","    return {","      description: 'Shows your currently globally installed Nodal version'","    };","","  }","","  run(params, callback) {","","    let version = require('../../package.json').version;","    console.log(colors.green.bold('Nodal Version: ') + version);","","    callback(null);","","  }","","}","","module.exports = VersionCommand;",""],"l":{"3":1,"4":1,"10":1,"16":0,"24":0,"25":0,"27":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/daemon.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/daemon.js","s":{"1":1,"2":1,"3":2,"4":0,"5":0,"6":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":20}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":7},"end":{"line":19,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":55}},"5":{"start":{"line":23,"column":4},"end":{"line":33,"column":6}},"6":{"start":{"line":39,"column":0},"end":{"line":39,"column":24}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":33}},{"start":{"line":28,"column":36},"end":{"line":28,"column":40}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":11},"end":{"line":27,"column":48}},{"start":{"line":27,"column":52},"end":{"line":27,"column":55}}]}},"code":["'use strict';","","const fxn = require('fxn');","","const API = require('./api.js');","","/**","* Multi-process HTTP Daemon that resets when files changed (in development)","* @class","*/","class Daemon extends fxn.Daemon {","","  constructor(cpus) {","","    super('Nodal', cpus);","","  }","","  error(req, res, err) {","","    res.writeHead(500, {'Content-Type': 'text/plain'});","","    res.end(","      JSON.stringify(","        API.error(","          'Application Error',","          (process.env.NODE_ENV !== 'production' && err) ?","            err.stack.split('\\n') : null","          ),","        null,","        2","      )","    );","","  }","","}","","module.exports = Daemon;",""],"l":{"3":1,"5":1,"15":2,"21":0,"23":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/graph_query.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/graph_query.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":36}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":14},"end":{"line":44,"column":40}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":24},"end":{"line":64,"column":42}}},"4":{"name":"(anonymous_4)","line":327,"loc":{"start":{"line":327,"column":14},"end":{"line":327,"column":25}}},"5":{"name":"(anonymous_5)","line":350,"loc":{"start":{"line":350,"column":19},"end":{"line":350,"column":47}}},"6":{"name":"(anonymous_6)","line":399,"loc":{"start":{"line":399,"column":7},"end":{"line":399,"column":18}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":55}},"4":{"start":{"line":22,"column":4},"end":{"line":24,"column":39}},"5":{"start":{"line":25,"column":4},"end":{"line":25,"column":53}},"6":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"7":{"start":{"line":28,"column":6},"end":{"line":28,"column":83}},"8":{"start":{"line":30,"column":6},"end":{"line":30,"column":60}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":38}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":30}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":19}},"12":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"13":{"start":{"line":49,"column":6},"end":{"line":49,"column":49}},"14":{"start":{"line":51,"column":6},"end":{"line":51,"column":20}},"15":{"start":{"line":52,"column":6},"end":{"line":52,"column":19}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"17":{"start":{"line":57,"column":4},"end":{"line":57,"column":16}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":20}},"19":{"start":{"line":67,"column":4},"end":{"line":67,"column":28}},"20":{"start":{"line":69,"column":4},"end":{"line":69,"column":24}},"21":{"start":{"line":70,"column":4},"end":{"line":70,"column":42}},"22":{"start":{"line":72,"column":4},"end":{"line":295,"column":6}},"23":{"start":{"line":79,"column":10},"end":{"line":79,"column":40}},"24":{"start":{"line":80,"column":10},"end":{"line":80,"column":45}},"25":{"start":{"line":82,"column":10},"end":{"line":87,"column":13}},"26":{"start":{"line":89,"column":10},"end":{"line":89,"column":43}},"27":{"start":{"line":90,"column":10},"end":{"line":90,"column":33}},"28":{"start":{"line":100,"column":10},"end":{"line":100,"column":40}},"29":{"start":{"line":101,"column":10},"end":{"line":101,"column":45}},"30":{"start":{"line":103,"column":10},"end":{"line":108,"column":13}},"31":{"start":{"line":110,"column":10},"end":{"line":110,"column":43}},"32":{"start":{"line":111,"column":10},"end":{"line":111,"column":33}},"33":{"start":{"line":121,"column":10},"end":{"line":123,"column":11}},"34":{"start":{"line":122,"column":12},"end":{"line":122,"column":23}},"35":{"start":{"line":125,"column":10},"end":{"line":125,"column":31}},"36":{"start":{"line":135,"column":10},"end":{"line":135,"column":40}},"37":{"start":{"line":137,"column":10},"end":{"line":163,"column":11}},"38":{"start":{"line":139,"column":12},"end":{"line":143,"column":14}},"39":{"start":{"line":145,"column":12},"end":{"line":151,"column":13}},"40":{"start":{"line":146,"column":14},"end":{"line":146,"column":34}},"41":{"start":{"line":147,"column":14},"end":{"line":150,"column":15}},"42":{"start":{"line":148,"column":16},"end":{"line":148,"column":42}},"43":{"start":{"line":149,"column":16},"end":{"line":149,"column":51}},"44":{"start":{"line":153,"column":12},"end":{"line":153,"column":70}},"45":{"start":{"line":155,"column":12},"end":{"line":157,"column":13}},"46":{"start":{"line":156,"column":14},"end":{"line":156,"column":25}},"47":{"start":{"line":159,"column":12},"end":{"line":159,"column":29}},"48":{"start":{"line":160,"column":12},"end":{"line":160,"column":47}},"49":{"start":{"line":161,"column":12},"end":{"line":161,"column":44}},"50":{"start":{"line":165,"column":10},"end":{"line":165,"column":20}},"51":{"start":{"line":166,"column":10},"end":{"line":187,"column":11}},"52":{"start":{"line":168,"column":12},"end":{"line":183,"column":13}},"53":{"start":{"line":170,"column":14},"end":{"line":170,"column":24}},"54":{"start":{"line":171,"column":14},"end":{"line":171,"column":24}},"55":{"start":{"line":173,"column":14},"end":{"line":176,"column":15}},"56":{"start":{"line":174,"column":16},"end":{"line":174,"column":20}},"57":{"start":{"line":175,"column":16},"end":{"line":175,"column":20}},"58":{"start":{"line":178,"column":14},"end":{"line":181,"column":15}},"59":{"start":{"line":179,"column":16},"end":{"line":179,"column":53}},"60":{"start":{"line":180,"column":16},"end":{"line":180,"column":44}},"61":{"start":{"line":185,"column":12},"end":{"line":185,"column":16}},"62":{"start":{"line":189,"column":10},"end":{"line":189,"column":21}},"63":{"start":{"line":199,"column":10},"end":{"line":201,"column":11}},"64":{"start":{"line":200,"column":12},"end":{"line":200,"column":23}},"65":{"start":{"line":203,"column":10},"end":{"line":203,"column":31}},"66":{"start":{"line":212,"column":10},"end":{"line":214,"column":11}},"67":{"start":{"line":213,"column":12},"end":{"line":213,"column":23}},"68":{"start":{"line":216,"column":10},"end":{"line":216,"column":40}},"69":{"start":{"line":218,"column":10},"end":{"line":218,"column":24}},"70":{"start":{"line":219,"column":10},"end":{"line":219,"column":20}},"71":{"start":{"line":221,"column":10},"end":{"line":231,"column":11}},"72":{"start":{"line":222,"column":12},"end":{"line":226,"column":13}},"73":{"start":{"line":223,"column":14},"end":{"line":223,"column":22}},"74":{"start":{"line":224,"column":19},"end":{"line":226,"column":13}},"75":{"start":{"line":225,"column":14},"end":{"line":225,"column":22}},"76":{"start":{"line":227,"column":12},"end":{"line":229,"column":13}},"77":{"start":{"line":228,"column":14},"end":{"line":228,"column":20}},"78":{"start":{"line":230,"column":12},"end":{"line":230,"column":16}},"79":{"start":{"line":233,"column":10},"end":{"line":235,"column":11}},"80":{"start":{"line":234,"column":12},"end":{"line":234,"column":23}},"81":{"start":{"line":237,"column":10},"end":{"line":237,"column":90}},"82":{"start":{"line":239,"column":10},"end":{"line":239,"column":38}},"83":{"start":{"line":250,"column":10},"end":{"line":252,"column":11}},"84":{"start":{"line":251,"column":12},"end":{"line":251,"column":23}},"85":{"start":{"line":254,"column":10},"end":{"line":254,"column":40}},"86":{"start":{"line":256,"column":10},"end":{"line":256,"column":24}},"87":{"start":{"line":257,"column":10},"end":{"line":257,"column":20}},"88":{"start":{"line":259,"column":10},"end":{"line":269,"column":11}},"89":{"start":{"line":260,"column":12},"end":{"line":264,"column":13}},"90":{"start":{"line":261,"column":14},"end":{"line":261,"column":22}},"91":{"start":{"line":262,"column":19},"end":{"line":264,"column":13}},"92":{"start":{"line":263,"column":14},"end":{"line":263,"column":22}},"93":{"start":{"line":265,"column":12},"end":{"line":267,"column":13}},"94":{"start":{"line":266,"column":14},"end":{"line":266,"column":20}},"95":{"start":{"line":268,"column":12},"end":{"line":268,"column":16}},"96":{"start":{"line":271,"column":10},"end":{"line":273,"column":11}},"97":{"start":{"line":272,"column":12},"end":{"line":272,"column":23}},"98":{"start":{"line":275,"column":10},"end":{"line":275,"column":80}},"99":{"start":{"line":277,"column":10},"end":{"line":277,"column":38}},"100":{"start":{"line":287,"column":10},"end":{"line":289,"column":11}},"101":{"start":{"line":288,"column":12},"end":{"line":288,"column":23}},"102":{"start":{"line":291,"column":10},"end":{"line":291,"column":31}},"103":{"start":{"line":299,"column":4},"end":{"line":299,"column":42}},"104":{"start":{"line":301,"column":4},"end":{"line":307,"column":5}},"105":{"start":{"line":302,"column":6},"end":{"line":306,"column":7}},"106":{"start":{"line":303,"column":8},"end":{"line":303,"column":19}},"107":{"start":{"line":305,"column":8},"end":{"line":305,"column":50}},"108":{"start":{"line":310,"column":4},"end":{"line":310,"column":44}},"109":{"start":{"line":312,"column":4},"end":{"line":314,"column":5}},"110":{"start":{"line":313,"column":6},"end":{"line":313,"column":72}},"111":{"start":{"line":316,"column":4},"end":{"line":318,"column":5}},"112":{"start":{"line":317,"column":6},"end":{"line":317,"column":17}},"113":{"start":{"line":320,"column":4},"end":{"line":320,"column":63}},"114":{"start":{"line":329,"column":4},"end":{"line":329,"column":19}},"115":{"start":{"line":330,"column":4},"end":{"line":334,"column":6}},"116":{"start":{"line":336,"column":4},"end":{"line":338,"column":5}},"117":{"start":{"line":337,"column":6},"end":{"line":337,"column":64}},"118":{"start":{"line":340,"column":4},"end":{"line":343,"column":6}},"119":{"start":{"line":352,"column":4},"end":{"line":352,"column":31}},"120":{"start":{"line":353,"column":4},"end":{"line":353,"column":24}},"121":{"start":{"line":354,"column":4},"end":{"line":354,"column":28}},"122":{"start":{"line":356,"column":4},"end":{"line":356,"column":31}},"123":{"start":{"line":358,"column":4},"end":{"line":391,"column":28}},"124":{"start":{"line":360,"column":6},"end":{"line":365,"column":15}},"125":{"start":{"line":361,"column":21},"end":{"line":361,"column":42}},"126":{"start":{"line":363,"column":10},"end":{"line":363,"column":42}},"127":{"start":{"line":364,"column":10},"end":{"line":364,"column":21}},"128":{"start":{"line":367,"column":6},"end":{"line":371,"column":7}},"129":{"start":{"line":369,"column":8},"end":{"line":369,"column":30}},"130":{"start":{"line":373,"column":6},"end":{"line":389,"column":7}},"131":{"start":{"line":375,"column":8},"end":{"line":375,"column":25}},"132":{"start":{"line":376,"column":8},"end":{"line":381,"column":10}},"133":{"start":{"line":383,"column":8},"end":{"line":383,"column":23}},"134":{"start":{"line":387,"column":8},"end":{"line":387,"column":20}},"135":{"start":{"line":391,"column":22},"end":{"line":391,"column":26}},"136":{"start":{"line":401,"column":4},"end":{"line":401,"column":74}},"137":{"start":{"line":403,"column":4},"end":{"line":413,"column":7}},"138":{"start":{"line":405,"column":6},"end":{"line":405,"column":43}},"139":{"start":{"line":406,"column":6},"end":{"line":406,"column":24}},"140":{"start":{"line":407,"column":6},"end":{"line":409,"column":7}},"141":{"start":{"line":408,"column":8},"end":{"line":408,"column":15}},"142":{"start":{"line":411,"column":6},"end":{"line":411,"column":73}},"143":{"start":{"line":415,"column":4},"end":{"line":419,"column":7}},"144":{"start":{"line":417,"column":6},"end":{"line":417,"column":61}},"145":{"start":{"line":421,"column":4},"end":{"line":421,"column":16}},"146":{"start":{"line":427,"column":0},"end":{"line":427,"column":28}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":22}},{"start":{"line":24,"column":6},"end":{"line":24,"column":38}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":24}},{"start":{"line":28,"column":28},"end":{"line":28,"column":82}}]},"3":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":10},"end":{"line":66,"column":13}},{"start":{"line":66,"column":17},"end":{"line":66,"column":19}}]},"4":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":17}},{"start":{"line":67,"column":21},"end":{"line":67,"column":27}}]},"5":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":29},"end":{"line":80,"column":37}},{"start":{"line":80,"column":40},"end":{"line":80,"column":44}}]},"6":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":27},"end":{"line":89,"column":38}},{"start":{"line":89,"column":41},"end":{"line":89,"column":42}}]},"7":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":29},"end":{"line":101,"column":37}},{"start":{"line":101,"column":40},"end":{"line":101,"column":44}}]},"8":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":27},"end":{"line":110,"column":38}},{"start":{"line":110,"column":41},"end":{"line":110,"column":42}}]},"9":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":10},"end":{"line":121,"column":10}},{"start":{"line":121,"column":10},"end":{"line":121,"column":10}}]},"10":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":10},"end":{"line":137,"column":10}},{"start":{"line":137,"column":10},"end":{"line":137,"column":10}}]},"11":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":14},"end":{"line":147,"column":14}},{"start":{"line":147,"column":14},"end":{"line":147,"column":14}}]},"12":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":12},"end":{"line":155,"column":12}},{"start":{"line":155,"column":12},"end":{"line":155,"column":12}}]},"13":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":12},"end":{"line":168,"column":12}},{"start":{"line":168,"column":12},"end":{"line":168,"column":12}}]},"14":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":14},"end":{"line":178,"column":14}},{"start":{"line":178,"column":14},"end":{"line":178,"column":14}}]},"15":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":10}},{"start":{"line":199,"column":10},"end":{"line":199,"column":10}}]},"16":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":10},"end":{"line":212,"column":10}},{"start":{"line":212,"column":10},"end":{"line":212,"column":10}}]},"17":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":12}},{"start":{"line":222,"column":12},"end":{"line":222,"column":12}}]},"18":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":19},"end":{"line":224,"column":19}},{"start":{"line":224,"column":19},"end":{"line":224,"column":19}}]},"19":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":227,"column":12}},{"start":{"line":227,"column":12},"end":{"line":227,"column":12}}]},"20":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":10},"end":{"line":233,"column":10}},{"start":{"line":233,"column":10},"end":{"line":233,"column":10}}]},"21":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":10},"end":{"line":250,"column":10}},{"start":{"line":250,"column":10},"end":{"line":250,"column":10}}]},"22":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":12},"end":{"line":260,"column":12}},{"start":{"line":260,"column":12},"end":{"line":260,"column":12}}]},"23":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":19},"end":{"line":262,"column":19}},{"start":{"line":262,"column":19},"end":{"line":262,"column":19}}]},"24":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":12},"end":{"line":265,"column":12}},{"start":{"line":265,"column":12},"end":{"line":265,"column":12}}]},"25":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":10},"end":{"line":271,"column":10}},{"start":{"line":271,"column":10},"end":{"line":271,"column":10}}]},"26":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":10},"end":{"line":287,"column":10}},{"start":{"line":287,"column":10},"end":{"line":287,"column":10}}]},"27":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":301,"column":4}},{"start":{"line":301,"column":4},"end":{"line":301,"column":4}}]},"28":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":6}},{"start":{"line":302,"column":6},"end":{"line":302,"column":6}}]},"29":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"30":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":8},"end":{"line":312,"column":27}},{"start":{"line":312,"column":32},"end":{"line":312,"column":44}}]},"31":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"32":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":336,"column":4}},{"start":{"line":336,"column":4},"end":{"line":336,"column":4}}]},"33":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":12},"end":{"line":353,"column":17}},{"start":{"line":353,"column":21},"end":{"line":353,"column":23}}]},"34":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":14},"end":{"line":354,"column":21}},{"start":{"line":354,"column":25},"end":{"line":354,"column":27}}]},"35":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":58},"end":{"line":360,"column":78}},{"start":{"line":360,"column":82},"end":{"line":360,"column":84}}]},"36":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":6},"end":{"line":367,"column":6}},{"start":{"line":367,"column":6},"end":{"line":367,"column":6}}]},"37":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":6},"end":{"line":373,"column":6}},{"start":{"line":373,"column":6},"end":{"line":373,"column":6}}]},"38":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":10},"end":{"line":373,"column":14}},{"start":{"line":373,"column":18},"end":{"line":373,"column":29}}]},"39":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":10},"end":{"line":377,"column":28}},{"start":{"line":377,"column":32},"end":{"line":377,"column":34}}]},"40":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":6},"end":{"line":407,"column":6}},{"start":{"line":407,"column":6},"end":{"line":407,"column":6}}]}},"code":["'use strict';","","const inflect = require('i')();","const API = require('./api.js');","","/**","* GraphQuery class that translates GraphQL to something digestible by the Composer","* @class","*/","class GraphQuery {","","  /**","  * Create a GraphQuery object","  * @param {String} str The query to execute","  * @param {Number} maxDepth The maximum depth of graph to traverse","  * @param {Nodal.Model} [Model=null] The Model to base your query around (used for testing)","  */","  constructor(str, maxDepth, Model) {","","    let parsed = this.constructor.parse(str, maxDepth);","","    this.identifier = typeof parsed.structure === 'string' ?","      parsed.structure :","      Object.keys(parsed.structure)[0];","    this.name = inflect.singularize(this.identifier);","","    try {","      this.Model = Model || require(`${process.cwd()}/app/models/${this.name}.js`);","    } catch(e) {","      throw new Error(`Model ${this.name} does not exist.`);","    }","","    this.structure = parsed.structure;","    this.joins = parsed.joins;","","  }","","  /**","  * Create and execute a GraphQuery object","  * @param {String} str The query to execute","  * @param {Number} maxDepth The maximum depth of graph to traverse","  * @param {Function} callback The function to execute upon completion","  */","  static query(str, maxDepth, callback) {","","    let graphQuery;","","    try {","      graphQuery = new GraphQuery(str, maxDepth);","    } catch (err) {","      callback(err);","      return false;","    }","","    graphQuery.query(callback);","","    return true;","","  }","","  /**","  * Parse syntax tree of a GraphQL query","  */","  static parseSyntaxTree(str, state, arr) {","","    arr = arr || [];","    state = state || 'NAME';","","    let punc = '():{},';","    let nameRE = /[_A-Za-z][_0-9A-Za-z]*/;","","    const STATES = {","      'NAME': {","        skip: false,","        terminate: true,","        next: 'PROPERTYLIST',","        func: (str, arr) => {","","          let match = str.match(nameRE);","          let name = match ? match[0] : null;","","          arr.push({","            type: 'field',","            data: {","              name: name","            }","          });","","          let len = name ? name.length : 0;","          return str.substr(len);","","        }","      },","      'PROPERTYNAME': {","        skip: false,","        terminate: true,","        next: 'PROPERTYVALUESTART',","        func: (str, arr) => {","","          let match = str.match(nameRE);","          let name = match ? match[0] : null;","","          arr.push({","            type: 'property',","            data: {","              name: name","            }","          });","","          let len = name ? name.length : 0;","          return str.substr(len);","","        }","      },","      'PROPERTYVALUESTART': {","        skip: false,","        terminate: false,","        next: 'PROPERTYVALUE',","        func: (str, arr) => {","","          if (str[0] !== ':') {","            return str;","          }","","          return str.substr(1);","","        }","      },","      'PROPERTYVALUE': {","        skip: false,","        terminate: false,","        next: 'PROPERTYVALUEEND',","        func: (str, arr) => {","","          let cur = arr[arr.length - 1];","","          if (str[0] !== '\"') {","","            let items = [","              {str: 'null', val: null},","              {str: 'true', val: true},","              {str: 'false', val: false}","            ];","","            for (let i = 0; i < items.length; i++) {","              let item = items[i];","              if (str.substr(0, item.str.length) === item.str) {","                cur.data.value = item.val;","                return str.substr(item.str.length);","              }","            }","","            let value = str.match(/^[\\-\\+]?\\d+(\\.\\d+|e[\\-\\+]?\\d+)?/i);","","            if (!value) {","              return str;","            }","","            value = value[0];","            cur.data.value = parseFloat(value);","            return str.substr(value.length);","","          }","","          let i = 1;","          while (str[i]) {","","            if (str[i] === '\"') {","","              let n = 1;","              let c = 0;","","              while (str[i - n] === '\\\\') {","                c++;","                n++;","              }","","              if (!(c & 1)) {","                cur.data.value = str.substring(1, i);","                return str.substring(i + 1);","              }","","            }","","            i++;","","          }","","          return str;","","        }","      },","      'PROPERTYVALUEEND': {","        skip: false,","        terminate: true,","        next: 'PROPERTYNAME',","        func: (str, arr) => {","","          if (str[0] !== ',') {","            return str;","          }","","          return str.substr(1);","","        }","      },","      'PROPERTYLIST': {","        skip: true,","        terminate: true,","        func: (str, arr) => {","","          if (str[0] !== '(') {","            return str;","          }","","          let cur = arr[arr.length - 1];","","          let count = 0;","          let i = 0;","","          while (str[i]) {","            if (str[i] === '(') {","              count++;","            } else if (str[i] === ')') {","              count--;","            }","            if (!count) {","              break;","            }","            i++;","          }","","          if (count) {","            return str;","          }","","          cur.data.properties = this.parseSyntaxTree(str.substring(1, i), 'PROPERTYNAME');","","          return str.substring(i + 1);","","        },","        next: 'LIST'","      },","      'LIST': {","        skip: true,","        terminate: true,","        next: 'NAMEEND',","        func: (str, arr) => {","","          if (str[0] !== '{') {","            return str;","          }","","          let cur = arr[arr.length - 1];","","          let count = 0;","          let i = 0;","","          while (str[i]) {","            if (str[i] === '{') {","              count++;","            } else if (str[i] === '}') {","              count--;","            }","            if (!count) {","              break;","            }","            i++;","          }","","          if (count) {","            return str;","          }","","          cur.data.children = this.parseSyntaxTree(str.substring(1, i), 'NAME');","","          return str.substring(i + 1);","","        }","      },","      'NAMEEND': {","        skip: false,","        terminate: true,","        next: 'NAME',","        func: (str, arr) => {","","          if (str[0] !== ',') {","            return str;","          }","","          return str.substr(1);","","        }","      }","    };","","    /* State machine... */","","    str = str.replace(/^\\s*(.*)$/m, '$1');","","    if (!str) {","      if (STATES[state].terminate) {","        return arr;","      } else {","        throw new Error('Unexpected termination');","      }","    }","","    // Execute next step...","    let next = STATES[state].func(str, arr);","","    if (!STATES[state].skip && (next === str)) {","      throw new Error(`Syntax Error at or near \"${str.substr(0, 20)}\"`);","    }","","    if (!STATES[state].next) {","      return arr;","    }","","    return this.parseSyntaxTree(next, STATES[state].next, arr);","","  }","","  /**","  * Fully parse a GraphQL query, get necessary joins to make in SQL","  */","  static parse(str, max) {","","    let joins = {};","    let tree = this.formatTree(","      this.parseSyntaxTree(str),","      max,","      joins","    );","","    if (!tree.length) {","      throw new Error('Invalid query: List an object to query');","    }","","    return {","      structure: tree[0],","      joins: joins","    };","","  }","","  /**","  * Format a parsed syntax tree in a way that the Composer expects","  */","  static formatTree(tree, max, joins, parents) {","","    max = Math.max(max | 0, 0);","    joins = joins || {};","    parents = parents || [];","","    let depth = parents.length;","","    return tree.map(item => {","","      joins[parents.concat(item.data.name).join('__')] = (item.data.properties || [])","        .filter(p => p.type === 'property')","        .reduce((obj, p) => {","          obj[p.data.name] = p.data.value;","          return obj;","        }, {});","","      if (!item.data.children) {","","        return item.data.name;","","      }","","      if (!max || depth < max) {","","        let nameObj = {};","        nameObj[item.data.name] = this.formatTree(","          item.data.children || [],","          max,","          joins,","          parents.concat(item.data.name)","        );","","        return nameObj;","","      } else {","","        return null;","","      }","","    }).filter(item => item);","","  }","","  /**","  * Query the GraphQuery object from the database","  * @param {Function} callback The function to execute upon completion","  */","  query(callback) {","","    let query = this.Model.query().safeWhere(this.joins[this.identifier]);","","    Object.keys(this.joins).forEach(joinName => {","","      let joinNames = joinName.split('__');","      joinNames.shift();","      if (!joinNames.length) {","        return;","      }","","      query = query.safeJoin(joinNames.join('__'), this.joins[joinName]);","","    });","","    query.end((err, models) => {","","      callback(err, models, this.structure[this.identifier]);","","    });","","    return this;","","  }","","}","","module.exports = GraphQuery;",""],"l":{"3":1,"4":1,"20":0,"22":0,"25":0,"27":0,"28":0,"30":0,"33":0,"34":0,"46":0,"48":0,"49":0,"51":0,"52":0,"55":0,"57":0,"66":0,"67":0,"69":0,"70":0,"72":0,"79":0,"80":0,"82":0,"89":0,"90":0,"100":0,"101":0,"103":0,"110":0,"111":0,"121":0,"122":0,"125":0,"135":0,"137":0,"139":0,"145":0,"146":0,"147":0,"148":0,"149":0,"153":0,"155":0,"156":0,"159":0,"160":0,"161":0,"165":0,"166":0,"168":0,"170":0,"171":0,"173":0,"174":0,"175":0,"178":0,"179":0,"180":0,"185":0,"189":0,"199":0,"200":0,"203":0,"212":0,"213":0,"216":0,"218":0,"219":0,"221":0,"222":0,"223":0,"224":0,"225":0,"227":0,"228":0,"230":0,"233":0,"234":0,"237":0,"239":0,"250":0,"251":0,"254":0,"256":0,"257":0,"259":0,"260":0,"261":0,"262":0,"263":0,"265":0,"266":0,"268":0,"271":0,"272":0,"275":0,"277":0,"287":0,"288":0,"291":0,"299":0,"301":0,"302":0,"303":0,"305":0,"310":0,"312":0,"313":0,"316":0,"317":0,"320":0,"329":0,"330":0,"336":0,"337":0,"340":0,"352":0,"353":0,"354":0,"356":0,"358":0,"360":0,"361":0,"363":0,"364":0,"367":0,"369":0,"373":0,"375":0,"376":0,"383":0,"387":0,"391":0,"401":0,"403":0,"405":0,"406":0,"407":0,"408":0,"411":0,"415":0,"417":0,"421":0,"427":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/migration.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/migration.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":18}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":7}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":6},"end":{"line":33,"column":9}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":22}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":18},"end":{"line":43,"column":32}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":40},"end":{"line":55,"column":54}}},"7":{"name":"(anonymous_7)","line":64,"loc":{"start":{"line":64,"column":13},"end":{"line":64,"column":32}}},"8":{"name":"(anonymous_8)","line":68,"loc":{"start":{"line":68,"column":18},"end":{"line":68,"column":32}}},"9":{"name":"(anonymous_9)","line":80,"loc":{"start":{"line":80,"column":42},"end":{"line":80,"column":56}}},"10":{"name":"(anonymous_10)","line":89,"loc":{"start":{"line":89,"column":13},"end":{"line":89,"column":46}}},"11":{"name":"(anonymous_11)","line":97,"loc":{"start":{"line":97,"column":11},"end":{"line":97,"column":19}}},"12":{"name":"(anonymous_12)","line":105,"loc":{"start":{"line":105,"column":13},"end":{"line":105,"column":62}}},"13":{"name":"(anonymous_13)","line":113,"loc":{"start":{"line":113,"column":13},"end":{"line":113,"column":47}}},"14":{"name":"(anonymous_14)","line":123,"loc":{"start":{"line":123,"column":11},"end":{"line":123,"column":45}}},"15":{"name":"(anonymous_15)","line":133,"loc":{"start":{"line":133,"column":12},"end":{"line":133,"column":28}}},"16":{"name":"(anonymous_16)","line":141,"loc":{"start":{"line":141,"column":14},"end":{"line":141,"column":41}}},"17":{"name":"(anonymous_17)","line":149,"loc":{"start":{"line":149,"column":13},"end":{"line":149,"column":35}}},"18":{"name":"(anonymous_18)","line":157,"loc":{"start":{"line":157,"column":11},"end":{"line":157,"column":27}}},"19":{"name":"(anonymous_19)","line":165,"loc":{"start":{"line":165,"column":15},"end":{"line":165,"column":39}}},"20":{"name":"(anonymous_20)","line":176,"loc":{"start":{"line":176,"column":16},"end":{"line":176,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":57}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"6":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"7":{"start":{"line":16,"column":6},"end":{"line":16,"column":68}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":19}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":42}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":14}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":14}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"14":{"start":{"line":43,"column":4},"end":{"line":60,"column":19}},"15":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"16":{"start":{"line":46,"column":8},"end":{"line":46,"column":29}},"17":{"start":{"line":49,"column":6},"end":{"line":49,"column":37}},"18":{"start":{"line":51,"column":6},"end":{"line":53,"column":9}},"19":{"start":{"line":55,"column":6},"end":{"line":58,"column":9}},"20":{"start":{"line":56,"column":8},"end":{"line":56,"column":30}},"21":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"22":{"start":{"line":66,"column":4},"end":{"line":66,"column":29}},"23":{"start":{"line":68,"column":4},"end":{"line":85,"column":19}},"24":{"start":{"line":70,"column":6},"end":{"line":72,"column":7}},"25":{"start":{"line":71,"column":8},"end":{"line":71,"column":29}},"26":{"start":{"line":74,"column":6},"end":{"line":74,"column":44}},"27":{"start":{"line":76,"column":6},"end":{"line":78,"column":9}},"28":{"start":{"line":80,"column":6},"end":{"line":83,"column":9}},"29":{"start":{"line":81,"column":8},"end":{"line":81,"column":30}},"30":{"start":{"line":82,"column":8},"end":{"line":82,"column":22}},"31":{"start":{"line":91,"column":4},"end":{"line":91,"column":75}},"32":{"start":{"line":93,"column":4},"end":{"line":93,"column":73}},"33":{"start":{"line":99,"column":4},"end":{"line":99,"column":33}},"34":{"start":{"line":101,"column":4},"end":{"line":101,"column":57}},"35":{"start":{"line":107,"column":4},"end":{"line":107,"column":94}},"36":{"start":{"line":109,"column":4},"end":{"line":109,"column":94}},"37":{"start":{"line":115,"column":4},"end":{"line":115,"column":34}},"38":{"start":{"line":117,"column":4},"end":{"line":117,"column":61}},"39":{"start":{"line":119,"column":4},"end":{"line":119,"column":84}},"40":{"start":{"line":125,"column":4},"end":{"line":125,"column":34}},"41":{"start":{"line":127,"column":4},"end":{"line":127,"column":59}},"42":{"start":{"line":129,"column":4},"end":{"line":129,"column":93}},"43":{"start":{"line":135,"column":4},"end":{"line":135,"column":42}},"44":{"start":{"line":137,"column":4},"end":{"line":137,"column":76}},"45":{"start":{"line":143,"column":4},"end":{"line":143,"column":55}},"46":{"start":{"line":145,"column":4},"end":{"line":145,"column":89}},"47":{"start":{"line":151,"column":4},"end":{"line":151,"column":49}},"48":{"start":{"line":153,"column":4},"end":{"line":153,"column":73}},"49":{"start":{"line":159,"column":4},"end":{"line":159,"column":41}},"50":{"start":{"line":161,"column":4},"end":{"line":161,"column":65}},"51":{"start":{"line":167,"column":4},"end":{"line":172,"column":5}},"52":{"start":{"line":168,"column":6},"end":{"line":168,"column":55}},"53":{"start":{"line":169,"column":6},"end":{"line":169,"column":82}},"54":{"start":{"line":171,"column":6},"end":{"line":171,"column":91}},"55":{"start":{"line":178,"column":4},"end":{"line":183,"column":5}},"56":{"start":{"line":179,"column":6},"end":{"line":179,"column":56}},"57":{"start":{"line":180,"column":6},"end":{"line":180,"column":86}},"58":{"start":{"line":182,"column":6},"end":{"line":182,"column":91}},"59":{"start":{"line":189,"column":0},"end":{"line":189,"column":27}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":12}},{"start":{"line":56,"column":16},"end":{"line":56,"column":29}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":28},"end":{"line":74,"column":34}},{"start":{"line":74,"column":38},"end":{"line":74,"column":42}}]},"6":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":12}},{"start":{"line":81,"column":16},"end":{"line":81,"column":29}}]},"7":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":17},"end":{"line":115,"column":27}},{"start":{"line":115,"column":31},"end":{"line":115,"column":33}}]},"8":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":17},"end":{"line":125,"column":27}},{"start":{"line":125,"column":31},"end":{"line":125,"column":33}}]},"9":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"10":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]}},"code":["'use strict';","","const Database = require('./database.js');","const SchemaGenerator = require('./schema_generator.js');","","const fs = require('fs');","","const colors = require('colors/safe');","const inflect = require('i')();","","class Migration {","","  constructor(db) {","","    if (!db) {","      throw new Error('Migration required valid database instance');","    }","","    this.id = null;","","    this.db = db;","","    this.schema = new SchemaGenerator(db);","","  }","","  up() {","","    return [];","","  }","","  down() {","","    return [];","","  }","","  executeUp(callback) {","","    let schema = this.schema;","","    schema.fetch((function(err) {","","      if (err) {","        return callback(err);","      }","","      schema.setMigrationId(this.id);","","      let up = this.up().concat([","        'INSERT INTO \"schema_migrations\"(\"id\", \"schema\") VALUES(' + this.id + ', \\'' + schema.generate() + '\\')'","      ]);","","      this.db.transaction(up.join(';'), function(err) {","        !err && schema.save();","        return callback(err);","      });","","    }).bind(this));","","  }","","  executeDown(callback, prevId) {","","    let schema = this.schema;","","    schema.fetch((function(err) {","","      if (err) {","        return callback(err);","      }","","      schema.setMigrationId(prevId || null);","","      let down = this.down().concat([","        'DELETE FROM \"schema_migrations\" WHERE id = ' + this.id","      ]);","","      this.db.transaction(down.join(';'), function(err) {","        !err && schema.save();","        callback(err);","      });","","    }).bind(this));","","  }","","  createTable(table, arrFieldData, modelName) {","","    arrFieldData = this.schema.createTable(table, arrFieldData, modelName);","","    return this.db.adapter.generateCreateTableQuery(table, arrFieldData);","","  }","","  dropTable(table) {","","    this.schema.dropTable(table);","","    return this.db.adapter.generateDropTableQuery(table);","","  }","","  renameTable(table, newTableName, renameModel, newModelName) {","","    let modelSchema = this.schema.renameTable(table, newTableName, renameModel, newModelName);","","    return this.db.adapter.generateAlterTableRename(table, newTableName, modelSchema.columns);","","  }","","  alterColumn(table, column, type, properties) {","","    properties = properties || {};","","    this.schema.alterColumn(table, column, type, properties);","","    return this.db.adapter.generateAlterTableQuery(table, column, type, properties);","","  }","","  addColumn(table, column, type, properties) {","","    properties = properties || {};","","    this.schema.addColumn(table, column, type, properties);","","    return this.db.adapter.generateAlterTableAddColumnQuery(table, column, type, properties);","","  }","","  dropColumn(table, column) {","","    this.schema.dropColumn(table, column);","","    return this.db.adapter.generateAlterTableDropColumnQuery(table, column);","","  }","","  renameColumn(table, column, newColumn) {","","    this.schema.renameColumn(table, column, newColumn);","","    return this.db.adapter.generateAlterTableRenameColumnQuery(table, column, newColumn);","","  }","","  createIndex(table, column, type) {","","    this.schema.createIndex(table, column, type);","","    return this.db.adapter.generateCreateIndexQuery(table, column, type);","","  }","","  dropIndex(table, column) {","","    this.schema.dropIndex(table, column);","","    return this.db.adapter.generateDropIndexQuery(table, column);","","  }","","  addForeignKey(table, referenceTable) {","","    if (this.db.adapter.supportsForeignKey) {","      this.schema.addForeignKey(table, referenceTable);","      return this.db.adapter.generateSimpleForeignKeyQuery(table, referenceTable);","    } else {","      throw new Error(`${this.db.adapter.constructor.name} does not support foreign keys`);","    }","","  }","","  dropForeignKey(table, referenceTable) {","","    if (this.db.adapter.supportsForeignKey) {","      this.schema.dropForeignKey(table, referenceTable);","      return this.db.adapter.generateDropSimpleForeignKeyQuery(table, referenceTable);","    } else {","      throw new Error(`${this.db.adapter.constructor.name} does not support foreign keys`);","    }","  }","","","};","","module.exports = Migration;",""],"l":{"3":1,"4":1,"6":1,"8":1,"9":1,"15":0,"16":0,"19":0,"21":0,"23":0,"29":0,"35":0,"41":0,"43":0,"45":0,"46":0,"49":0,"51":0,"55":0,"56":0,"57":0,"66":0,"68":0,"70":0,"71":0,"74":0,"76":0,"80":0,"81":0,"82":0,"91":0,"93":0,"99":0,"101":0,"107":0,"109":0,"115":0,"117":0,"119":0,"125":0,"127":0,"129":0,"135":0,"137":0,"143":0,"145":0,"151":0,"153":0,"159":0,"161":0,"167":0,"168":0,"169":0,"171":0,"178":0,"179":0,"180":0,"182":0,"189":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/schema_generator.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/db/schema_generator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":13},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":6},"end":{"line":20,"column":17}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":7},"end":{"line":26,"column":18}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":114},"end":{"line":28,"column":136}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":6},"end":{"line":42,"column":17}}},"6":{"name":"(anonymous_6)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":42}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":43},"end":{"line":58,"column":55}}},"8":{"name":"(anonymous_8)","line":72,"loc":{"start":{"line":72,"column":5},"end":{"line":72,"column":14}}},"9":{"name":"(anonymous_9)","line":82,"loc":{"start":{"line":82,"column":16},"end":{"line":82,"column":21}}},"10":{"name":"(anonymous_10)","line":86,"loc":{"start":{"line":86,"column":11},"end":{"line":86,"column":19}}},"11":{"name":"(anonymous_11)","line":89,"loc":{"start":{"line":89,"column":38},"end":{"line":89,"column":50}}},"12":{"name":"(anonymous_12)","line":95,"loc":{"start":{"line":95,"column":13},"end":{"line":95,"column":47}}},"13":{"name":"(anonymous_13)","line":109,"loc":{"start":{"line":109,"column":36},"end":{"line":109,"column":48}}},"14":{"name":"(anonymous_14)","line":127,"loc":{"start":{"line":127,"column":27},"end":{"line":127,"column":48}}},"15":{"name":"(anonymous_15)","line":140,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":19}}},"16":{"name":"(anonymous_16)","line":154,"loc":{"start":{"line":154,"column":13},"end":{"line":154,"column":62}}},"17":{"name":"(anonymous_17)","line":175,"loc":{"start":{"line":175,"column":13},"end":{"line":175,"column":47}}},"18":{"name":"(anonymous_18)","line":182,"loc":{"start":{"line":182,"column":46},"end":{"line":182,"column":58}}},"19":{"name":"(anonymous_19)","line":190,"loc":{"start":{"line":190,"column":58},"end":{"line":190,"column":70}}},"20":{"name":"(anonymous_20)","line":206,"loc":{"start":{"line":206,"column":11},"end":{"line":206,"column":45}}},"21":{"name":"(anonymous_21)","line":213,"loc":{"start":{"line":213,"column":46},"end":{"line":213,"column":58}}},"22":{"name":"(anonymous_22)","line":223,"loc":{"start":{"line":223,"column":53},"end":{"line":223,"column":65}}},"23":{"name":"(anonymous_23)","line":243,"loc":{"start":{"line":243,"column":12},"end":{"line":243,"column":28}}},"24":{"name":"(anonymous_24)","line":246,"loc":{"start":{"line":246,"column":46},"end":{"line":246,"column":58}}},"25":{"name":"(anonymous_25)","line":256,"loc":{"start":{"line":256,"column":46},"end":{"line":256,"column":61}}},"26":{"name":"(anonymous_26)","line":268,"loc":{"start":{"line":268,"column":14},"end":{"line":268,"column":41}}},"27":{"name":"(anonymous_27)","line":271,"loc":{"start":{"line":271,"column":46},"end":{"line":271,"column":58}}},"28":{"name":"(anonymous_28)","line":281,"loc":{"start":{"line":281,"column":53},"end":{"line":281,"column":65}}},"29":{"name":"(anonymous_29)","line":295,"loc":{"start":{"line":295,"column":13},"end":{"line":295,"column":35}}},"30":{"name":"(anonymous_30)","line":297,"loc":{"start":{"line":297,"column":28},"end":{"line":297,"column":40}}},"31":{"name":"(anonymous_31)","line":309,"loc":{"start":{"line":309,"column":11},"end":{"line":309,"column":27}}},"32":{"name":"(anonymous_32)","line":311,"loc":{"start":{"line":311,"column":39},"end":{"line":311,"column":51}}},"33":{"name":"(anonymous_33)","line":319,"loc":{"start":{"line":319,"column":15},"end":{"line":319,"column":39}}},"34":{"name":"(anonymous_34)","line":336,"loc":{"start":{"line":336,"column":16},"end":{"line":336,"column":40}}},"35":{"name":"(anonymous_35)","line":353,"loc":{"start":{"line":353,"column":6},"end":{"line":353,"column":13}}},"36":{"name":"(anonymous_36)","line":357,"loc":{"start":{"line":357,"column":10},"end":{"line":357,"column":13}}},"37":{"name":"(anonymous_37)","line":375,"loc":{"start":{"line":375,"column":22},"end":{"line":375,"column":42}}},"38":{"name":"(anonymous_38)","line":382,"loc":{"start":{"line":382,"column":25},"end":{"line":382,"column":37}}},"39":{"name":"(anonymous_39)","line":397,"loc":{"start":{"line":397,"column":39},"end":{"line":397,"column":51}}},"40":{"name":"(anonymous_40)","line":405,"loc":{"start":{"line":405,"column":33},"end":{"line":405,"column":54}}},"41":{"name":"(anonymous_41)","line":413,"loc":{"start":{"line":413,"column":27},"end":{"line":413,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":17}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":28}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":21}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":22}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":41}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":45}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":46}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":48}},"11":{"start":{"line":28,"column":4},"end":{"line":38,"column":19}},"12":{"start":{"line":30,"column":6},"end":{"line":32,"column":7}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"14":{"start":{"line":34,"column":6},"end":{"line":34,"column":76}},"15":{"start":{"line":36,"column":6},"end":{"line":36,"column":21}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":45}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":46}},"18":{"start":{"line":45,"column":4},"end":{"line":45,"column":48}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"20":{"start":{"line":51,"column":4},"end":{"line":51,"column":34}},"21":{"start":{"line":53,"column":4},"end":{"line":53,"column":56}},"22":{"start":{"line":55,"column":4},"end":{"line":55,"column":104}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":27}},"24":{"start":{"line":58,"column":4},"end":{"line":64,"column":7}},"25":{"start":{"line":59,"column":6},"end":{"line":63,"column":7}},"26":{"start":{"line":60,"column":8},"end":{"line":60,"column":41}},"27":{"start":{"line":61,"column":13},"end":{"line":63,"column":7}},"28":{"start":{"line":62,"column":8},"end":{"line":62,"column":44}},"29":{"start":{"line":66,"column":4},"end":{"line":66,"column":42}},"30":{"start":{"line":68,"column":4},"end":{"line":68,"column":22}},"31":{"start":{"line":74,"column":4},"end":{"line":74,"column":45}},"32":{"start":{"line":75,"column":4},"end":{"line":75,"column":38}},"33":{"start":{"line":76,"column":4},"end":{"line":76,"column":40}},"34":{"start":{"line":78,"column":4},"end":{"line":78,"column":16}},"35":{"start":{"line":83,"column":4},"end":{"line":83,"column":26}},"36":{"start":{"line":88,"column":4},"end":{"line":88,"column":29}},"37":{"start":{"line":89,"column":4},"end":{"line":91,"column":13}},"38":{"start":{"line":90,"column":6},"end":{"line":90,"column":39}},"39":{"start":{"line":97,"column":4},"end":{"line":97,"column":58}},"40":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"41":{"start":{"line":100,"column":6},"end":{"line":100,"column":92}},"42":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"43":{"start":{"line":104,"column":6},"end":{"line":104,"column":88}},"44":{"start":{"line":107,"column":4},"end":{"line":107,"column":42}},"45":{"start":{"line":109,"column":4},"end":{"line":111,"column":7}},"46":{"start":{"line":110,"column":6},"end":{"line":110,"column":20}},"47":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"48":{"start":{"line":114,"column":6},"end":{"line":114,"column":58}},"49":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"50":{"start":{"line":118,"column":6},"end":{"line":118,"column":64}},"51":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"52":{"start":{"line":122,"column":6},"end":{"line":122,"column":64}},"53":{"start":{"line":125,"column":4},"end":{"line":125,"column":56}},"54":{"start":{"line":127,"column":4},"end":{"line":129,"column":19}},"55":{"start":{"line":128,"column":6},"end":{"line":128,"column":39}},"56":{"start":{"line":131,"column":4},"end":{"line":134,"column":6}},"57":{"start":{"line":136,"column":4},"end":{"line":136,"column":25}},"58":{"start":{"line":142,"column":4},"end":{"line":142,"column":43}},"59":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"60":{"start":{"line":145,"column":6},"end":{"line":145,"column":77}},"61":{"start":{"line":148,"column":4},"end":{"line":148,"column":35}},"62":{"start":{"line":150,"column":4},"end":{"line":150,"column":16}},"63":{"start":{"line":156,"column":4},"end":{"line":156,"column":43}},"64":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"65":{"start":{"line":159,"column":6},"end":{"line":159,"column":77}},"66":{"start":{"line":162,"column":4},"end":{"line":162,"column":49}},"67":{"start":{"line":164,"column":4},"end":{"line":169,"column":5}},"68":{"start":{"line":165,"column":6},"end":{"line":165,"column":68}},"69":{"start":{"line":166,"column":6},"end":{"line":166,"column":54}},"70":{"start":{"line":167,"column":6},"end":{"line":167,"column":37}},"71":{"start":{"line":168,"column":6},"end":{"line":168,"column":28}},"72":{"start":{"line":171,"column":4},"end":{"line":171,"column":35}},"73":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"74":{"start":{"line":178,"column":6},"end":{"line":178,"column":31}},"75":{"start":{"line":181,"column":4},"end":{"line":181,"column":29}},"76":{"start":{"line":182,"column":4},"end":{"line":184,"column":13}},"77":{"start":{"line":183,"column":6},"end":{"line":183,"column":39}},"78":{"start":{"line":186,"column":4},"end":{"line":188,"column":5}},"79":{"start":{"line":187,"column":6},"end":{"line":187,"column":62}},"80":{"start":{"line":190,"column":4},"end":{"line":192,"column":13}},"81":{"start":{"line":191,"column":6},"end":{"line":191,"column":31}},"82":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"83":{"start":{"line":195,"column":6},"end":{"line":195,"column":89}},"84":{"start":{"line":198,"column":4},"end":{"line":198,"column":32}},"85":{"start":{"line":200,"column":4},"end":{"line":200,"column":54}},"86":{"start":{"line":202,"column":4},"end":{"line":202,"column":16}},"87":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"88":{"start":{"line":209,"column":6},"end":{"line":209,"column":31}},"89":{"start":{"line":212,"column":4},"end":{"line":212,"column":29}},"90":{"start":{"line":213,"column":4},"end":{"line":215,"column":13}},"91":{"start":{"line":214,"column":6},"end":{"line":214,"column":39}},"92":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"93":{"start":{"line":218,"column":6},"end":{"line":218,"column":62}},"94":{"start":{"line":221,"column":4},"end":{"line":221,"column":39}},"95":{"start":{"line":223,"column":4},"end":{"line":225,"column":13}},"96":{"start":{"line":224,"column":6},"end":{"line":224,"column":31}},"97":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"98":{"start":{"line":228,"column":6},"end":{"line":228,"column":89}},"99":{"start":{"line":231,"column":4},"end":{"line":235,"column":6}},"100":{"start":{"line":237,"column":4},"end":{"line":237,"column":41}},"101":{"start":{"line":239,"column":4},"end":{"line":239,"column":16}},"102":{"start":{"line":245,"column":4},"end":{"line":245,"column":29}},"103":{"start":{"line":246,"column":4},"end":{"line":248,"column":13}},"104":{"start":{"line":247,"column":6},"end":{"line":247,"column":39}},"105":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"106":{"start":{"line":251,"column":6},"end":{"line":251,"column":62}},"107":{"start":{"line":254,"column":4},"end":{"line":254,"column":39}},"108":{"start":{"line":256,"column":4},"end":{"line":256,"column":97}},"109":{"start":{"line":256,"column":63},"end":{"line":256,"column":77}},"110":{"start":{"line":258,"column":4},"end":{"line":260,"column":5}},"111":{"start":{"line":259,"column":6},"end":{"line":259,"column":89}},"112":{"start":{"line":262,"column":4},"end":{"line":262,"column":47}},"113":{"start":{"line":264,"column":4},"end":{"line":264,"column":16}},"114":{"start":{"line":270,"column":4},"end":{"line":270,"column":29}},"115":{"start":{"line":271,"column":4},"end":{"line":273,"column":13}},"116":{"start":{"line":272,"column":6},"end":{"line":272,"column":39}},"117":{"start":{"line":275,"column":4},"end":{"line":277,"column":5}},"118":{"start":{"line":276,"column":6},"end":{"line":276,"column":62}},"119":{"start":{"line":279,"column":4},"end":{"line":279,"column":39}},"120":{"start":{"line":281,"column":4},"end":{"line":283,"column":13}},"121":{"start":{"line":282,"column":6},"end":{"line":282,"column":31}},"122":{"start":{"line":285,"column":4},"end":{"line":287,"column":5}},"123":{"start":{"line":286,"column":6},"end":{"line":286,"column":89}},"124":{"start":{"line":289,"column":4},"end":{"line":289,"column":37}},"125":{"start":{"line":291,"column":4},"end":{"line":291,"column":16}},"126":{"start":{"line":297,"column":4},"end":{"line":301,"column":5}},"127":{"start":{"line":298,"column":6},"end":{"line":298,"column":54}},"128":{"start":{"line":300,"column":6},"end":{"line":300,"column":88}},"129":{"start":{"line":303,"column":4},"end":{"line":303,"column":66}},"130":{"start":{"line":305,"column":4},"end":{"line":305,"column":15}},"131":{"start":{"line":311,"column":4},"end":{"line":313,"column":7}},"132":{"start":{"line":312,"column":6},"end":{"line":312,"column":57}},"133":{"start":{"line":315,"column":4},"end":{"line":315,"column":16}},"134":{"start":{"line":321,"column":4},"end":{"line":321,"column":45}},"135":{"start":{"line":322,"column":4},"end":{"line":322,"column":63}},"136":{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},"137":{"start":{"line":325,"column":6},"end":{"line":325,"column":61}},"138":{"start":{"line":328,"column":4},"end":{"line":330,"column":5}},"139":{"start":{"line":329,"column":6},"end":{"line":329,"column":70}},"140":{"start":{"line":332,"column":4},"end":{"line":332,"column":16}},"141":{"start":{"line":338,"column":4},"end":{"line":338,"column":45}},"142":{"start":{"line":339,"column":4},"end":{"line":339,"column":63}},"143":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"144":{"start":{"line":342,"column":6},"end":{"line":342,"column":61}},"145":{"start":{"line":345,"column":4},"end":{"line":347,"column":5}},"146":{"start":{"line":346,"column":6},"end":{"line":346,"column":70}},"147":{"start":{"line":349,"column":4},"end":{"line":349,"column":16}},"148":{"start":{"line":354,"column":4},"end":{"line":354,"column":38}},"149":{"start":{"line":359,"column":4},"end":{"line":359,"column":29}},"150":{"start":{"line":360,"column":4},"end":{"line":360,"column":31}},"151":{"start":{"line":361,"column":4},"end":{"line":361,"column":49}},"152":{"start":{"line":362,"column":4},"end":{"line":362,"column":36}},"153":{"start":{"line":364,"column":4},"end":{"line":368,"column":6}},"154":{"start":{"line":370,"column":4},"end":{"line":389,"column":5}},"155":{"start":{"line":372,"column":6},"end":{"line":387,"column":9}},"156":{"start":{"line":376,"column":12},"end":{"line":384,"column":23}},"157":{"start":{"line":382,"column":39},"end":{"line":382,"column":50}},"158":{"start":{"line":391,"column":4},"end":{"line":426,"column":5}},"159":{"start":{"line":393,"column":6},"end":{"line":424,"column":9}},"160":{"start":{"line":398,"column":10},"end":{"line":398,"column":35}},"161":{"start":{"line":399,"column":10},"end":{"line":420,"column":23}},"162":{"start":{"line":406,"column":14},"end":{"line":415,"column":25}},"163":{"start":{"line":413,"column":41},"end":{"line":413,"column":52}},"164":{"start":{"line":428,"column":4},"end":{"line":432,"column":18}},"165":{"start":{"line":438,"column":0},"end":{"line":438,"column":33}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":15},"end":{"line":21,"column":23}},{"start":{"line":21,"column":27},"end":{"line":21,"column":44}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":17}},{"start":{"line":34,"column":21},"end":{"line":34,"column":39}},{"start":{"line":34,"column":43},"end":{"line":34,"column":75}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":15},"end":{"line":43,"column":23}},{"start":{"line":43,"column":27},"end":{"line":43,"column":44}}]},"5":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":17},"end":{"line":51,"column":27}},{"start":{"line":51,"column":31},"end":{"line":51,"column":33}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":24},"end":{"line":55,"column":97}},{"start":{"line":55,"column":101},"end":{"line":55,"column":103}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":10},"end":{"line":59,"column":38}},{"start":{"line":59,"column":42},"end":{"line":59,"column":71}}]},"9":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":13},"end":{"line":61,"column":13}},{"start":{"line":61,"column":13},"end":{"line":61,"column":13}}]},"10":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":17},"end":{"line":61,"column":48}},{"start":{"line":61,"column":52},"end":{"line":61,"column":84}}]},"11":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":18},"end":{"line":75,"column":31}},{"start":{"line":75,"column":35},"end":{"line":75,"column":37}}]},"12":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":19},"end":{"line":76,"column":33}},{"start":{"line":76,"column":37},"end":{"line":76,"column":39}}]},"13":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":21},"end":{"line":97,"column":30}},{"start":{"line":97,"column":34},"end":{"line":97,"column":57}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"15":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"16":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"17":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"18":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"19":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"20":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"21":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"22":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":21},"end":{"line":165,"column":33}},{"start":{"line":165,"column":37},"end":{"line":165,"column":67}}]},"23":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"24":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"25":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"26":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"27":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"28":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"29":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"30":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"31":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"32":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"33":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":297,"column":4}},{"start":{"line":297,"column":4},"end":{"line":297,"column":4}}]},"34":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":13},"end":{"line":298,"column":30}},{"start":{"line":298,"column":34},"end":{"line":298,"column":53}}]},"35":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":15},"end":{"line":312,"column":32}},{"start":{"line":312,"column":36},"end":{"line":312,"column":55}}]},"36":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"37":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"38":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":4},"end":{"line":341,"column":4}},{"start":{"line":341,"column":4},"end":{"line":341,"column":4}}]},"39":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":4},"end":{"line":345,"column":4}},{"start":{"line":345,"column":4},"end":{"line":345,"column":4}}]},"40":{"line":367,"type":"cond-expr","locations":[{"start":{"line":367,"column":77},"end":{"line":367,"column":80}},{"start":{"line":367,"column":83},"end":{"line":367,"column":85}}]},"41":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":50},"end":{"line":367,"column":59}},{"start":{"line":367,"column":63},"end":{"line":367,"column":73}}]},"42":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"43":{"line":381,"type":"cond-expr","locations":[{"start":{"line":381,"column":36},"end":{"line":381,"column":69}},{"start":{"line":381,"column":72},"end":{"line":381,"column":74}}]},"44":{"line":386,"type":"cond-expr","locations":[{"start":{"line":386,"column":29},"end":{"line":386,"column":32}},{"start":{"line":386,"column":35},"end":{"line":386,"column":37}}]},"45":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":4}},{"start":{"line":391,"column":4},"end":{"line":391,"column":4}}]},"46":{"line":412,"type":"cond-expr","locations":[{"start":{"line":412,"column":44},"end":{"line":412,"column":100}},{"start":{"line":412,"column":103},"end":{"line":412,"column":105}}]}},"code":["'use strict';","","const fs = require('fs');","const inflect = require('i')();","","class SchemaGenerator {","","  constructor(db) {","","    this.db = db;","","    this.migrationId = null;","    this.models = {};","    this.indices = [];","","    this._defaultPath = 'db/schema.json';","","  }","","  load(filename) {","    filename = filename || this._defaultPath;","    filename = process.cwd() + '/' + filename;","    return this.read(fs.readFileSync(filename));","  }","","  fetch(callback) {","","    this.db.query('SELECT \"schema_migrations\".\"schema\" FROM \"schema_migrations\" ORDER BY \"id\" DESC LIMIT 1', [], (function(err, result) {","","      if (err) {","        return callback(err);","      }","","      result.rows && result.rows.length && this.read(result.rows[0].schema);","","      callback(null);","","    }).bind(this));","","  }","","  save(filename) {","    filename = filename || this._defaultPath;","    filename = process.cwd() + '/' + filename;","    fs.writeFileSync(filename, this.generate());","    return true;","  }","","  mergeProperties(columnData, properties) {","","    properties = properties || {};","","    let defaults = this.db.adapter.typePropertyDefaults;","","    let oldProperties = this.db.adapter.getTypeProperties(columnData.type, columnData.properties) || {};","    let newProperties = {};","","    this.db.adapter.typeProperties.forEach(function(v) {","      if (properties.hasOwnProperty(v) && properties[v] !== defaults[v]) {","        newProperties[v] = properties[v];","      } else if (oldProperties.hasOwnProperty(v) && oldProperties[v] !== defaults[v]) {","        newProperties[v] = oldProperties[v];","      }","    });","","    columnData.properties = newProperties;","","    return columnData;","","  }","","  set(schema) {","","    this.setMigrationId(schema.migration_id);","    this.models = schema.models || {};","    this.indices = schema.indices || [];","","    return true;","","  }","","  setMigrationId(id) {","    this.migrationId = id;","  }","","  findClass(table) {","","    let models = this.models;","    return Object.keys(models).filter(function(v) {","      return models[v].table === table;","    }).pop();","","  }","","  createTable(table, arrColumnData, modelName) {","","    let tableClass = modelName || inflect.classify(table);","","    if (this.models[tableClass]) {","      throw new Error('Model with name \"' + tableClass + '\" already exists in your schema');","    }","","    if (this.findClass(table)) {","      throw new Error('Table with name \"' + table + '\" already exists in your schema.');","    }","","    arrColumnData = arrColumnData.slice();","","    let columns = arrColumnData.map(function(v) {","      return v.name;","    });","","    if (columns.indexOf('id') === -1) {","      arrColumnData.unshift({name: 'id', type: 'serial'});","    }","","    if (columns.indexOf('created_at') === -1) {","      arrColumnData.push({name:'created_at', type: 'datetime'});","    }","","    if (columns.indexOf('updated_at') === -1) {","      arrColumnData.push({name:'updated_at', type: 'datetime'});","    }","","    let defaults = this.db.adapter.typePropertyDefaults;","","    arrColumnData.forEach((function(columnData) {","      this.mergeProperties(columnData);","    }).bind(this));","","    this.models[tableClass] = {","      table: table,","      columns: arrColumnData","    };","","    return arrColumnData;","","  }","","  dropTable(table) {","","    let tableClass = this.findClass(table);","","    if (!tableClass) {","      throw new Error('Table \"' + table + '\" does not exist in your schema');","    }","","    delete this.models[tableClass];","","    return true;","","  }","","  renameTable(table, newTableName, renameModel, newModelName) {","","    let tableClass = this.findClass(table);","","    if (!tableClass) {","      throw new Error('Table \"' + table + '\" does not exist in your schema');","    }","","    this.models[tableClass].table = newTableName;","","    if (renameModel) {","      let newClass = newModelName || inflect.classify(newTableName);","      this.models[newClass] = this.models[tableClass];","      delete this.models[tableClass];","      tableClass = newClass;","    }","","    return this.models[tableClass];","","  }","","  alterColumn(table, column, type, properties) {","","    if (properties.primary_key) {","      delete properties.unique;","    }","","    let models = this.models;","    let modelKey = Object.keys(models).filter(function(t) {","      return models[t].table === table;","    }).pop();","","    if (!modelKey) {","      throw new Error('Table \"' + table + '\" does not exist');","    }","","    let schemaFieldData = models[modelKey].columns.filter(function(v) {","      return v.name === column;","    }).pop();","","    if (!schemaFieldData) {","      throw new Error('Column \"' + column + '\" of table \"' + table + '\" does not exist');","    }","","    schemaFieldData.type = type;","","    this.mergeProperties(schemaFieldData, properties);","","    return true;","","  }","","  addColumn(table, column, type, properties) {","","    if (properties.primary_key) {","      delete properties.unique;","    }","","    let models = this.models;","    let modelKey = Object.keys(models).filter(function(t) {","      return models[t].table === table;","    }).pop();","","    if (!modelKey) {","      throw new Error('Table \"' + table + '\" does not exist');","    }","","    let modelSchema = models[modelKey];","","    let schemaFieldData = modelSchema.columns.filter(function(v) {","      return v.name === column;","    }).pop();","","    if (schemaFieldData) {","      throw new Error('Column \"' + column + '\" of table \"' + table + '\" already exists');","    }","","    let columnData = {","      name: column,","      type: type,","      properties: properties","    };","","    modelSchema.columns.push(columnData);","","    return true;","","  }","","  dropColumn(table, column) {","","    let models = this.models;","    let modelKey = Object.keys(models).filter(function(t) {","      return models[t].table === table;","    }).pop();","","    if (!modelKey) {","      throw new Error('Table \"' + table + '\" does not exist');","    }","","    let modelSchema = models[modelKey];","","    let columnIndex = modelSchema.columns.map(function(v, i) { return v.name; }).indexOf(column);","","    if (columnIndex === -1) {","      throw new Error('Column \"' + column + '\" of table \"' + table + '\" does not exist');","    }","","    modelSchema.columns.splice(columnIndex, 1);","","    return true;","","  }","","  renameColumn(table, column, newColumn) {","","    let models = this.models;","    let modelKey = Object.keys(models).filter(function(t) {","      return models[t].table === table;","    }).pop();","","    if (!modelKey) {","      throw new Error('Table \"' + table + '\" does not exist');","    }","","    let modelSchema = models[modelKey];","","    let schemaFieldData = modelSchema.columns.filter(function(v) {","      return v.name === column;","    }).pop();","","    if (!schemaFieldData) {","      throw new Error('Column \"' + column + '\" of table \"' + table + '\" already exists');","    }","","    schemaFieldData.name = newColumn;","","    return true;","","  }","","  createIndex(table, column, type) {","","    if (this.indices.filter(function(v) {","      return v.table === table && v.column === column;","    }).length) {","      throw new Error(`Index already exists on column \"${column}\" of table \"${table}\"`);","    }","","    this.indices.push({table: table, column: column, type: type});","","    return true","","  }","","  dropIndex(table, column) {","","    this.indices = this.indices.filter(function(v) {","      return !(v.table === table && v.column === column);","    });","","    return true;","","  }","","  addForeignKey(table, referenceTable) {","","    let tableClass = inflect.classify(table);","    let referenceTableClass = inflect.classify(referenceTable);","","    if (!this.models[tableClass]) {","      throw new Error(`Model ${tableClass} does not exist.`);","    }","","    if (!this.models[referenceTableClass]) {","      throw new Error(`Model ${referenceTableClass} does not exist.`);","    }","","    return true;","","  }","","  dropForeignKey(table, referenceTable) {","","    let tableClass = inflect.classify(table);","    let referenceTableClass = inflect.classify(referenceTable);","","    if (!this.models[tableClass]) {","      throw new Error(`Model ${tableClass} does not exist.`);","    }","","    if (!this.models[referenceTableClass]) {","      throw new Error(`Model ${referenceTableClass} does not exist.`);","    }","","    return true;","","  }","","  read(json) {","    return this.set(JSON.parse(json));","  }","","  generate() {","","    let models = this.models;","    let indices = this.indices;","    let hasModels = !!Object.keys(models).length;","    let hasIndices = indices.length;","","    let fileData = [","      '{',","      '',","      '  \"migration_id\": ' + this.migrationId + ((hasModels || hasIndices) ? ',' : ''),","    ];","","    if (hasIndices) {","","      fileData = fileData.concat([","        '',","        '  \"indices\": [',","          indices.map(function(indexData) {","            return [","              '    {',","                [","                  '\"table\": \"' + indexData.table + '\"',","                  '\"column\": \"' + indexData.column + '\"',","                  (indexData.type ? '\"type\": \"' + indexData.type+ '\"' : '')","                ].filter(function(v) { return !!v; }).join(', '),","              '}',","            ].join('');","          }).join(',\\n'),","        '  ]' + (hasModels ? ',' : ''),","      ]);","","    }","","    if (hasModels) {","","      fileData = fileData.concat([","        '',","        '  \"models\": {',","        '',","        Object.keys(models).sort().map(function(t) {","          let curTable = models[t];","          return [","            '    \"' + t + '\": {',","            '',","            '      \"table\": \"' + curTable.table + '\",',","            '',","            '      \"columns\": [',","            curTable.columns.map(function(columnData) {","              return [","                '        ',","                '{',","                  [","                    '\"name\": \"' + columnData.name + '\"',","                    '\"type\": \"' + columnData.type + '\"',","                    columnData.properties ? '\"properties\": ' + JSON.stringify(columnData.properties) : ''","                  ].filter(function(v) { return !!v; }).join(', '),","                '}'","              ].join('');","            }).join(',\\n'),","            '      ]',","            '',","            '    }'","          ].join('\\n');","        }).join(',\\n\\n'),","        '',","        '  }'","      ]);","","    }","","    return fileData.concat([","      '',","      '}',","      ''","    ]).join('\\n');","","  }","","}","","module.exports = SchemaGenerator;",""],"l":{"3":1,"4":1,"10":0,"12":0,"13":0,"14":0,"16":0,"21":0,"22":0,"23":0,"28":0,"30":0,"31":0,"34":0,"36":0,"43":0,"44":0,"45":0,"46":0,"51":0,"53":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"66":0,"68":0,"74":0,"75":0,"76":0,"78":0,"83":0,"88":0,"89":0,"90":0,"97":0,"99":0,"100":0,"103":0,"104":0,"107":0,"109":0,"110":0,"113":0,"114":0,"117":0,"118":0,"121":0,"122":0,"125":0,"127":0,"128":0,"131":0,"136":0,"142":0,"144":0,"145":0,"148":0,"150":0,"156":0,"158":0,"159":0,"162":0,"164":0,"165":0,"166":0,"167":0,"168":0,"171":0,"177":0,"178":0,"181":0,"182":0,"183":0,"186":0,"187":0,"190":0,"191":0,"194":0,"195":0,"198":0,"200":0,"202":0,"208":0,"209":0,"212":0,"213":0,"214":0,"217":0,"218":0,"221":0,"223":0,"224":0,"227":0,"228":0,"231":0,"237":0,"239":0,"245":0,"246":0,"247":0,"250":0,"251":0,"254":0,"256":0,"258":0,"259":0,"262":0,"264":0,"270":0,"271":0,"272":0,"275":0,"276":0,"279":0,"281":0,"282":0,"285":0,"286":0,"289":0,"291":0,"297":0,"298":0,"300":0,"303":0,"305":0,"311":0,"312":0,"315":0,"321":0,"322":0,"324":0,"325":0,"328":0,"329":0,"332":0,"338":0,"339":0,"341":0,"342":0,"345":0,"346":0,"349":0,"354":0,"359":0,"360":0,"361":0,"362":0,"364":0,"370":0,"372":0,"376":0,"382":0,"391":0,"393":0,"398":0,"399":0,"406":0,"413":0,"428":0,"438":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/mime.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/mime.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}}},"branchMap":{},"code":["module.exports = require('mime-types');",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/model_factory.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/model_factory.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":32}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":19},"end":{"line":27,"column":22}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":25},"end":{"line":47,"column":58}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":42}}},"5":{"name":"(anonymous_5)","line":85,"loc":{"start":{"line":85,"column":8},"end":{"line":85,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":34}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":29}},"6":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"7":{"start":{"line":31,"column":6},"end":{"line":31,"column":16}},"8":{"start":{"line":34,"column":4},"end":{"line":37,"column":74}},"9":{"start":{"line":36,"column":26},"end":{"line":36,"column":53}},"10":{"start":{"line":37,"column":23},"end":{"line":37,"column":73}},"11":{"start":{"line":49,"column":4},"end":{"line":60,"column":5}},"12":{"start":{"line":50,"column":6},"end":{"line":58,"column":8}},"13":{"start":{"line":51,"column":41},"end":{"line":51,"column":106}},"14":{"start":{"line":51,"column":53},"end":{"line":51,"column":106}},"15":{"start":{"line":53,"column":10},"end":{"line":55,"column":17}},"16":{"start":{"line":54,"column":12},"end":{"line":54,"column":39}},"17":{"start":{"line":56,"column":10},"end":{"line":56,"column":41}},"18":{"start":{"line":59,"column":6},"end":{"line":59,"column":13}},"19":{"start":{"line":62,"column":4},"end":{"line":67,"column":6}},"20":{"start":{"line":64,"column":25},"end":{"line":64,"column":84}},"21":{"start":{"line":65,"column":22},"end":{"line":65,"column":92}},"22":{"start":{"line":65,"column":34},"end":{"line":65,"column":92}},"23":{"start":{"line":66,"column":24},"end":{"line":66,"column":54}},"24":{"start":{"line":77,"column":4},"end":{"line":77,"column":76}},"25":{"start":{"line":89,"column":4},"end":{"line":93,"column":25}},"26":{"start":{"line":91,"column":8},"end":{"line":91,"column":49}},"27":{"start":{"line":99,"column":0},"end":{"line":99,"column":30}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":21},"end":{"line":53,"column":28}},{"start":{"line":53,"column":32},"end":{"line":53,"column":34}}]},"4":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":19},"end":{"line":56,"column":22}},{"start":{"line":56,"column":26},"end":{"line":56,"column":30}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":25},"end":{"line":64,"column":49}},{"start":{"line":64,"column":53},"end":{"line":64,"column":84}}]},"6":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":33},"end":{"line":66,"column":36}},{"start":{"line":66,"column":40},"end":{"line":66,"column":44}}]}},"code":["'use strict';","","const ModelArray = require('./model_array.js');","const fs = require('fs');","const async = require('async');","","/**","* Factory for creating models","* @class","*/","class ModelFactory {","","  /**","  * Create the ModelFactory with a provided Model to use as a reference.","  * @param {Nodal.Model} modelConstructor Must pass the constructor for the type of ModelFactory you wish to create.","  */","  constructor(modelConstructor) {","","    this.Model = modelConstructor;","","  }","","  /**","  * Loads all model constructors in your ./app/models directory into an array","  * @return {Array} Array of model Constructors","  */","  static loadModels() {","","    let dir = './app/models';","    if (!fs.existsSync(dir)) {","      return [];","    }","","    return fs","      .readdirSync(dir)","      .filter(filename => filename.indexOf('.') !== 0)","      .map(filename => require(`${process.cwd()}/app/models/${filename}`))","","  }","","  /**","  * Creates new factories from a supplied array of Models, loading in data keyed by Model name","  * @param {Array} Models Array of model constructors you wish to reference","  * @param {Object} objModelData Keys are model names, values are arrays of model data you wish to create","  * @param {Function} callback What to execute upon completion","  */","  static createFromModels(Models, objModelData, callback) {","","    if (objModelData instanceof Array) {","      async.series(","        objModelData.map(objModelData => callback => this.createFromModels(Models, objModelData, callback)),","        (err, results) => {","          results = (results || []).reduce((results, res) => {","            return results.concat(res);","          }, []);","          callback(err || null, results);","        }","      );","      return;","    }","","    async.parallel(","      Models","        .filter(Model => objModelData[Model.name] && objModelData[Model.name].length)","        .map(Model => callback => new this(Model).create(objModelData[Model.name], callback)),","      (err, results) => callback(err || null, results)","    );","","  }","","  /**","  * Populates a large amount of model data from an Object.","  * @param {Array} Models Array of Model constructors","  */","  static populate(objModelData, callback) {","","    return this.createFromModels(this.loadModels(), objModelData, callback);","","  }","","  /**","  * Creates models from an array of Objects containing the model data","  * @param {Array} arrModelData Array of objects to create model data from","  */","  create(arrModelData, callback) {","","    // new this.Model(data, false, true) is telling the Model that this is from a seed","","    ModelArray","      .from(arrModelData.map(data => {","        return new this.Model(data, false, true);","      }))","      .saveAll(callback);","","  }","","}","","module.exports = ModelFactory;",""],"l":{"3":1,"4":1,"5":1,"19":0,"29":0,"30":0,"31":0,"34":0,"36":0,"37":0,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"59":0,"62":0,"64":0,"65":0,"66":0,"77":0,"89":0,"91":0,"99":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/router.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/router.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}}},"branchMap":{},"code":["'use strict';","","const fxn = require('fxn');","","class Router extends fxn.Router {}","","module.exports = Router;",""],"l":{"3":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/scheduler.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/required/scheduler.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}}},"branchMap":{},"code":["'use strict';","","const fxn = require('fxn');","","/**","* Use to delegate tasks minutely, hourly, daily, or weekly.","* @class","*/","class Scheduler extends fxn.Scheduler {}","","module.exports = Scheduler;",""],"l":{"3":1,"11":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/my/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/my/config.js","s":{"1":10,"2":10,"3":10,"4":10,"5":10,"6":10,"7":10,"8":10,"9":10,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":38}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":16}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":20}},"11":{"start":{"line":21,"column":0},"end":{"line":38,"column":3}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":42}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":57}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"15":{"start":{"line":28,"column":2},"end":{"line":34,"column":3}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":59}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":55}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":40}},"19":{"start":{"line":33,"column":4},"end":{"line":33,"column":74}},"20":{"start":{"line":36,"column":2},"end":{"line":36,"column":62}},"21":{"start":{"line":40,"column":0},"end":{"line":40,"column":39}},"22":{"start":{"line":42,"column":0},"end":{"line":42,"column":24}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":9},"end":{"line":23,"column":22}},{"start":{"line":23,"column":26},"end":{"line":23,"column":56}}]}},"code":["'use strict';","","// Load env anew every time config is loaded","const env = require('./../env.js')();","","const fs = require('fs');","const path = require('path');","const dot = require('dot');","","let config = {};","","let varname = dot.templateSettings.varname;","","dot.templateSettings.varname = 'env';","","let dir = path.join(env.rootDirectory, 'config');","let configFiles = fs.readdirSync(dir);","","const ext = '.json';","","configFiles.filter(function(filename) {","  let name = path.basename(filename, ext);","  return !config[name] && path.extname(filename) === ext;","}).forEach(function(filename) {","","  let configData;","","  try {","    configData = fs.readFileSync(path.join(dir, filename));","    configData = dot.template(configData)(process.env);","    configData = JSON.parse(configData);","  } catch(e) {","    throw new Error(`Could not parse \"config/${filename}\": Invalid JSON`);","  }","","  config[path.basename(filename, ext)] = configData[env.name];","","});","","dot.templateSettings.varname = varname;","","module.exports = config;",""],"l":{"4":10,"6":10,"7":10,"8":10,"10":10,"12":10,"14":10,"16":10,"17":10,"19":0,"21":0,"22":0,"23":0,"26":0,"28":0,"29":0,"30":0,"31":0,"33":0,"36":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/my/schema.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/my/schema.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{"1":[1,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":16}},"4":{"start":{"line":8,"column":0},"end":{"line":12,"column":1}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":78}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":32}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":24}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":16},"end":{"line":15,"column":29}},{"start":{"line":15,"column":33},"end":{"line":15,"column":35}}]}},"code":["'use strict';","","const env = require('./../env.js')();","const fs = require('fs');","","let schema = {};","","try {","  schema = JSON.parse(fs.readFileSync(env.rootDirectory + '/db/schema.json'));","} catch(e) {","  schema = {migration_id: null};","}","","// If we don't have models (no migrations), set to empty object","schema.models = schema.models || {};","","module.exports = schema;",""],"l":{"3":1,"4":1,"6":1,"8":1,"9":1,"11":1,"15":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/my/bootstrapper.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/my/bootstrapper.js","s":{"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":16}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":11}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":9},"end":{"line":34,"column":20}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":8},"end":{"line":48,"column":19}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":17}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":9},"end":{"line":60,"column":20}}},"7":{"name":"(anonymous_7)","line":97,"loc":{"start":{"line":97,"column":9},"end":{"line":97,"column":20}}},"8":{"name":"(anonymous_8)","line":150,"loc":{"start":{"line":150,"column":9},"end":{"line":150,"column":27}}},"9":{"name":"(anonymous_9)","line":222,"loc":{"start":{"line":222,"column":10},"end":{"line":222,"column":28}}},"10":{"name":"(anonymous_10)","line":290,"loc":{"start":{"line":290,"column":6},"end":{"line":290,"column":17}}},"11":{"name":"(anonymous_11)","line":312,"loc":{"start":{"line":312,"column":14},"end":{"line":312,"column":29}}},"12":{"name":"(anonymous_12)","line":322,"loc":{"start":{"line":322,"column":11},"end":{"line":322,"column":22}}},"13":{"name":"(anonymous_13)","line":338,"loc":{"start":{"line":338,"column":9},"end":{"line":338,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":70}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":30}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":43}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}},"12":{"start":{"line":28,"column":4},"end":{"line":28,"column":32}},"13":{"start":{"line":29,"column":4},"end":{"line":29,"column":33}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"15":{"start":{"line":36,"column":4},"end":{"line":36,"column":28}},"16":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"17":{"start":{"line":39,"column":6},"end":{"line":39,"column":27}},"18":{"start":{"line":41,"column":6},"end":{"line":41,"column":25}},"19":{"start":{"line":44,"column":4},"end":{"line":44,"column":23}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":54}},"21":{"start":{"line":56,"column":4},"end":{"line":56,"column":52}},"22":{"start":{"line":62,"column":4},"end":{"line":93,"column":7}},"23":{"start":{"line":64,"column":6},"end":{"line":66,"column":7}},"24":{"start":{"line":65,"column":8},"end":{"line":65,"column":29}},"25":{"start":{"line":68,"column":6},"end":{"line":68,"column":49}},"26":{"start":{"line":70,"column":6},"end":{"line":70,"column":43}},"27":{"start":{"line":72,"column":6},"end":{"line":91,"column":8}},"28":{"start":{"line":82,"column":10},"end":{"line":84,"column":11}},"29":{"start":{"line":83,"column":12},"end":{"line":83,"column":33}},"30":{"start":{"line":86,"column":10},"end":{"line":86,"column":24}},"31":{"start":{"line":88,"column":10},"end":{"line":88,"column":94}},"32":{"start":{"line":99,"column":4},"end":{"line":146,"column":7}},"33":{"start":{"line":101,"column":6},"end":{"line":103,"column":7}},"34":{"start":{"line":102,"column":8},"end":{"line":102,"column":29}},"35":{"start":{"line":105,"column":6},"end":{"line":105,"column":49}},"36":{"start":{"line":108,"column":6},"end":{"line":111,"column":9}},"37":{"start":{"line":114,"column":6},"end":{"line":117,"column":7}},"38":{"start":{"line":119,"column":6},"end":{"line":144,"column":8}},"39":{"start":{"line":133,"column":10},"end":{"line":135,"column":11}},"40":{"start":{"line":134,"column":12},"end":{"line":134,"column":81}},"41":{"start":{"line":137,"column":10},"end":{"line":141,"column":11}},"42":{"start":{"line":138,"column":12},"end":{"line":138,"column":74}},"43":{"start":{"line":140,"column":12},"end":{"line":140,"column":70}},"44":{"start":{"line":152,"column":4},"end":{"line":218,"column":7}},"45":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"46":{"start":{"line":155,"column":8},"end":{"line":155,"column":29}},"47":{"start":{"line":158,"column":6},"end":{"line":158,"column":49}},"48":{"start":{"line":160,"column":6},"end":{"line":160,"column":25}},"49":{"start":{"line":162,"column":6},"end":{"line":216,"column":9}},"50":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"51":{"start":{"line":165,"column":10},"end":{"line":165,"column":31}},"52":{"start":{"line":168,"column":8},"end":{"line":214,"column":9}},"53":{"start":{"line":169,"column":10},"end":{"line":169,"column":74}},"54":{"start":{"line":172,"column":10},"end":{"line":172,"column":68}},"55":{"start":{"line":172,"column":52},"end":{"line":172,"column":64}},"56":{"start":{"line":174,"column":10},"end":{"line":182,"column":13}},"57":{"start":{"line":175,"column":12},"end":{"line":175,"column":47}},"58":{"start":{"line":175,"column":37},"end":{"line":175,"column":47}},"59":{"start":{"line":176,"column":12},"end":{"line":179,"column":14}},"60":{"start":{"line":181,"column":12},"end":{"line":181,"column":59}},"61":{"start":{"line":184,"column":10},"end":{"line":186,"column":11}},"62":{"start":{"line":185,"column":12},"end":{"line":185,"column":62}},"63":{"start":{"line":188,"column":10},"end":{"line":196,"column":13}},"64":{"start":{"line":190,"column":12},"end":{"line":190,"column":48}},"65":{"start":{"line":192,"column":12},"end":{"line":194,"column":14}},"66":{"start":{"line":193,"column":14},"end":{"line":193,"column":52}},"67":{"start":{"line":198,"column":10},"end":{"line":200,"column":11}},"68":{"start":{"line":199,"column":12},"end":{"line":199,"column":56}},"69":{"start":{"line":202,"column":10},"end":{"line":213,"column":12}},"70":{"start":{"line":206,"column":14},"end":{"line":208,"column":15}},"71":{"start":{"line":207,"column":16},"end":{"line":207,"column":37}},"72":{"start":{"line":210,"column":14},"end":{"line":210,"column":65}},"73":{"start":{"line":224,"column":4},"end":{"line":286,"column":7}},"74":{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},"75":{"start":{"line":227,"column":8},"end":{"line":227,"column":29}},"76":{"start":{"line":230,"column":6},"end":{"line":230,"column":49}},"77":{"start":{"line":232,"column":6},"end":{"line":232,"column":25}},"78":{"start":{"line":234,"column":6},"end":{"line":284,"column":9}},"79":{"start":{"line":236,"column":8},"end":{"line":238,"column":9}},"80":{"start":{"line":237,"column":10},"end":{"line":237,"column":31}},"81":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"82":{"start":{"line":241,"column":10},"end":{"line":241,"column":76}},"83":{"start":{"line":244,"column":8},"end":{"line":244,"column":66}},"84":{"start":{"line":244,"column":50},"end":{"line":244,"column":62}},"85":{"start":{"line":246,"column":8},"end":{"line":254,"column":21}},"86":{"start":{"line":247,"column":10},"end":{"line":247,"column":45}},"87":{"start":{"line":247,"column":35},"end":{"line":247,"column":45}},"88":{"start":{"line":248,"column":10},"end":{"line":251,"column":12}},"89":{"start":{"line":253,"column":10},"end":{"line":253,"column":57}},"90":{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},"91":{"start":{"line":257,"column":10},"end":{"line":257,"column":80}},"92":{"start":{"line":260,"column":8},"end":{"line":269,"column":27}},"93":{"start":{"line":262,"column":10},"end":{"line":262,"column":46}},"94":{"start":{"line":263,"column":10},"end":{"line":263,"column":98}},"95":{"start":{"line":265,"column":10},"end":{"line":267,"column":12}},"96":{"start":{"line":266,"column":12},"end":{"line":266,"column":77}},"97":{"start":{"line":271,"column":8},"end":{"line":282,"column":10}},"98":{"start":{"line":275,"column":12},"end":{"line":277,"column":13}},"99":{"start":{"line":276,"column":14},"end":{"line":276,"column":86}},"100":{"start":{"line":279,"column":12},"end":{"line":279,"column":59}},"101":{"start":{"line":292,"column":4},"end":{"line":308,"column":7}},"102":{"start":{"line":294,"column":6},"end":{"line":296,"column":7}},"103":{"start":{"line":295,"column":8},"end":{"line":295,"column":29}},"104":{"start":{"line":298,"column":6},"end":{"line":298,"column":49}},"105":{"start":{"line":300,"column":6},"end":{"line":300,"column":29}},"106":{"start":{"line":302,"column":6},"end":{"line":304,"column":7}},"107":{"start":{"line":303,"column":8},"end":{"line":303,"column":127}},"108":{"start":{"line":306,"column":6},"end":{"line":306,"column":51}},"109":{"start":{"line":314,"column":4},"end":{"line":318,"column":5}},"110":{"start":{"line":315,"column":6},"end":{"line":315,"column":24}},"111":{"start":{"line":316,"column":6},"end":{"line":316,"column":39}},"112":{"start":{"line":317,"column":6},"end":{"line":317,"column":19}},"113":{"start":{"line":324,"column":4},"end":{"line":334,"column":7}},"114":{"start":{"line":325,"column":14},"end":{"line":325,"column":27}},"115":{"start":{"line":326,"column":14},"end":{"line":326,"column":29}},"116":{"start":{"line":327,"column":14},"end":{"line":327,"column":30}},"117":{"start":{"line":328,"column":14},"end":{"line":328,"column":33}},"118":{"start":{"line":329,"column":14},"end":{"line":329,"column":27}},"119":{"start":{"line":332,"column":6},"end":{"line":332,"column":28}},"120":{"start":{"line":340,"column":4},"end":{"line":348,"column":7}},"121":{"start":{"line":341,"column":14},"end":{"line":341,"column":30}},"122":{"start":{"line":342,"column":14},"end":{"line":342,"column":33}},"123":{"start":{"line":343,"column":14},"end":{"line":343,"column":27}},"124":{"start":{"line":346,"column":6},"end":{"line":346,"column":28}},"125":{"start":{"line":354,"column":0},"end":{"line":354,"column":36}}},"branchMap":{"1":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":6}},{"start":{"line":64,"column":6},"end":{"line":64,"column":6}}]},"2":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":10},"end":{"line":82,"column":10}},{"start":{"line":82,"column":10},"end":{"line":82,"column":10}}]},"3":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"4":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":10},"end":{"line":133,"column":10}},{"start":{"line":133,"column":10},"end":{"line":133,"column":10}}]},"5":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":10},"end":{"line":137,"column":10}},{"start":{"line":137,"column":10},"end":{"line":137,"column":10}}]},"6":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":14},"end":{"line":137,"column":25}},{"start":{"line":137,"column":29},"end":{"line":137,"column":47}}]},"7":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":6}},{"start":{"line":154,"column":6},"end":{"line":154,"column":6}}]},"8":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":14},"end":{"line":160,"column":19}},{"start":{"line":160,"column":23},"end":{"line":160,"column":24}}]},"9":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":8}},{"start":{"line":164,"column":8},"end":{"line":164,"column":8}}]},"10":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":8}},{"start":{"line":168,"column":8},"end":{"line":168,"column":8}}]},"11":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":12},"end":{"line":175,"column":12}},{"start":{"line":175,"column":12},"end":{"line":175,"column":12}}]},"12":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":19},"end":{"line":181,"column":23}},{"start":{"line":181,"column":27},"end":{"line":181,"column":58}}]},"13":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":10},"end":{"line":184,"column":10}},{"start":{"line":184,"column":10},"end":{"line":184,"column":10}}]},"14":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":10},"end":{"line":198,"column":10}},{"start":{"line":198,"column":10},"end":{"line":198,"column":10}}]},"15":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":14},"end":{"line":206,"column":14}},{"start":{"line":206,"column":14},"end":{"line":206,"column":14}}]},"16":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":6}},{"start":{"line":226,"column":6},"end":{"line":226,"column":6}}]},"17":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":14},"end":{"line":232,"column":19}},{"start":{"line":232,"column":23},"end":{"line":232,"column":24}}]},"18":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"19":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"20":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":10},"end":{"line":247,"column":10}},{"start":{"line":247,"column":10},"end":{"line":247,"column":10}}]},"21":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":17},"end":{"line":253,"column":21}},{"start":{"line":253,"column":25},"end":{"line":253,"column":56}}]},"22":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":256,"column":8}},{"start":{"line":256,"column":8},"end":{"line":256,"column":8}}]},"23":{"line":263,"type":"cond-expr","locations":[{"start":{"line":263,"column":60},"end":{"line":263,"column":90}},{"start":{"line":263,"column":93},"end":{"line":263,"column":97}}]},"24":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":12},"end":{"line":275,"column":12}},{"start":{"line":275,"column":12},"end":{"line":275,"column":12}}]},"25":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":6}},{"start":{"line":294,"column":6},"end":{"line":294,"column":6}}]},"26":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":6}},{"start":{"line":302,"column":6},"end":{"line":302,"column":6}}]},"27":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":6},"end":{"line":316,"column":9}},{"start":{"line":316,"column":14},"end":{"line":316,"column":37}}]},"28":{"line":332,"type":"binary-expr","locations":[{"start":{"line":332,"column":15},"end":{"line":332,"column":18}},{"start":{"line":332,"column":22},"end":{"line":332,"column":26}}]},"29":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":15},"end":{"line":346,"column":18}},{"start":{"line":346,"column":22},"end":{"line":346,"column":26}}]}},"code":["'use strict';","","const fs = require('fs');","const async = require('async');","const colors = require('colors/safe');","","const Database = require('../required/db/database.js');","const SchemaGenerator = require('../required/db/schema_generator.js');","","const ModelFactory = require('../required/model_factory.js');","","const Config = require('./config.js');","","const MIGRATION_PATH = './db/migrations';","","class Bootstrapper {","","  constructor() {","","    this.cfg = Config.db.main;","    this.rootCfg = Object.create(this.cfg);","    this.rootCfg.database = 'postgres';","","  }","","  rootDb() {","","    let rootDb = new Database();","    rootDb.connect(this.rootCfg);","    return rootDb;","","  }","","  connect(callback) {","","    let db = new Database();","","    try {","      db.connect(this.cfg);","    } catch (e) {","      return callback(e);","    }","","    callback(null, db);","","  }","","  create(callback) {","","    this.rootDb().create(this.cfg.database, callback);","","  }","","  drop(callback) {","","    this.rootDb().drop(this.cfg.database, callback);","","  }","","  prepare(callback) {","","    this.connect((err, db) => {","","      if (err) {","        return callback(err);","      }","","      callback = this.wrapCallback(db, callback);","","      let schema = new SchemaGenerator(db);","","      db.transaction(","        [","          db.adapter.generateClearDatabaseQuery(),","          db.adapter.generateCreateTableQuery('schema_migrations', [","            {name: 'id', type: 'int', properties: {nullable: false, primary_key: true}},","            {name: 'schema', type: 'string'}","          ])","        ].join(';'),","        (err, result) => {","","          if (err) {","            return callback(err);","          }","","          schema.save();","","          callback(null, `Prepared database \"${db.adapter._config.database}\" for migrations`);","","        }","      );","","    });","","  }","","  version(callback) {","","    this.connect((err, db) => {","","      if (err) {","        return callback(err);","      }","","      callback = this.wrapCallback(db, callback);","","      // Query schema by the Id column, descending","      let orderClause = [{","        columnNames: ['id'],","        direction: 'DESC'","      }];","","      // Only fetch one row","      let limitClause = {","        offset: 0,","        count: 1","      }","","      db.query(","        db.adapter.generateSelectQuery(","          null,","          'schema_migrations',","          ['id'],","          null,","          null,","          null,","          orderClause,","          limitClause","        ),","        [],","        (err, result) => {","","          if (err) {","            return callback(new Error('Could not get schema migration version'));","          }","","          if (result.rows && result.rows.length) {","            return callback(null, `Schema version: ${result.rows[0].id}`);","          } else {","            return callback(new Error('No Migrations have been run'));","          }","","        }","      );","","    });","","  }","","  migrate(steps, callback) {","","    this.connect((err, db) => {","","      if (err) {","        return callback(err);","      }","","      callback = this.wrapCallback(db, callback);","","      steps = steps || 0;","","      db.query(db.adapter.generateSelectQuery(null, 'schema_migrations', ['id']), [], (err, result) => {","","        if (err) {","          return callback(err);","        }","","        if (!fs.existsSync(MIGRATION_PATH)) {","          return callback(db.info(`No migrations in \"${MIGRATION_PATH}\"`))","        } else {","","          let schema_ids = result.rows.map((v) => { return v.id; });","","          let migrations = fs.readdirSync(MIGRATION_PATH).map((v) => {","            if(v.indexOf('.') === 0) return {};","            return {","              id: parseInt(v.substr(0, v.indexOf('__'))),","              migration: new (require(process.cwd() + '/' + MIGRATION_PATH + '/' + v))(db)","            };","          }).filter((v) => {","            return v.id && schema_ids.indexOf(v.id) === -1;","          });","","          if (migrations.length === 0) {","            return callback(db.info('No pending migrations'));","          }","","          let migrateFuncs = migrations.map((v) => {","","            let migrationInstance = v.migration;","","            return (callback) => {","              migrationInstance.executeUp(callback);","            };","","          });","","          if (steps) {","            migrateFuncs = migrateFuncs.slice(0, steps);","          }","","          async.series(","            migrateFuncs,","            (err) => {","","              if (err) {","                return callback(err);","              }","","              callback(null, 'Migration completed successfully');","","            }","          );","        }","","      });","","    });","","  }","","  rollback(steps, callback) {","","    this.connect((err, db) => {","","      if (err) {","        return callback(err);","      }","","      callback = this.wrapCallback(db, callback);","","      steps = steps || 1;","","      db.query(db.adapter.generateSelectQuery(null, 'schema_migrations', ['id']), [], (err, result) => {","","        if (err) {","          return callback(err);","        }","","        if (!fs.existsSync(MIGRATION_PATH)) {","          return callback(new Error(`No migrations in \"${MIGRATION_PATH}\"`))","        }","","        let schema_ids = result.rows.map((v) => { return v.id; });","","        let migrations = fs.readdirSync(MIGRATION_PATH).map((v) => {","          if(v.indexOf('.') === 0) return {};","          return {","            id: parseInt(v.substr(0, v.indexOf('__'))),","            migration: new (require(process.cwd() + '/' + MIGRATION_PATH + '/' + v))(db)","          };","        }).filter((v) => {","          return v.id && schema_ids.indexOf(v.id) !== -1;","        }).reverse();","","        if (migrations.length === 0) {","          return callback(new Error('Could not find any completed migrations'));","        }","","        let migrateFuncs = migrations.map((v, i) => {","","          let migrationInstance = v.migration;","          let nextMigrationInstanceId = migrations[i + 1] ? migrations[i + 1].migration.id : null;","","          return (callback) => {","            migrationInstance.executeDown(callback, nextMigrationInstanceId);","          };","","        }).slice(0, steps);","","        async.series(","          migrateFuncs,","          (err) => {","","            if (err) {","              return callback(new Error('Migration rollback could not be completed'));","            }","","            callback(null, 'Migration rollback complete!');","","          }","        );","","      });","","    });","","  }","","  seed(callback) {","","    this.connect((err, db) => {","","      if (err) {","        return callback(err);","      }","","      callback = this.wrapCallback(db, callback);","","      let seed = Config.seed;","","      if (!seed) {","        return callback(new Error('Could not seed, no seed found in \"./config/seed.json\". Please make sure JSON is correct.'));","      }","","      return ModelFactory.populate(seed, callback);","","    });","","  }","","  wrapCallback(db, callback) {","","    return (err) => {","      let cb = callback;","      err && (cb = cb.bind(null, err));","      db.close(cb);","    }","","  }","","  bootstrap(callback) {","","    async.series([","      (cb) => this.drop(cb),","      (cb) => this.create(cb),","      (cb) => this.prepare(cb),","      (cb) => this.migrate(0, cb),","      (cb) => this.seed(cb)","    ], (err) => {","","      callback(err || null);","","    });","","  }","","  compose(callback) {","","    async.series([","      (cb) => this.prepare(cb),","      (cb) => this.migrate(0, cb),","      (cb) => this.seed(cb)","    ], (err) => {","","      callback(err || null);","","    });","","  }","","}","","module.exports = new Bootstrapper();",""],"l":{"3":4,"4":4,"5":4,"7":4,"8":4,"10":4,"12":4,"14":0,"20":0,"21":0,"22":0,"28":0,"29":0,"30":0,"36":0,"38":0,"39":0,"41":0,"44":0,"50":0,"56":0,"62":0,"64":0,"65":0,"68":0,"70":0,"72":0,"82":0,"83":0,"86":0,"88":0,"99":0,"101":0,"102":0,"105":0,"108":0,"114":0,"119":0,"133":0,"134":0,"137":0,"138":0,"140":0,"152":0,"154":0,"155":0,"158":0,"160":0,"162":0,"164":0,"165":0,"168":0,"169":0,"172":0,"174":0,"175":0,"176":0,"181":0,"184":0,"185":0,"188":0,"190":0,"192":0,"193":0,"198":0,"199":0,"202":0,"206":0,"207":0,"210":0,"224":0,"226":0,"227":0,"230":0,"232":0,"234":0,"236":0,"237":0,"240":0,"241":0,"244":0,"246":0,"247":0,"248":0,"253":0,"256":0,"257":0,"260":0,"262":0,"263":0,"265":0,"266":0,"271":0,"275":0,"276":0,"279":0,"292":0,"294":0,"295":0,"298":0,"300":0,"302":0,"303":0,"306":0,"314":0,"315":0,"316":0,"317":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"332":0,"340":0,"341":0,"342":0,"343":0,"346":0,"354":0}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/mocha/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/mocha/test.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":26}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":10},"end":{"line":15,"column":17}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":5},"end":{"line":28,"column":18}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":7},"end":{"line":32,"column":13}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":5},"end":{"line":36,"column":25}}},"6":{"name":"(anonymous_6)","line":40,"loc":{"start":{"line":40,"column":6},"end":{"line":40,"column":9}}},"7":{"name":"(anonymous_7)","line":48,"loc":{"start":{"line":48,"column":10},"end":{"line":48,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":57}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":20}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":79}},"5":{"start":{"line":11,"column":54},"end":{"line":11,"column":76}},"6":{"start":{"line":17,"column":4},"end":{"line":24,"column":7}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":55}},"8":{"start":{"line":19,"column":36},"end":{"line":19,"column":53}},"9":{"start":{"line":20,"column":6},"end":{"line":20,"column":52}},"10":{"start":{"line":20,"column":34},"end":{"line":20,"column":50}},"11":{"start":{"line":22,"column":6},"end":{"line":22,"column":22}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":27}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":75}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":57}},"16":{"start":{"line":56,"column":0},"end":{"line":56,"column":22}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":17}},{"start":{"line":19,"column":21},"end":{"line":19,"column":54}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":16}},{"start":{"line":20,"column":20},"end":{"line":20,"column":51}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":44},"end":{"line":37,"column":59}},{"start":{"line":37,"column":62},"end":{"line":37,"column":74}}]}},"code":["'use strict';","","const EndpointRequest = require('./endpoint_request.js');","","class Test {","","  constructor(testRunner) {","","    this._data = {};","    this.testRunner = testRunner;","    Object.defineProperty(this, 'router', {get: () => this.testRunner.router});","","  }","","  __test__(verb) {","","    describe(this.constructor.name, () => {","","      this.before && before(done => this.before(done));","      this.after && after(done => this.after(done));","","      this.test(verb);","","    });","","  }","","  set(key, value) {","    return this._data[key] = value;","  }","","  unset(key) {","    delete this._data[key];","  }","","  get(key, defaultValue) {","    return this._data.hasOwnProperty(key) ? this._data[key] : defaultValue;","  }","","  test() {}","","  /**","  * Creates a new MockRequest object (emulates an HTTP request)","  * @param {string} path The path you wish to hit","  * @param {Object} query The query parameters you wish to pass","  * @return {Nodal.EndpointRequest}","  */","  endpoint(path, query) {","","    return new EndpointRequest(this.router, path, query);","","  }","","}","","module.exports = Test;",""],"l":{"3":1,"9":0,"10":0,"11":0,"17":0,"19":0,"20":0,"22":0,"29":0,"33":0,"37":0,"50":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/mocha/endpoint_request.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/mocha/endpoint_request.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":36}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":6},"end":{"line":20,"column":14}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":6},"end":{"line":31,"column":40}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":5},"end":{"line":80,"column":16}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":5},"end":{"line":86,"column":16}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":6},"end":{"line":92,"column":23}}},"7":{"name":"(anonymous_7)","line":98,"loc":{"start":{"line":98,"column":5},"end":{"line":98,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":25}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":65}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"6":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"7":{"start":{"line":15,"column":6},"end":{"line":15,"column":64}},"8":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"9":{"start":{"line":23,"column":6},"end":{"line":23,"column":57}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":16}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":28}},"13":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":56}},"15":{"start":{"line":39,"column":4},"end":{"line":46,"column":5}},"16":{"start":{"line":41,"column":11},"end":{"line":46,"column":5}},"17":{"start":{"line":42,"column":6},"end":{"line":42,"column":46}},"18":{"start":{"line":43,"column":6},"end":{"line":43,"column":51}},"19":{"start":{"line":45,"column":6},"end":{"line":45,"column":35}},"20":{"start":{"line":48,"column":4},"end":{"line":76,"column":6}},"21":{"start":{"line":58,"column":8},"end":{"line":58,"column":24}},"22":{"start":{"line":60,"column":8},"end":{"line":71,"column":9}},"23":{"start":{"line":61,"column":10},"end":{"line":61,"column":23}},"24":{"start":{"line":62,"column":10},"end":{"line":62,"column":31}},"25":{"start":{"line":65,"column":10},"end":{"line":69,"column":11}},"26":{"start":{"line":66,"column":12},"end":{"line":66,"column":47}},"27":{"start":{"line":68,"column":12},"end":{"line":68,"column":24}},"28":{"start":{"line":73,"column":8},"end":{"line":73,"column":46}},"29":{"start":{"line":82,"column":4},"end":{"line":82,"column":41}},"30":{"start":{"line":88,"column":4},"end":{"line":88,"column":44}},"31":{"start":{"line":94,"column":4},"end":{"line":94,"column":42}},"32":{"start":{"line":100,"column":4},"end":{"line":100,"column":41}},"33":{"start":{"line":106,"column":0},"end":{"line":106,"column":33}}},"branchMap":{"1":{"line":10,"type":"cond-expr","locations":[{"start":{"line":10,"column":32},"end":{"line":10,"column":58}},{"start":{"line":10,"column":61},"end":{"line":10,"column":63}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":14},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":27}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":11}},{"start":{"line":41,"column":11},"end":{"line":41,"column":11}}]},"8":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":19}},{"start":{"line":41,"column":23},"end":{"line":41,"column":47}}]},"9":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]}},"code":["'use strict';","","const qs = require('querystring');","","class EndpointRequest {","","  constructor(router, path, params) {","","    this.router = router;","    this.url = path + (params ? `?${qs.stringify(params)}` : '');","    this.route = this.router.find(this.url);","    this.token = null;","","    if (!this.route) {","      throw new Error(`Route for ${this._path} does not exist`);","    }","","  }","","  auth(token) {","","    if (this.token) {","      throw new Error('Authorization token already set');","    }","","    this.token = token;","    return this;","","  }","","  mock(method, headers, body, callback) {","","    headers = headers || {};","","    if (this.token) {","      headers['authorization'] = `Bearer ${this.token}`;","    }","","    if (body instanceof Buffer) {","      // do nothing","    } else if (body && typeof body === 'object') {","      body = new Buffer(JSON.stringify(body));","      headers['content-type'] = 'application/json';","    } else {","      body = new Buffer(body + '');","    }","","    return this.router.dispatch(","      this.router.prepare(","        '::1',","        this.url,","        method,","        headers,","        body","      ),","      (err, status, headers, body) => {","","        let json = null;","","        if (err) {","          status = 500;","          body = new Buffer(0);","        } else {","","          try {","            json = JSON.parse(body.toString());","          } catch (e) {","            json = null;","          }","","        }","","        callback(status, headers, body, json);","","      }","    );","","  }","","  get(callback) {","","    this.mock('GET', {}, null, callback);","","  }","","  del(callback) {","","    this.mock('DELETE', {}, null, callback);","","  }","","  post(body, callback) {","","    this.mock('POST', {}, body, callback);","","  }","","  put(body, callback) {","","    this.mock('PUT', {}, body, callback);","","  }","","}","","module.exports = EndpointRequest;",""],"l":{"3":1,"9":0,"10":0,"11":0,"12":0,"14":0,"15":0,"22":0,"23":0,"26":0,"27":0,"33":0,"35":0,"36":0,"39":0,"41":0,"42":0,"43":0,"45":0,"48":0,"58":0,"60":0,"61":0,"62":0,"65":0,"66":0,"68":0,"73":0,"82":0,"88":0,"94":0,"100":0,"106":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/mocha/test_runner.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/core/mocha/test_runner.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":13},"end":{"line":8,"column":27}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":7},"end":{"line":15,"column":10}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":7},"end":{"line":54,"column":14}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":19}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":25}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":19}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"7":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"8":{"start":{"line":21,"column":6},"end":{"line":21,"column":31}},"9":{"start":{"line":22,"column":6},"end":{"line":22,"column":64}},"10":{"start":{"line":25,"column":4},"end":{"line":45,"column":6}},"11":{"start":{"line":27,"column":6},"end":{"line":43,"column":7}},"12":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"13":{"start":{"line":31,"column":10},"end":{"line":31,"column":52}},"14":{"start":{"line":32,"column":10},"end":{"line":32,"column":70}},"15":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"16":{"start":{"line":37,"column":10},"end":{"line":37,"column":17}},"17":{"start":{"line":40,"column":8},"end":{"line":40,"column":56}},"18":{"start":{"line":41,"column":8},"end":{"line":41,"column":35}},"19":{"start":{"line":47,"column":4},"end":{"line":47,"column":63}},"20":{"start":{"line":48,"column":4},"end":{"line":48,"column":54}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":17}},"22":{"start":{"line":56,"column":4},"end":{"line":60,"column":7}},"23":{"start":{"line":58,"column":6},"end":{"line":58,"column":23}},"24":{"start":{"line":66,"column":0},"end":{"line":66,"column":28}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":40},"end":{"line":22,"column":46}},{"start":{"line":22,"column":49},"end":{"line":22,"column":63}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"4":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":35}},{"start":{"line":29,"column":39},"end":{"line":29,"column":58}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"6":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":18}},{"start":{"line":36,"column":22},"end":{"line":36,"column":41}}]},"7":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":46},"end":{"line":47,"column":54}},{"start":{"line":47,"column":58},"end":{"line":47,"column":61}}]}},"code":["'use strict';","","const fs = require('fs');","const path = require('path');","","class TestRunner {","","  constructor(dir, router) {","","    this.dir = dir;","    this.router = router;","","  }","","  tests() {","","    let tests = [];","    let filter;","","    if (process.argv.length > 3) {","      filter = process.argv[3];","      filter = filter.endsWith('.js') ? filter : `${filter}.js`;","    }","","    let addTest = dir => {","","      return filename => {","","        if (!path.extname(filename) && filename[0] !== '.') {","","          let nextDir = path.resolve(dir, filename);","          return fs.readdirSync(nextDir).forEach(addCommand(nextDir));","","        }","","        if (filter && filename !== filter) {","          return;","        }","","        let Test = require(path.resolve(dir, filename));","        tests.push(new Test(this));","","      }","","    };","","    let testDir = path.resolve(process.cwd(), this.dir || '/');","    fs.readdirSync(testDir).forEach(addTest(testDir));","","    return tests;","","  }","","  start(verb) {","","    this.tests().forEach(t => {","","      t.__test__(verb);","","    });","","  }","","}","","module.exports = TestRunner;",""],"l":{"3":1,"4":1,"10":0,"11":0,"17":0,"18":0,"20":0,"21":0,"22":0,"25":0,"27":0,"29":0,"31":0,"32":0,"36":0,"37":0,"40":0,"41":0,"47":0,"48":0,"50":0,"56":0,"58":0,"66":1}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/src/cluster.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/src/cluster.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":0,"7":0},"b":{"1":[2,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":6,"column":0},"end":{"line":16,"column":1}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":36}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":45}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":38}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":43}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":0},"end":{"line":6,"column":0}},{"start":{"line":6,"column":0},"end":{"line":6,"column":0}}]}},"code":["'use strict';","","const Nodal = require('nodal');","const cluster = require('cluster');","","if (cluster.isMaster) {","","  const daemon = new Nodal.Daemon();","  daemon.start(Nodal.my.Config.secrets.port);","","} else {","","  const app = new Nodal.Application();","  app.listen(Nodal.my.Config.secrets.port);","","}",""],"l":{"3":2,"4":2,"6":2,"8":2,"9":2,"13":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/src/worker.js":{"path":"/home/travis/build/npmtest/node-npmtest-nodal/node_modules/nodal/src/worker.js","s":{"1":2,"2":2,"3":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}}},"branchMap":{},"code":["'use strict';","","const Nodal = require('nodal');","","const SchedulerMain = Nodal.require('schedulers/main.js');","","SchedulerMain.start();",""],"l":{"3":2,"5":2,"7":0}}}